%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: capstone.dvi
%%CreationDate: Mon Oct 29 19:15:47 2018
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold URWPalladioL-Ital
%%+ NimbusSanL-Bold NimbusSanL-Regu CMSY7 NimbusSanL-ReguItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter capstone.dvi -o
%+ capstone.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.10.29:1915
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA69A02324B25A4AE1DA613DD515646DDB50EC74CB6F3B39F2B15E49E
7785E6C3E46FC688D9C178153E0CFE7394902134A589DC79449C094B06D0EE4D
A07346171F817A438754844F5450D07BA987D11139D13D06DE5AACB3B40C2AD4
1905F33283C97AC9C2425FB9F35B28EF86C23136E1EBE501E971AFE81E82D111
89E10D336043BE3C6F89AD4B0309808AD7A1DC0430AC5DA38AEEBAA87DC3DC4E
514981585C21638900C3AF88825D444E3C0B1C0983B448D77FDB790547FF23C8
60C2CFDCABB5E6428AD036B8230FE1B4402942F0B098675BF3042A3E56C84393
D284E6B82BC7CDFE0189EDCA472BDD5A7B8E16D60732C0C6C59A860FB262168E
BB9F88CE3EDA258CBA38D18B84609728B4FF99FC5EC34ED03BEB739D97836398
F1A2537656CC7E9CF8704FFCADC6D52F6F525D6DB5EA9B17E4EFC9F017F2AF54
F5A31E7FC29D5E7F4A8D87F5B5C3DC10D1FABF332D5EB49BE21977146C8872EC
AD4D82A933AF0D49F134FD616325A383D88E27041E38FCE81A6B26171422FFDE
5BBC3AF8BC50F0EE6AF1B93250698AA65918DC87CBA6F4A233184480098C1FCC
B58DFFD9888503B8A070830EA0C3BC5E8DF9F395FD83FAE697F01FDFE9B08B54
73DD51A322ADB72FBD8794B3F51A1B1FA2BA413D2E7102D4E79B1FC1A8833F7E
DD86D159B22A3CEB7B6042FEEBA5AA77C19171B17FE1C338E47B83FCA9E18FB2
CE0677D2D88D07CDC526AB63CF3992625AF95FEBC160B0436A5C6FB679DBB3EC
55E1F756439D26453525D02165FC19274A879B02E0392E5AF97B16F09D2B8A3B
514BC1BC6330C265A5B7F41D915514AA0FAF252C2D470BE990B6383FB3CF998B
84796AD4F1646204CFA8DE394E30CE29175A0E7D978742CEE7D5CE5A41AD7F4A
22319CE431A9B3E3471C609BFFD6A27A96351DC61E31ABD398C1D3B450D864B6
B348501D3073C42AC1EEB4E833C78DA356D705D287736C6EA41428769FC4D396
7A1EBAE24AD8EAEE5761B51B323B4EEAEB33C9BF277205ADCD794ABEE8140C79
C4726A3E70646C4EBC7B0BE5614F087F8068148480E3FC88467739B502318C58
5730886F0CB27373524C3D2359305CF95DBE48D71C245F4EA749308A38C95596
C8B34E67C403E438AD16F23E91C13B19C9E1E5DE27DFA15F805CB826003A7AED
8C2CD363A15B1C58396E03E0233E847A76B8690695471D999870F0D3F09A70A7
FFA443AFCD1EE2C1AA1F7FBC44F4CAAC38BF151DE1905E9891812A71D2E6F748
C621CA136E05B7FEE5E345281F240B23BD7B7038BF59D69516A5787FE27909FB
9EFECC75A930F81194039A9A205D1BDE938E23502689B27B6C612E54730F6789
746168CD1A7C9A30F7D6E4B956858F5AE4AC189FF19D8A2E285ABBC2F2530235
9D4C009797ADC8F0F052B095C74EB91E9C0D49F57195A760FFDA0E987DF51D34
CE11FDA0EED949A633EEE796AAF869B19C2BB9CDEC0EFB90658079FFDF9DEBB4
C6B53969938E1CB2A4E69F75DC4D4028B65E1D5020196A6DC855566736B37B87
93CDE30B1FD504A26141D63C24C71F8EF7E142AF5F178E57A220100CC44A817C
F522C3F09EF0B3C811129B3ADB48A361DCB3E95CEA640C1B6AFED2AF1995932C
9982BFB180DECE138E96DCB47676ABEBC7151C3D8BC065A1A03AEFED557762AF
BE56CE329CF2FAD6AA65CBC541C422E46EAFCBC9B6F0E107430EDD3C9E35E373
AAAF1351A36927DD8D12C99B241F956D0347298F3931565FD0272F324944203F
B6F90C081BD67690B78E5D8DEF304F78D49650A22C92A9BF377AAE0DDE3EDD31
6E150B95BF126D945024CEB0A55575A0D6327CDA830F50D65705F2B04047387A
8505EE5CC8DEDE2F38659173C99A1A309F333FECAF405B238B7F6ED7BE79A95F
1E20C5803D91496C5267627F18F1C4217E1C733B5A59490DE4A89C46874EB6BA
5328F148EFC4A62FC3E79B7EA6B4AAB2ADC0B4E166959A2291BCE0FBC000930A
97D3DB228FC3E87B1D2996CE63ECFFE73C6F9D8E1DCD3AEDAC075BE55E1CE326
F965131F2823A5BDE0F68166F5ADEA4F1FCF34FBCBF0B70797D3C1A09FCC2F6F
E65F484C864CA696BBACE31AD3BECE8B88B7B05EB47723E813CFA5BA73B9E4FD
D8B2134990EF64385728D371CFB987638B1580C006AFB4C719015988193D22CF
2A4B2A6B0AC78CD8A8372599925EA9417215A78575D1C3B3B9511A6D946A6FE9
2818F2E4618A22686A082CEFD66868556F67877094BADBE9DE6A484BA1530E12
5722DC49C868D31A78D3D7A5FAEC66719F4F3E16AC3CEEE7F3D8BB8261391BCB
4BEB47D5023055DE8A164530D418AC568AA0FD76589DCDB65286767323D85E1A
EEA68C64BB558D16966BB83C277AE22FA6B2A91313858334C8553A6CBE5B6653
635186E78B023290110DFB343D7F082141D1FD9C0F2CEBDCC5B17E0C853E65BD
4334515A36C4A3857DF89E9A364CBBE1990A7D9A8847233E8BB08A2D6A019E0C
23A5F62943F2013FBB87E20F32679BCD74F75500A025264B10516B34BB3A77B2
F61FCDBB63BC041D0F1864E68F76D94B35F9EF691B982EE57555B3BAF61227FA
5D8B5F0EF37D6112394743E3ED48CA9E79AD83925211681D6310532025C42661
95FFFE2CFE2D1103A114809E05A1EDF67AD634C30E4CCCEB89256F435574384B
9CB022FB0FCFA4D4A4E4378FD4106D841D959F631479EED8D6AB37B68DC2631E
1C40234AA364578EB1A6B7D39482EB8DC1A51C2AB1C33D01CF1689F495419984
79344685B34573A85D043239B3507DA87489386BAF2B93254563B770E7810726
F34CF69B90D18F27D1B02D9FDACD0BF095F9EC8A3E3826F86A3D64FED7AFD27F
38035221A7A76219104520FEE1594C5FD9593A87E36982EB7092958D63B6CD1B
0660DBD70C0B9793E7083FB7F1DB197A9E155D3695D7BB05274659BC2B5120EE
95781D781EA61D275F34EAE9D62DAD09AFF0AF811FC14A854B1E6785355CE137
5C57DF1F9BD6562FAC9831F42602ECC4C63AE7EA3C1046A6D5C6B373043AA932
A4BB4B3866E32C399D136692C0F5669500BF8DD638A097692194931BDE4D9082
EA1FC567A4E9796E5465FBC71D6BE31CBD1EA46376D8DAFE9D9902E0B77B8060
222F2919DDD1D22E0C3D1CE9930B4C14F1F3ABA897501C0DE235EDD5CEFB270B
7ABCBD30E68AEC4719CC8BC3CB2DE8D84CF68C9247F1FDF51488B6C7EA37D7D6
7EB0E4B0D6076E50F1045B604798375C3FDAB86C5D11C1807FF4F474106E3031
51DA98D43FD0451BD7F7E59E5D38CFBA8770D27DE92EBF72C65A22DEE53B395D
7CCD2E16EFD2C254DDA2CB1297B49D7AE2E7EDF3E919A346F32E28D5DA0B38B2
BC6287E546C6BE1FCC2130A433E5A3196F4648F63D9F2A200217D8A3EC5806E1
E9B19EDB3329B29C96E766B0F918F4BDA11AD02E6166BCC481DA9604544F1AA8
06261E76F10C9917D5450D29FB51F5F7B16E7F81BB9F34A4642B90B1BBFDA4EE
F8387507E9DC419C6A198676A04E17964327D49B7EA5247ACD975388CBC1C8CE
E161C4E35AE4338BC3960D8842A49AACF175A5C2B955236D84B269565F15A806
9255EE20F1AB5D9C444059E56428F714A29B0C218082C5EF9AC949AFAC6EBC7F
E803310F23094D937D4817C4AFD3405150BC0CB1E128747DEC78205F840C5512
FBCD5FEE4529FB8DB6182B02E41FE3B278152380CB46CF2EE843565A920272B4
E71D7541423B0CF8F3FBB7F7BB68FC6515A6697604B26DD7336BE859EB601CF4
3D4BC4686259502E78135525F7A54DB079615ACB0C5948C9B8C50DF592540E7F
804B096BA688D168A21931D45D4A14B8EBCBA815CEFD5C2CBAF0EFB1E6396D1F
B7DACB718A86B3B4914DBF5A77C5B8593F7ADA460806B4C64BD6E421DDC0CA2A
38E5802D96FEA6D64ED04AB4DA4C3E585D71B602C217E9FECD6F2E7BB56A8551
C60A534955ACA571EEAAFD07A2259B1EF2F93951BA0115306BFAEDBCE520FAF5
0604ACEFD1EF77E12AC0E14E8AAFED1BBBC1A2D43F1FCD748A9321FDA4EA5BDC
CE3010B8B2FD8FFB28CD8E69CC205B84D89C56A8BED3827BB0EB5D55059FF26D
0F4022C1413584CD0579015DCA39B232482AB6812C6878D4B892FE0E6F56AAA6
F5429D4E4B8A8D958E21E191DAA476627F35EBE80FB4D2B951B4769C593DDBDA
4026E785FE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWPalladioL-Ital
%!PS-AdobeFont-1.0: URWPalladioL-Ital 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -9.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Ital def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -305 1010 941} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB5F973DECC54C8130ABE
C8E23C8067FC409DBA23A469DC7C6C4F7EEDC3DA588EE3C5B2829D3E1492978B
F91C30C1912183DB62BA489418A68C3BD44566603673FAFE6C3DD78FDFC1F6A0
840DFA44EAD8A5653DDF2FE86B8BDF672707D2AAC76CE376C2C9E56EB95F30CD
75B1E312BE777EAD75EFA21114335130DDC559ACC1A14454397984D624EEB43A
C7BD688E270025A34A912884DF387744462E4F666099415F25F86999B31B0588
576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FC
F88AA072958C75F616D971AFB3D9116E041EE7B66C39DA4481A97509DE7AC156
CB43C5A85501E66164E5FC61F9C64EE138CA0D9A0808BE0443CF3FBAD13C63EE
E7E39F1D385A453E8095DB2FF5914A611E11BBDDB04D6FC55D51B08358EF7253
9B8E1FE26561CD5CA9661C91D264B3810A37BE373BF66FCB021E4407375ECAF6
BEDC1561D701A5885F4216EC592958C80DB9B8365D66A8E075A88782C4BC6161
F6B5246F49B14E4E086FD10E01EDEA5D95A0F67D9F6D16C093CC98116B652B60
04B7FBD451E536399DE7A8D8B8E0740228524FA5CF81735BBC72B976F955FB3F
85B91278057DC1FA6B42FF84B9F267188631A0EB7B4456653620151073F4275C
9B80D71B4DA3EF23BA2811F90A844D2D4A18C2D3E7C75DC2351F250E946C49EE
1D67BA5377ABAE009B18599825EAA89BAB6B56BC1177B32B4863A004CC7448B0
27D9F6030ABABDDED61E95CF4D02EA9170BBCF04E982FB170EFF61B5F0A3E39A
E4596CB6B478F6EA85D464460C3E3C301813928D1A4140ED2931D06F55DA1B92
575627B7363A7B2F52C2EBCB003F3168ACEADBC274B460104B32A37A35E08E61
6B4C58ED4BC82DA01AE19F2AFD0CA670D4CD12464788C7AF3C22AAE6B2B67FBD
72227163E56D6B000CA09205E5DC3098C8AB945E47D05FAAC5784D1EB47CCBB4
23527AECE3904675A8257AB220BCE2F63DCE652FA38CDFCDBB8995B3486DD3E5
BBD096F39E2EACF05F39269A9DBE9A131A615BF357C65E46F471962CD4BCF8D0
FF4DA9D4AA971F02A87587DC7D4030E320C57A0DD5731F0E395F452D49935065
70FC63D8AD2EBFB6B8C0EFF6D4001081DE16433B664AD0FBCD335C4F7DAF9A7A
C45CBEF2F835DDD975EF68B4705E1C75F856D7C269CE9F6FA33793A8753A7F55
8D0C28196A0E97DA2C45937EA2BC85BFB6A704A0C274D99B8FCE9BF97A6AD1E7
D85A98CD8D71BA01CA74D342A75088082B63D9634CB7956956787431C5F75462
EEDBC507DD0FF2E971E3442C0A00DD938476920CF67869A9DDF5A29AAE443BE7
9704632DF95672602E1556207B8E2CF3F3ABEE6C0639283F42E7EFB30F910EAB
7E9A77A1671D330CAD1BCD5F7FBC20299D5C6FC1EDDFCE777B796C1876468FB1
13F2B977937E70B7214069A06007D9800D7D1EB275BC1AB6F8847D80E4BD4742
69F936D2A335EBE3AEF4F851D5C428C762599A0067E435D943305C1AF7D1036F
A5C7935303AD6D0DDE22CC3126DA2662EA1A884F4989C120FABD61EE17CCC5F1
1D52AE8CDC91703D3A1C188354695617AF56DDA1FBC56DBE822661975310567A
38E881907F483CFC9E1D0D4D02C5033728391BA228211C06AA1096232D7603A0
6ADE5123765837DE68CA029715A8A1D46C067DEFC27FDCB21066E217CC46FE08
016C3DC5161B74DE04DA7417CD8688C1B8088785EDD9C1DA4F9E9A3C57F31A1B
749B59B2A19EDD2FDE4C295151BE9C4E50C2615F0C4AE48672E2CD65DCDDFD47
AA3F2E2FAD32971AB233456796F2ABFC4717D2C8A521764CAB125981CEC1A9F8
36A3FBEF75158F1495C1A935A65260AB8BCD0E10A28AC2CE27D34BB3C3FE0147
EED75D3715F84A7EE159A5FAFA83310B1B0B1B84B176130FAB546336E1CE448E
916320F8F103F5140C5A118FC7FF92F7BF53CEA33CACBA6E4E09EA45333DE6F4
FD2B0A93F853BC7AB39AFF0A9F158DAF72DB7770372958C4E0D2BB10FBE50A39
2E90DA4DAF765087C7C5314FD532A99EB95412EC9D7DCC5B62AAE47E6B8FB014
4A861E53B3DFC6938E6C6A96BFF33DCF1124A4E0DF06126E587E8F5ED4F384BD
F103CB1D43978B1B06CCA7F5E45D7A354BFFC18CE0613C0947FCF0BDBA0F1368
D3E38954279E5FBEFB87D7946BC91FECC6BF999DBB365100BB79253FC812F8E9
0B351B015320794A89E84C34F32B465E2012E13B53BA096EE9A53EFC3D43014A
8761F3B973F45BEFBC3BA66933054518026CA3C35805BA4101E5B57B1D4C8E80
7806C7D90F8C2414CA1669749E13E6748E49524696A0FAE044D3C8ED6C393BAD
B09536AE22A27A622A202A3062F218582C59B4973E4E9FB1DCAC3FF3887F7830
D8096621E81AF13B3BAB884BB606362A344983D415861028AADD851711FBFACD
0470F350DF88282B565E841B4098228FB6D6B41F8FE51016A418890B501E62C4
97A8C5C173714D063F26C9D3A7343C8192C45BD020DE6C9089843A9CB4C1EB4B
417A21BD660F64F18D7164BC597A28D5E06E1A1833C74A1F037B035827B86DC2
8D9CA4675C45994145E4498BD600D7CACF4A77D3C395367C6D3242A71CDD4F4A
F7C95EDD0099D9ED7B1C564626D94B23D6B63755279D438DB1AAE226DA05D662
F7C17BCBE32E5780F4ADAB5AC7FBF2B36AC97086C1891FD4648F461D4581BA58
AB6528318A5DC7647A1E0A7FDE62C5450451E0CFA49D3BF597D0FA1A2A4AA073
629EED8FA846A69E9028ED8085619621F973F05EA98D092EBAFDED3677F1DF1E
8282D3ED283A1738627DACEB13EE4088A8D026C71351B8B5DAA9820D194C7999
9D59678A74F810D47FCC911924B86821217A986C2C510331888F63D113F9572C
0413F8C790BD5DE8AD289DE85DB05E8304A43319C508B4AC45C4A3017D02A286
E7ED3B55314616532D02A0C9F79E01E69AE093D0C1CBF73F6AAC28D80C5DA6F1
527E725C619C7D9712D9756749CB4011A516B24C92151BE1944222C1D1B61DFD
56826A537FBE9B5F89FB4469390150482F10125DC61628C8C58929DB22B1E7E9
D9AE9AA46517209AB512390AD2B9633C9C47C96D632523256B026FF702DA64C1
D02FD6CAB4799D81FD5AA103767C83F2B7C29098B4AC49750CC17E1346406A05
2B7FA3AD542695B2DA82310132805106B0873FC93B6E6D7FBD9E87C2DC7D5D20
72E57AE8756CF7FE300FDAFE28CC182538BA469334CEBF9812E062742EB56303
BDC448AB4A2DC23AA06CE6D54ABB8F9CD0475C597440A385AC986281CB02E295
E9477649240E59DEF25A85695590C0336EDDDEBF7948946A95F8E0258EB5F4E9
42F5E844210B9725031A5669E1260A7FE5B6687B9B124A22C1CDBE4F26C0468E
4CF07A4CDCEC2CC8A029E1B9558612411E2C7EB2AF310E57756706EBED62EFA6
65FCF325A4DDEB21DFB3B21398E815141B932AAC9CEED1DF1A5A1DEC12496266
C9DE5A1993F2B6373BD696997E81591BDC9AD9DF4202E2D28DD1BEE93FB9B4D8
E86946708F6E3B450C01B131F7FE057FC608E42DD06D09D1179E46FFB41FC2AC
03EC7BDFFA5557EA931033E13800A74E98BE935C4B103168A93B68E5C2374F1E
EF30304C94441677DBE4E30CAD12E4D6B8B0D6A4A43A21B4CF3B2D46BE50589E
68A201C0CDC7CF5E2C4576AE21D9B855B9419301C1BF53511D26FE98C66E17C4
9C6AC5B8EBC8C27115DF037CE9EB308D4EB08F41F3C2AB7B1D4EE45BF11A10B9
E35E4E061ED9980FD99D0EC0BCDB65EACFBAE64D25F58B6C3937F7A3D8165EDF
4C74CBB662283EA606C631D1EFD0526D78F2CAD37D9E52911D53498064DD5C0B
C79F65939B07A2614A73E6CD0A8650EDD6F502762A2BC22B5323164D1C34DD7E
F75A885DDDE88846B8B652223DFFBD5EB57BCB9524341D8C57CC3F2FDD2BFBBE
B52F816EFDBA9CFF83AC072C75218AC4F4FAC3D217AB69A6E25B87D4414045A3
317968C12BF5B67A7A768871675D0C203DDC23891E5340E340AB4D2A8215A122
6689CCD5B3D7B0AE6C673245C688EFD275BA6C37D351D4A88908E1E57D683F7D
F75A468CE25CE551BF6619FADFF828D9486B7F8A14BC0986AB3E263CDBCF7C83
ACD62213BF6D8A8C77FE8B206165552CBDAD988E5147C913B2E2A96821ABD9CC
0AEA383FF8C85F9A53572AD9D9D1A64FF25413026431BC892F15C362A56B6960
80FA9F6C289D3C21F2BAE3647172A059E26789B12EDD6E57CBD83348288C778F
0F49D76658C85D379F973BD6FDB5D9614FFE4770E2D1412AF61ECBE5B796DDF0
076966E3DC90E648C069C9F0AB6B15C47344F7F087692E1CA20A680F0DF3DEB8
2BF4232D5F4DC3E857BACF340C8C4E164007A384477AB5E79FC181032081C068
6DA62604444B04310B269849918EEF981516AFFBBC84D27BD1ABD686D1351BD5
A085013C8ABDCA62FA6E2F80DE35A2338CD8D5C4A23311BA96475D3AF367496E
34A2E63D693D006CF3E863F93798383309DE6323A1255157E3E51CF778CCE8F5
F4251F71CF630078EA2FB7E601988985862FECBC6BE6A5F5F22A250609FD5AB0
DE238B001B405B496D058839181AE77338F7A45BFF3ABBA75B3C5272D5BBDDF7
DC2CEA9691547D4E09D991240353279EEA6062FBE9BF9AF6881F745EC71298D4
54AD31AB998F5821B7788BF15F78C8E8ABCAEBB05F8735424FC707DCE6036BAB
19CA41078D5E52080755C7D7AB3CE97AE2F4D3EACE86FDE31C48BF614B83342A
82C3865B3730257900842424E029EF9FEFFEAF6C118DAE59E0C79F07BF5E4E78
6DF391A767480EDF4CCABC332EDD756DD8F04CC93440E1A8B0AC481A6A086A41
92BAE15F9B5A3E08AAD4A9BBCAD50E878A5356746074519505DB4E7F3090BB7C
17F042047FD8C21819F01C131D01C24D366F0E6B9042F208FB5F2A0AF7623F30
E63D89CC43ABC6B4287DC3ECE18CE3DDE37FE13A3D52749BBE5335E6751C7C21
C8A2A972B3F5386DE1F800AEB83AFC6C43B303F5B867EC8D8CB389AADC2E0155
5482B83F7C5BF70BCDF29A93A999B9D23B7F25BE89A6ED8C29981506D9285A7B
54179E4097801799FA212FD12D83E8E7A1EB349197C5024DAF9161B23B3258FC
33B4F92548E56E10583707791598709BAF0F79B6FFD29420D0F578D9AC9A6782
205CB15827A262D846549BAEB53987787AC9AF72F866C7042B822A026D57E5E0
A4FB5A8D08B96311C845ECA7BD3ED5F09DC85681D27B2BAEE02BD1E38F66FDB6
35B6DBA6BDBF7D54B8ED9F821BE9EB51B17D6F00284F0663CCC6CC599D05340C
6A561DF3A56C054235CB5A713FDF71D67DFCCEF9C018C3D8273DA993B9A1CF95
77C010788BBEE1BBC352BE2CDD01A6B2628A48571587D75B1E1BBB8FC3AB3F11
3FCCCA9588C7FB72643EAB8F6D8AEAD1DC3DDD8DEDA104BAECE43AB290DCA2C6
4EDFA951B6DF88513586043F15602A346C1667DC625491A42A8BF5D93C4ABF12
87CC4D31BBC3C5C605452A1D9522D16A6757485D0900F6487CB687830972BFB0
D20CE2A288EB98831A452BE279033C4AAC3E18B02E195E87257DEB8A1F6489CF
1B3B1E07277D77FCDF7E4E239BA6F6C7272B77E36AF5C21794A51BA3F73CDCAD
65BEFA1126FD75623AFC0893216D5FF7F7C34ED8E719F94D5C303A5E09A7D4D6
CAA620DADACB173B6419B31B7445A15D1CA6B2659006D705858B99C01E0CF751
B1B94837F30331F28E298A69F9F02CE830CEC57181981CBEDCBDB5C16C542FC9
CD77B0B1D6DE3792EAA1DEC6FE6E822B40F712117BE571028DCC3032E4386834
46C8C3A9D70992C1F31DC6753222850ECF459A7BEFF0BD5E654836F18A3A1CB8
A8D3424283A088E9C1122555D8CB474275A39B8219128B170DB77DFEFADB83DB
6FF05DC9804127073B22A80BE2CEE4C6DA82938A305C857E3A2327272589C6F6
1D91A79C2D61038BA7A2B491D05C12CF08D885343D6DEF53574FC70B3CD1D204
8FE03C89456E2798B2F244857BC11010547C51C9C76268C41FDD65D1D5818201
79A5ECA3F8156074B3869D391F95ECFE48911B4F848757A43D366FBF7B285614
9401595D2ECA56453A19D058B8C58FEEF23DF7A27517346C722956C8EA7F093C
D41B3F79318BA47C29044D74AAA0E6493836E42D9862349B2C90A36248C13B0C
9A72217E767C3DE2E7BA2218191BE970D22DB26BB2CAB0C3EC4B9D2491FFE65D
1973A8A776263DCF7DC05E3875216E509371706E846D02F57F18066ED53549CF
9E7C3EF75F0E55983F20EE915955268578AA1C36FCB00B69EADBE92368DE843A
E9002BA7F7A71B3B9B6E7771643356439F045FCB258596664E82300CB1390FEC
FF96B68C54DE46BBA8EFA3FA56C98C24A7312EE7E49A35946A88F2B1B8EA0380
FFD69391C56D8BBD6D163997707C37598415289D3C878B4FA279980B91B1C371
8ACA7456133549E2FE0D5F0C4C40B8FD5127187E99263E66CC44F0C5AB065B3E
475186BB44083AE927E11F26BA6D4E02AF6E9FEB358715D5C90870FC68B83414
CEADB37710486D41E2D2EBC00E7C49E4A3F3EFD3C91CA4B18844C6877E29A68C
7469E55A0E49038A22D23960FC627D54D8241088768B34E3C912D9893BFA1793
85B2E96D209F120AD96A39B4BED55B42B290BD029F0529B96C2A56F9FDB31A0A
BF8F9DCCB42FC3D2DFF02C33DCB0971893D9BA565C68F61D1393891EFCA5F9BC
FB214550A3C9E56269C7B4EFA822DED4454E08E2887DEC7C19F562075F82084C
272AFA4E1629681CC104B39474F4064667EAE73989C599533F914C3B91543469
6CAC071EBDB4962DF192DF01E1C8710C252DE69DBBD98205F18E112C38AE53D6
4E50A636E3611705296741DF5AF29485EED01AD965F4365BB223BA6AB44C3DE9
9624DB1B364E6474BA273E6870AA8FF8597B279B8FD1B911FDBB4D30735E62DD
AB16400ED49C0F144261391B4E5721C3FD89FFF22F9EEC3DEF355641580808B8
9BA75466127A796CED26F131AA1A669951F6EBAEC776A200C76FD90C6D93E4C3
2887D860E9C03BDB1081D76CCB6E7FDFD29DCCF92921946BFEBD714D0ECF40BA
09AB0DE2F3AD86862084411BA78597BCDA8F2491B47F08FAFA5C938098C29E31
0D3BCB5ECE08BFBCA6E344FEFE4568E2E17613658D46ED17C3FD6A3387253FEA
C804D0C0EEFA66C96DD44CD5A30D1827179CF62DC85EF18D1F2CE876B5DA3308
12CF646059710B9802BFD9564B038A7264976991F983F41CEB3BCF0C9519D318
0A3F8DCC2FE2BE99AB76B9054E89F037A0C9BE90814A5F4E35E2951AA87834DA
3F290A35E8D95017038D7167EFFF538E2A164C1C69E9D8FF259948DD886050EC
905251DAB624BFCECBB6EF7A873866018D806ED48DE9D1603B0554BBC2550C06
0AAB8A73BB6E758C018B1C383CF5D27298D7B69C42563639EDE088C7CF6DCC92
4A2DA9B88C7B2298E6B2E528F9898D247807337AAF3EDB976AD996B43C0D2AC5
66E434584958DD6338D5B00C42D174AE261DBE45A08AE956AC048D44F426D259
779103384B268D1487DF8D19C98DA437AA2DCC8A91267BFB8EBAA818D40293C0
E8308801C1ABEEDFA4893BE68A62A769958D322776CB6C864FDECFC9747AC9A0
4991A6CFDDC4DFD73F2193A0F5CF51A6761F93E91804815203BED8972A2E4B94
BDB2FC07702E1AA29D66CD14FDFD210D6311CC0780ED8834741B5E62EDC56BCE
1F78712962843C2BB89B064DD7D1A1FB182766D36CAD2DE4F36AE72B8210C4F9
D3EB80277FF34C4F9A8DB7C19E90E1E3D041B3DF5B5C3AC6C4B3AB1691FA7973
6540A1636D8E376173CC5692042413FD6C4C3583F4A26179C9BD13AA8BEAE83D
5B23CDA671AC6137EA0CCF3E17B879AAD07B96BA0B69DE3C99259EEAF0CFF181
4E9A25FA020DAAB53F59CCDC5BF21CBF78F62E7A21AC44E60E6A9AEAEBB4859F
B9E3CB88314081C1D6AAD4A84969A60767A967F05C92287F6D75E8A47677649A
26D94F04A0DBB89C1C5025D9BD7DEBAD6F65E20A106C341CAB13B8113CD339BA
55BB19D3538072BCD1AE833660300628954482F524D0B8E8C7735D78D2ECC4BA
96F243C7A749160012475D5229BA04112140552E1280560E89DBFFB7BC25BFA2
DBC5DC84917CA80C31C45AEAE51ED0F86C067B4D3E4FCE17B94F35A00731ACEF
7E64860C0C018B0F035CCEA29A425389DF83501E57775057F8475A9BE412F24C
8D3A4273A2E512A2A670D97F2B4C965EAFDD00C61671BD393073B0E04314474E
36CE9EE010FD554D552331AA98EA3F750352842C654A0AE6F2CFB1C344C4921E
3FDF92657C4E569FF04B034B096D0B4D2E7C69F99E4072811D0E756F68A4B02E
EE5F45B58EF40C5DCD430965BB1F38C1AE3946453BA6F61258900212A5FC7F4D
B240B62848EB61364625970D212D5F186EF35D59BB974909951086B8270587E8
F3721C06A77CB788027D7CD767AE50843AFEAC938FEF1291262F387D40395552
A21A415B35AB341561E14FA067435818E1C987775FFAE15273CB786AD3D8A41A
B901FBE8D78956C980866D0B04A452E731735FFA36E03C6DB7F0E56C53D8C1D7
CE1D0959993C37EA5DD5140B12275F8A4DBAAF5E6291931500A4A6F5F28A78D8
0D444A93455700B268136A71AD0A5D2E23697DC55611E147662FE3AA068E3B53
01D2364F89E08EA1DFF47EA3BF4C901B65E7254C4FF97C512C2C654B21740B09
5FAF5C7A008D5D6D8FB2525F0342F2C9906DB418C8F795F178C097FCD96DCF82
4BF1A97E313AE9FDC576554A5B16257FD0E5136A23DEEB53A5AE9E4451B8A82C
096B700AEA56DF8AB8E049F3B175AC96F1520F4E58AC4143549EE561BD11BD0A
7BC9E5B129AF3461EB531ADCE1B397522966565E5D03E912DC3B1B112CAF5EC6
D9620AA901D08C0E260C409E60B3FA3996DC55E0117AAF7967AE3C71DA4EC5F1
9D369CF150D0398558DA2F2FD713B98E1F3BB8612738FFFB63A4D5EDEF0C4E5F
431EBD722806CFB003498A3906733A92966C2F11E260A5524656A9A658B12919
33374888A6584744692F87A67A218BFBCC8B38E07A58E7BBC90A2690ADCA3C15
438CE5BB275660A429F64BB4FBCDEEE2DD064CE344608BEFC72FA3BC09B643BC
DED7098DBC3F9859D49ABABF30149B32052EF342AB14BD7166DF1E02BF6E5037
037DF1CA63B9333E6FFD8BBB11A65539707FA4F66CA22F388B0BD6D579327DE8
CB9DE6B9AFFA3E9950914CB0781D5442DC61E235A20EAEAE1AB1B4803CC51547
1D4FB80DF03D2BAF5E8AA09391BE5B542A8D06A25135505C220DD1A84EE4A8E9
00D49FECF24B393985E8DA7768801D9A6515ED7BFAD3CABD192CD782633B9D10
51C94D2C55C117F8DA1FCD9013BE7A1C3D24763E96F2C385B9F9C34E0382F02E
B8C8BF9A97C11763A04776F70BDD9C6C2B5597E7A5D919BD56C6F3B46EF5E578
EC302A5C63F547BC4619E5041C903E55AD187EDC7909357DFB4C6FB6446FD6AE
83EA4BACEEF51632EBB2EAC247BD9D5A2469FB68EB42502E847F9B99921BAB28
B54FF006CF8C1037743225A3542A42078E499AB3E910DA5459627D2B60C7A3E3
9A4C63D2D2200716EA2035D6DFEDAAD93A074010C5626DD9470582E82C122DA9
87E7B2E096CD2E5525399EE25BEE707161B04445EF52651F2B690A9445963F34
6D0667986C994880FE8F28BFFA1BA43F4592A98C8D2FFF3F7C0A84FB8D0F4A78
9DCFB7D9B3874138C7E04994CC74D5443843F1A6D6B3E97A0CCACAE3F78F40E9
A45653BBAF2A5DCA560DB5BC014CA63C5B8BFC1812A1DFA94AB358DDA188EE1C
A33CC8A1B1EC678BB3B45FBEBD4988B5ACFD71B15DD33ADDC5998C96E0C85D0B
C622011CFAADD34DCEA7FA92275427B7863FCB2BC115437316194F2583C29666
8F5541C58FF0AD066EF848E437B506885F93E00351B55FADFE83D4A2F253A0EC
EFC2D2E76DDFF6D7128E80DEF90FC98CFDE643515ECDC1C7F702FC79EAADB6D2
D671F7C74A363CE08DB7DF1DA1BB41D984B457154D1DF0103E0A79EC85F7352C
F26ED3CD24500143F538CB7376977E198F06BDA517B670A41F2EB01A30F2AE8C
73D83360E849EC83AABE26BD9497A3B908EBE9A2B47EEEE8018439FD1AE9F435
A8203FDDB7138B0C1611C7E62375F2A114F7BFAB395D7607E207CCB5FB4007BE
7A3F43824A3BFF8B9F68A8B7EC401A4E61E3036097F66605251CA558067D2FC3
550ED78E51415C1BD6694F203DC7EC6CE32D227A9537A72A830EEF021FA259BE
EDB8E53DF62FC14593FB1046F59CA6FFA0C2AEBFAC9216FB646FACC2ACCF7936
399DBD8EB0E039B398A8725A856FD9955EFF184CDF0D4ACDE56C150AB8206D97
E4C59DD6682ABF66B4DC1611DBEF6876C9358686071FF45FF489BCA0F4BAA4D5
D965566E53B1AD40A04BA972EC6DC7C9E4ADEB7E40045F10F38E06D364D00302
90B03C9F7F76B44EE925C8AC12751904EA232CCECB4F6E7B5B6B3B61D5858256
AD27D93969EC5B279163D796AD65EEE0ECC9ECDC61FB079040BB1132661B593C
3FB192661D2DD29EF941C0FFE601698FDCEAEFDB904DC557746508623BCEB72C
F3851245881C866708C9D765B3FA6EFFF40361ECC45C4D38BE8911C50F43758A
391D52AECE76F5BBB786C196CCCAF13DD4617C9E8D113D87C1553A051391F024
6769EF99A69AB490C079EAE9FD7F390EE3B12312F51B3512559F1D609D0ED4BA
DE1EB1385023A014B87059314CC9332BAAFF7C1EF561BC06947AEAD6D9670DD9
96AA9FE4D4268A3FDBF8F1AC245B58999B86DFDD3005F3AED1FA8F077AD1F27E
A24D0BC4F48C185058561D1B33F86E657920667F68C2548B79C4C1461479D489
B8F6CEABBD6962F9D2DA9E68A451D7FD80E00F12CA088220D7CC2BBFB072FF0A
9AEEBC00EBC55C01D6F2038CC2FA66CAC34B171FBB356B3F279A4429B2939059
A2A9B1619F7AD084EBE6894AD20C707AC29A5F157D94555961414D80FD537B31
B6BA13C1454523544C00B58BDCC382D86132669DD41726324EC6230AA91DDA3B
85D449442EF353D716352A32E88742A2D4267ACBD3D22309BFBBB820595F204F
68A58911EF9FBB4C53CFE46DF5BE2A27F839EA57388BA11F3B3D536CE8E2BBAE
82E7BFC5D830D171519A3F0307E8ED88E9C786985821253F9FD2F3AAA1CB391D
0DB8F09F3369C9E7A0F20049390D5AEDCCE699583E77C9FE8C5BA43CCF6B0D2F
D2A3FAC49F106FAFF7F8F7DD990A75FFA75F355C28807B9DA3660AACD8772EB6
BB7140CCD0C3B6D03C5484C5F34F1F7476478BFDB44E9C724CE688723DB41181
445B4B2C85E4C29CC412C292C66D7565029F46C771019311BD238A6E3D886007
0BBE3F612D213C69C0597E1FFEA270B82303478C615156CA7FAC61A50A7B9C9F
CBB71A7EBBD383F1C4E629716B61368EA8CC01B6818CFA0C0FD6CB8CDE89760E
A22039A0EB80A613BACD0A431F1D618C2F7EC4992C1B504431836B476F962AC9
4B20E0B8CED594118D66B4EEEBD44D9A67286373CACFDE333237C8C88D3B2F1A
F394E77C640F1A5B70831D96EFFEAEF577AD23138D187E63C13D309922D217E2
BBD8AD2FECEAF630B6E1C338DEADFDF8999D197F9BC44BA47B221C561F30B587
4436C1508A174B6F88DECEE9D09FDBC3497A4DCC1D195D8F545D936FE252A642
9C062A97C79D07E8BBEE9E3D7BDC0314C4E639EF5FA0EDB965F3AA35FD7240F6
89C51B722935C7B30D388217982BD5DA5D7FC5D0FABD9C7300D3C2260FFB89BC
4C59833B8DF2D971E145EF9C6ED7E2EE084E241F1565FE8DA498537127B7E1FB
E24968CE37F8BE73AADD52A53EC14B4207A95BEEA8F35EBCB9B2A7B8DF0CAA35
88A3DB7A610637750149771000B3B6F89E4B0BE9FEF1A0DD6DC5016F3566C19F
8F5BC19EDE1109124BF9EAB1944D433709725DF669156C27269EE6A751BA509A
19AE35015686663E8A4EB5852CF0686A0D1EA994711450BB0F61D1F81152BCCB
B65B7B6E0FB1ECD00FBFCCC5590D977D7F7FCCCCD279613FFAA3D65F59271C4C
788F058392B56F71437D3B2DE1C9B3BF50B6DD366128A95C122382448270527C
B8ED315370A9876593A7F9B48256A34DD929F0FB5F729C04686439E648F712B8
48CFD26A78B7EC5491C0E79D9B428EE8BF9E4C8B8E95F38A8ECEE7D78C591D8A
B6850DAD4B6455B5F51F60724E6868D6C18773F8D177EDF2D457FDA71231C5B9
9305716075A588599A55CB43B4628EF337A8F3B9915BDDCA8FF4E64F79065067
E1E00A61EA3C342C250F5AFD84EFC93768FF0193668F3406455C4FD26A891A87
02DD65D226F446925724824184C79B183DBFF1E4EFF6C38CEA8CEF4652F2B875
96D852D8409C137EA5DCB33C4CA7A4924D33252CFF9622694EE859C21922897D
6C53BFED57564A266C70CD7B88FD9DF6F8874DB9E618EE54BB3CBDAA3CF8D601
45F8B26E4DD3C751E3FD6A0034E37F1DFEE0D36BE4E2D7B5D14B8DDFA997D60B
81846166A81DF85561DFDF15911DCF372B58912006C081B1CB364643555A15E3
B1AEB1A34569ABD981159323EF0B5A4FD34577DE3BD8E823B817104D963914E0
DC2CBD3AA07C6D590F20BA50493A83766E61CE03C4970B09E65FD11703B5E806
E607BDCDCFFA15C8C7100DC5276EB6FB21121EFFEA646E733113CD403FBD1C2E
2209D84B0003B7EFBF3ADF78B45621320F16DA2D838DE7182B409940389C71FA
AA35C0745EA078ABE3E2280BCCF39167EFB4ACF8CB5313250F27FC523C7F8ED3
DB17545536C68C513F75D2C8888F2DF65CDA1277E9DD25DE8196EA1A8F755FA3
C5A31DB67FEE7DCAA66E706AEF22793BC28E2E7BF13ACAC306FD2A5BBEC3A3DC
4AA4E32FD0FCB9BD298CB1AAF33BC311B74ED09EDD0322A5145DDEBE6CE3954A
F3DC224023172A3220951EBBB4807DB0BA3285E8AD7F80591F79A74CACB3E0A2
08B66401CB2747E91E459645204CC203C69ABB5FCF0EAC9A16EB439D9FD130C1
D2FA9B642080703EA042BDB0FC59A2CE5D97B3F37DC22946826600278FED40CA
46A761301BEAC1A7A0A89C2F8EC4F73377803E15FD9512136650D9334F38F87F
80BDED9004F79B691F487E4A8E415DACAF301C761C1A51723300EA98733A1E72
9AB1D4CECEC649BEBB49666661C566682CB68F9B09AA0D7A911CFAE6CE584FC3
AB84EDA9FFE874C932D1D0150380FA3C9D54F708E168882E7A8D1983325CFE76
A1992BB5CAAAA00C8BC322D09A5E47E63E7C765233853C39BA13D0926A217D0A
72BEC62B4ACB3847EBA712D75112A10093D96A627BABC4737FC72F246219DE51
C97D6ABF50AEC2C2C96F5982BFBD55DDE82F1A2AC4A8477C59BC4EBCD2CF93EA
78EAEF27191EC12C8C249A04A54FBCF982B16273B2B0C6E29DD58CF6790E10AE
E75302C5F58531658BAA60F4AA9D4F19FB02CAED08B162FBF8BDD586AD656FDD
6F2ABCBFF010995BD6EC315964B3FB54D43B4A4DD36A9E62D71B9F6AD122D466
A9209F6844862075DBDA2692B8CB5F4BC36F29875F63D81C20900C35B25AECB6
6976D5AF96EB42062C0F45273669E7FF50EB7756B3886762215A08B375AD0279
51BF944E18B26CBD9D431EE10BE83D8AAB025DD38D8ABEDB5ED3CD93AE982765
ABE7AEF5E5BA09432C6CA40DA84396F4E4D62F0FE59533E75D1EB25BFECFDCA6
938A439693D203EE3C92A25D84B53039DE1215E4FC716A043D4FB915599CD529
16008EB8D6E90B68823BED1FD2CF9819E5E34660B97E40CF482C04790EB6403D
19D182C2448CCFFA435F347BA937EC8E58682F96BC01D69E21578F14518D11F6
B4CC52E89C4F1D93EBE29A46326C9F541378645233A9B9F86C5D51BCFF2522C8
99058A9CBB6AAEBF964881C4269188EF77D6A185AF719D73B751490104E37CA1
DC08B345C72A5E4B485F9FEB22351003C23817D5327587B6875AF3FB5EB80577
1FAE2B5BC2C5123E899BB04FA59C3BDDE9881F93FE8067360F02C207B30AD305
23E1A9ED0DD45D71548B58EE1A5214519A47F7BF07AD2152FA63172C24D3E3F7
F5320F4CF27513FF3FEDE0354D23A1BDC50F2DC634576D7EB1A114F97F3B90FF
24695981CE76497689E9513E5A64D0F5CCCB3F41373BBE96DF245AF6FE5F05A8
0FF787583A38E7878154EB2608FE4D74C17BEB6EC46CFA41E6AD26D7A3FA25CD
3DE655150CB082F618D8FB65EE6D1F5A8A04C4321E004D9E22DB75F63362BEF8

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE064BC47635CCA71
AA72328472FF6822BD62A82B7765A73CA0239A9E28179AE7740477196602ABF4
2EE916B80AAFB638D00C1FB2A1EAFDC4516C7EE3EE4F5D3039E70EF3B07915B8
7C9C128C2ED3C27FE48D27D39B41E1ECEC46CD2209D760D75E743AD13AF1E761
A8B7F996ABCAEA43645546F42C87F6909258CC74419B96A39D6DA3233834894C
C60B03F867B6ADAA2C18F60040A9D8E70BAB12221217095DFC57117CDEB536FD
A09E11787D4F7B448F88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C3284ADD469
2AC17DF0F50CE04DB21BB8B276691749E2E6F9BB3074DA40AFF782CB25E02AC3
566126F3605C5D91AC7F8E69FF15FE9F998D6BDCCF481FA69BB6B02740E8E674
BBF93E87F057BC472913D788E66AD436C8C5EB667A9E200B11C78F1226D5941E
BF08A7D237E81E39B47A6F25B2EC9290B2883555ED7DC703B3EB5C0F679227B6
E811F2C38700DC5D6EEC5223F0FDBF80711A377649E17BE3301FB1AB1AE47128
7800936B812CBED8EC4E0A114FF329C5D7372EF249FA82D2745ED89D47EB2E62
91A6066F1FE1971379E043F280BC4E314A0EDBBCCEB0029773C9574297BF4E64
D19DE34E73FE10D63BED7FDE25317440E34D4258502F4F01C52AFEA66570BE7C
7BA8361C07E06C4962417A31D0EF695F8C92EB33721D2363555F9F5034CD2955
B664FE75192F33BB8359030780CCE9A99B4C2FEDD3E39F711F63E15A82F4D4AC
55BFB5357D5AEE55D7062DD9A9AF99461B1F89B3CCB0149CE5F85208AA40009D
0682CAF5DB0821AA0F1378369902C813DEFB1A46426E7E895A9862CA1C8E10A4
8D3BA9DCE374762E175D3F06009092F23B871D14D3A3FA6A803B2DEE2684523C
FDDBC23B89F2A60DB25A27CDFAEFA66D2F0B1E5CA6EC76D9F6DDAD37B32EE662
AF7460953FC0A9A530058532E346F581AA85779C962E6F13E571E159A42E429F
A897523203F60ED4A87309FF8BCAF803D7FAD72A7AF7BDBED08049B0A868E226
23CD452F23ED427E439F0BFB8E51935CDAB083DD0F237B28825580C2306494BE
4FB721E4FB04F7B5D6B669502D0EF1B69371902CE4CF8AD84A8282A03C237DA5
78C6008FF67D6ED281BE7B396928F948E31B89CEA0D44B1E9FD3E9E8CFBC339B
8622C5288E99872B907D5A35C31A9064C3E522C63FCC1C69DEA3873E2A39B27A
9B7920B10E6C7E03FEA1BCF17D34264BC6DFB07D15896EB030D2ED4C12111379
7CC3D98833B67E38262680EB4AB9A4D92F1BA39865285CFF7DCBFC096FF9F878
5CFDBAE4B752D854D86A959AB5CE42952C956BAD194A222B76E5C01FD5C08F27
B2244E1A7579BC8B321BBF4E89CEE48E539E691F9563A45FF67FE0970DA66609
24EB00426703B781A4692BF21909880CFD73B51A92E3E71ECE7A5A78D48AD4A1
03B97A4AD2883802EA9123BBFC76EAE353656AE61C931C27705BADFB258D56DD
54397BC47A4FA41BBCE36197BD8EC41D02C86D0A246F40D007715DAAC213B3E5
ECC8E4815EA573573B64BFF8B6251FFE5B2B7E39C1EE2023EA55F8870E7AB26F
14CAC642917E47027D2FFF3622B08C61085C4C58A91BBFC23E9BFB77430B8E5D
C464877BA684728D00ADFBC1468216B87B7A86AA4110030E18F7DDF321AF4A93
69AC60D04886D106B7365E7E1622968858D0D7D1F81A5758FF302C10135DDE74
E372502F535B2564F43A689D9DA1043D288DEAA0061901488C87D0064DF99B96
25EAB93115FE5106981F87662E3180E51F1800FFB0CE77176E348715DABCCFE4
A1BA3732D46BBDB1B9A5AAFB7FB9483184C8E7FC7E2B72320948A93683B55DFF
EF1A246FE9E198553C18DB4B3F6B3C575BCCCC55AAADEB397E6727F9367D0AEA
C3F2C9BBC7FDE177F8F7E7478790F27A0E3FFEFC4576A763849C3605BFCF09E5
33CF65B356A8D902BE94A449C5EB8BEBF9E90B484FC8C8D637F6F6C0136E0E1F
0FB0A3B19F1D1B86B55D62ACB72C877AA2E3437B035F7E7ED019E4EB78C1A95C
FEF5D63253821A866F13CE96048DB6FC8FBFF9AACE0299E84F822C50194C21EE
916939BC0F25C44B4AE7D581455520DA75F0AA2AD71C12CDAC64F9F960EE62E0
49E6D9BC9858A3ED3CAA1D77CFB2D4B6C5E3F2FCD8562ACCDD70CBB223ED1F8B
2990CF39A31644BF123DA78DD615C4287ED7DD43B679C6B311A19B2D697C75CE
2B6171EA0D39805B15434A0682C5F1C399E8BF2CE72DE9FEA0FC333EC79FBEE6
147467852614CB7FF893B70572A9E9A9087559FCD305DF7C29E99B5641BF3A81
69A64C2F9D7C83D5F2661AC076EA615B8591AE7A3B09E87CBBE6FB7AD9F68636
F1FE5A14AC7EBD223FB6A8D778E992E156A6CA274E9D1A26FC212E8BE50396ED
528B7B8B323F9778C1D82F59D0579A84F5EAAA2B0E1BB56355BB55ED2C105931
F7BFBD9BC72DEB9BFAA9EDB7FA2EE3A9FE8999DB1691FFC4A6C460EDC8DE7B8D
C0EF72A9FE994637CDD194C0A074E4B55A869C96FCA78117347B9CFA480FF4A4
2A7EA72AA2C2EA54482A16933EA760142ABF564B945FCBDCAF4903835F153170
BAD72480247EE13CC02C6B1FA87B9A81A3249FCD0540EDBD9496769CD6DF35D3
0201E5F48DDC07E52E850772EB210276CDB3B1DBF85B2E0903AF6D630DC6F253
2EFBA61D0CE72227D28E699CC06CC8F3C38638084F8F4F7DA8B4AEEED9236F58
36FFD27D21F892B9AE92E8480F5B8A2AB1B87D5005CB9D8098FFDE654522B62A
CB96596E7F84AA95C147136403B67CB88DD20DD1970CA46E058A2DCC6D740EBC
C416441356F36BBCF98C89DA493A6A242F6D9DAB97AC321B53C8510C426305F2
25C7826494441FEE42C213CB237B187A7B54F41B54433526B5BCF13F87A92EF2
6862C433ED083A10A282CFE103D4CBFDD66EA1486CDEA9EE0EE9B47508898572
7690C1AD441B4713201E8C7E1A68DBE739C062AB8A068316E1F127EC796EA310
50BE815438A3C46A2DA6DE6DDB62510D4E57FC1B0BEA2FFE914C4829EB8E4716
5FC5C104E5754A9136B7E839764CD809DBDEC73773FCBA744DCE8C9437538656
F7A34F802A89D8D819790E4283CE5DAE5E229F832A34D9CBB236F6B705CA7C0B
29FB817FBF8D3AC972C91E47BB642A01E0C4E0DE1F5F5ED737847EB84CD7CC77
95A8F198DD3198C1A8571F9BB87B895E2DFCE402FAFA33A3F0D3DBCF210DCC76
3B4F87F7C9067556D6E9C3326F856E4DB18C06620CA2B3DFB59E5FF7EA84C726
18065AC4198E777F751BFD3947CFC5B210A74BFD358FBA3D3EDDA096C10A19CB
A124C18C6C6041BD14327EE384412A7A88E307B07F58D579CADAF8F360082659
FFDD4CD4BD7A06D8EC0F00E69984EC55E0B487FDEBB3F8A9EC144232B97C44F4
B4D626E605AC83EB2C6D080C6698F0EFE4443993EE94A4B47E404524B405DCBE
65FD0A687938C80F6A8F8CF0D0D94CCF890F3DC32DF5542F87FD79F2F6092E8A
8E544601BA41726B24F523098146D4C86E30D6654A2C8F6A41EE9007BFCD5A6F
97A19C48155322019D19B2330D9FE7206D254EA6B4D081A2CD8B917F0051C0ED
2C1C96D4A107C7D969E505C6A6E5F0F511DEDD4770160A5438A0711FE40BC8A9
2F2894C35A36853AE144AC5AEA6395A2CBA52FE80E688933D1B38B4B56A05BCF
4D0E881031C10DE091BABD88C523FF3D1247F6B05A5E7AB74C5455E3E2E0E740
C4155E0AF338A8BC9D5363438CF6EB6465A1FB125895F6520B3693DEB59FAEB3
A14C1574A805EF7C19463D4CA9EBD690CA624CCA12D858D5418BD3A61A207508
812B280A9FE128043C0325B428EA1C0438EED582F2561682F056AED28EFAD9DE
D6FA051B4CB26274B690ACC2163E1A7941E485D9B68B4CAE3F1EC183DDB61320
7919DE82BBA2D98CEBA20AC324DEB5699B7A3C3B7A66620C252C5AC36AD21A36
8D84EF4C0C6727D43E3102CEC57B8A586D3FF862999D20CD6BB6D026C9A15B8F
75F819A88755E006B798A1373B918EB42F2D1109AE676967CFC73A07DE75349A
3333BAB3DA1F88D28AE7F2FDA0209638FA39BD92DC4EDA5C72C6F8E36DAA174A
CA74B6F68BEEB6A8B33BC05A3C7F640715F0864B176AE297116D132F2F0F64CF
2E266FE4C33FB6E9BF9CBCFF86834F5C97E0818281A5C741B06172198B32F91D
EDE2510A343E5DBC9A18C7EC59C7D26B12495DCAC8CE84E144FA92C6B9470B5A
034CBA0079ED9CCB182FB1CE0BCD1A80BB5E5C67E429545A65BB96D4B4C6257D
952A379B660FE35E95E4034A59F2F17FB422425787874DFBD6100237DEAA5B5D
B2412AC8825FC5BC62595948D47564030AC1C3B76389571A11576800C6AD69A9
3AF451C7EE70C0E83B6D78E4104602509ADECACE167B4021E8923C3211A9EE97
3EB7D4065ECE30C39DA6EEDD5FEB2062B3FFC8CD85F30E84E2BB14A0F359C4C1
7265A61E4EB12E2521DE96E01EFB8744FD96B12E312A7D9FF92238142FFF7B7D
E288BE24E35C6A9DFF331029B32D0C230DFA0CC3CC608E3C4464AE486AD89EAB
0D0C229F96608F2C8A5A6AF3CF47CA99ED30F4CDD5C08077E3A15007B3D99EC0
E7293F540631DDD0EDFF5D0F26E55F7818370900E0E011E8ADFE1F6C921BAA1A
6089E9807455A52EBA23D315CDB17E4340492D56B2F9F55B305C0A2B7630D848
BF0FCAB713ED4C39E07AE404E03107C657AF20D77D00506D9CCB607B2A84EA37
559682F3A4485E13583478574A588128C82FF1F5137D546444345A912BDA3DD6
6AF2B88584D46162E6238C11F08A78BB2733FA19FE7B0B118EBA1C2D494C1CDA
C202F133D2A2FEA64CE89B8BBBC317C6452963884CCF74F4CC878B568733F297
FE79AD67C501DDCCD03A3A1B7138B17A00FC193A3FB66F981FF9642C3C68F3F0
E94E30831EA80BCD07809526B77B1F56815FCC4853C032B017AEA1CA040B45EE
A30D1BA52B3D2AD66BD20D40BBB4574C957E2054A58178F52C8233BA25CF19E9
432FE8E7FFDC3F7531177453B2EAE7281A432EEEE7E0715141C24FE12FAFC126
B23CD2BA5DABC3F72AE8D84FC8387E21BD572B40BDF5629CAA70065351CA2650
48A748D61C4B7C040606D6661334764D96AEC610923F255A23E86A87086C49CF
A284AB052242CF8F509909D9A06DB0B3D5F570018B0618F6C4CBEBE50137B5EE
564F22C2D72A793964CE040E4BAECACCA837A18C18B35F08E4DA77DB27C1523B
E9D4F365C452E210C00A3C66653EAF9F1BA07B2BB7ADBFFF8418DF85663C0435
1446E1135A4F465E1FEF90135672D70070598C1A0412680CF31200B31AE13911
3FD8F9F789BECB6DB4417FAA883A748DBB85D24452E086394B6B65FFF6066AAB
60C5346E04B55D9ACC2787C5EF335552B309559470A8402775C41AD7E121B64C
DAEE37CE6EACF7D86D1A54F6C323164895CF5E8B7CC0959E57AA808DB31DF814
EE8E5A684FB4449209F1D6DC795C30B9A9F7A49A4104BC29A368051CDD355864
B2CB30DF6E6204BE1C75C627D6D2C7548DBB45AD542A338F986C5094011B25AD
3104281B9F9EE0AD460931456B8BCDF83557E1241A5585A07D193BF5A8171C2E
E815E92FAF854654D530256D5C31917F7DB2DEB164817616BA7B199767AC8C8E
508E6000F7F100737540B21745BD882FFECB8914A1E25B2A8B2E384949B6401B
0A31F3DBDA75E9AC62446C061296402C8B27535970BF8BB79B0D31DE79456DA0
AEB62BF9F89D2A286AD2765B2D3E2804A6BACEA3B04BBA7E1930694CF5BFDFCF
E12B66291A897CD411560247B4D041902FEF98E5E3C936A06A609F48029307D8
249FEAAB72F6E1CFBAA8AC877F8E16E0C392019E33F268CC072F36EF1236742F
16D8D0CAA47078D98F848BC47519F457699FFA6161365990E282C94F6C12EF4B
456CB7B423E3CAF967204D47673C2E7442DB7B4B326CB1ABCCD61754F54A0F79
5D6ABA9B877B857DA39049F5887F6C75EA22E2C1A23C32D7695D85DB4B8EB762
BDA2CCDA2F5E5ADA62706D4ECE8C3AA1918277F6EE607C917954B87F2738E49E
191D6E873CFF43574FB0FCA1D202E8F9D29C5A367C2500F9C358553C019F9BF0
E9B31093AF70DB81A133E6B4D9F90DA9AF646140AFB2AAF466E041274DBD62E3
59A545D932E519E08383B6A269D928DD94CE748AC1F0E99EB86F60A5E24DD207
DE9B6B16A7D5E7CD460DC1080040F5D4BCD3D3090901719F072158DF40AA7C78
D128AF38AD368A9A8957F5A70AB9F9C732D51259D2F95FA6D2DE2B2348D16B0A
82D47326D14E817FF8C3EFF9588CAAD1E91F50990ABDE64E2F5C77937234D156
F6F0D1D8CB950F894C22931AA8289FA43A3D91E2853B04EB3F5AF5E709F6A4B2
1DF74279627D1A70288C3C49C3F18181AE2678F71FDFAA901217BEF8A2AF7DCB
0FD9A4D39EC820E0B6581A24EB1391BB3DC02496436541040CCFE0C249EB7C66
B766663913C8A0B5DC43FD4EDC533A575B32E6A9A58F94065724341F907E3244
EDBDD51D7CF582120472701A66E8EAA12D2FB818A56B253C83B32563E2C59FAE
2822A98F20DE1C232DE700EBF60C87FC7861180133E00A92138E367F796267A9
33CF02B9229BFDD8109322DF0CCE8FE0405D523BD805AF8DB6226EF1B9E6113A
1C31010A4BBD104C7E5AC0546AB1E913923E011284E8FA157E9DE83E8BAD62DB
170DFAAD66970245FA069B8B1982F2867C7FE0E41CE5C9F79E0FEDFCC22B9C02
C7B4DC651BC88CB2EE8097A410A030C92026F58D771229C2A3A491455426500E
410A7078C51E32780C828B2E085A16B4BB7FB883C5A5754A78A4E64AA58EAEF9
73C5B06E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE6232D73A2
60A444ABAAE93F0682E9FD3281D1248F0B4D163340A17A117E256B6E401B2050
D4A017A44323FA5E1F6F8F356E647DBA6731EE262D68462760095D939D147A15
0DF0CF5FF275B463996115023386513A94BE894217DE19D0FA890B59A1132222
847656EA3CECEA2B20FAD99BFB580F4481CB11B0D8A8A79AB348A5D06C52CDDB
C4F0F9FF2CB14C66D5BE04886842418E7FD5F26EC9F848EC67B9372C6A09AB04
536664864BF6AF7088D520B6390C6534C43AF1C73A472E80E043827A24601A55
335E6DCB29A37C40553AF1BBF3601CC180060557B45DC9DF29E07B5ED9F9B02E
02727E7C01E1C49BEA69D1F224ED47BFA0B135E0985DAAD887B0779CFB96EC13
82BB8D2F2C2185D03DEF3E86D1D094605C22E55B5D2A410A8B11C99B50FCA8C2
F912432E63C563603913A2AD866D6929DD529114F1831DBD4BECDC232AFC4BF0
93F2F7A000EE38D5968CEC43DD2E3EC8EE869ABC3DE5B8C7D4B8E0D8A28440D1
DB7148C5CAC31020FD302B5851DD2B079B7B98B4032F9952C638CD612E982C18
F17841FDBD5D617149C7C6A1091A6BB8C3247448756280308DFA79A8D81E0BFF
44D56F0B5AB2FA7697281C7DD38D193774F10D42133C2FB7575F668F8DC52CDD
6C52BA0DF84A875F64845E045247C6408A7F43A79355FA462A8F837AB8DA1E87
7A54938C40C967DB2872F25AE7FD5EBBD7D41F6CBE8CC70422009BE64358A52D
61E77E6732CC1DD68822795ECB45CD234C870882CC64C6ED0F012B4D982E5FA7
20F57E7A63EB0EEAC185577B08C29452C57365780429118C4BEC1A0FBCC9FE59
55B0A19D4B829AD6960F364DE9A08DE79941CD89A0EA70BEDAE1617820945189
70EFC7ADEF986C9373FA0EA70B7CFB61AD29650F54D71FA4BCE35E957BC3C4C1
10C967198F239E1E29BA5D4339D91B8D56452F312CACA306CBDBED288A6E10B9
209CB7D9DE3DF62301B06B1563FE3B095D62317886A6A4B9646E8EB39F2E69B4
D8D95B82193F289F46883388E5725A0DB11AACA01C5A025B577077B789797537
47CFC277BB6F1BEBC5CFDF4DD6C51634E6962E3719BE0D9630D66349C6B36A6A
1B317FB25AB631138D51A7CBC8942C0A4F5B3644BB3F93D725D9437A1FAD7753
75CFABEA715C32EAAE490B8032086F236A3BCB744CEFA00C3CDB20B49597DE38
816FBA0922D1913508FA1771127CB2E8F1B35245119C4EBEB562C96AEA3942C2
85E7C24135FB0FA5974053DAB9937E5F7774998EBA622A8296C13B94073037F1
D9309FFE0FB9A1B2D58C5844252730987E75B867EFDF68507C02E7B7DD4BA809
EC17E1CB92AFA72EC1A2589FFDD937A4B5CBA4FF9255BF326B4E061373687DDE
2CACE3E464CB523D63824DCFE3E8E0EEB386961A7A127BE9B2C1E6DA62503EAA
FC7B1F921043674B29815A001A6C2A93652F4368054552460C93404AB9A3A468
19A8980A2806D2FF92F0357DBF6C803E096BE386DDAB0BEB090F66EF7A3B6BF6
112C35C2364D357891612AD0DF74425C172F7F88B36CA844328B058DC741C12B
1E632B88DFE8C85DC15764E49FFD1758663F20EDDC9E5C3255CB46F8BFDF5208
F62170F3A785B64C141CA8878DBD3BEEC1F04D55B2137B3D488F988D4853136A
4AD6CAD5A1C9071C61E85EE34B0DAD813533790169E70D7A3F9AEBC27D2ECC50
28217B4715006F3C538995C67DC347CBE1B3EA12CEE1BEFA5746E5AA18CA9935
E173F9B2B020FD62E4FAAFF2C33E9A422F93DB1A210C69177EE22583B10F8EB1
9C4C8221F677029316FED3C43E86B249150EB6466E8C878466859B0A86FF05F3
C7BA123A6EBC4E64060FEEFDC883664CF98EF6E36089D6DBBD37E4869880D104
2A1D2242ADC45DE953B3708B66C1ADD72C45E1B757A358125B622236F80938E2
A77D50A109110E0F9B57BFF01769486442C5F9F78C071E4B0CA7308A96003528
A6EDE4C99EDDD63DFF53AE97D6F24166CF0180F630788D2B5392E03264AE22D8
DB4CB60771FB7D93C25960D2BA2A4CDBAC279BDFFAC2A13D7C9D53126432B67F
AE2ABD8A928AE8BEDEB6800B3CB20F5B94D5152C82BA36998316E3392C1C5C71
7226EF4245F4CE5613899B9F9160B34AB58BE3BBB2C2F0ECC4887DABE9B5973C
6F9530E4D68593C286EB5A2E35CC687E1A5CA463095EC93217ED92EA8EFB2695
D3AC069E2E0FC916A3081FC0DA1FFCC5C92C4D7B7271B167BC0F2DA8B334423E
BB2E99C105CDDCBAF905C15AD0F715B1200EDE6387DBE4EFE293A876BB16B5E8
32844BE64C2DC87245D9398D2541273ADB2AA6C9CEC36FB17D4738E3F6F4C06D
71647B8F6DE3CAE4CD49D658CAF6BE07A75A7E24F07C6775111EF11EA77709B6
05CAEABF281E1B9F9FAF9DEEC8795772BB4F973E68104F30FE880B01428E12E2
67BE8739F0161A625F46F3365541ED54D10192515440881EA4165B66D6AA8885
0882B11DD8D44CF074201B327D507A9B0DB6EC0AA1FC04C4F6E5C0F28E3CC64B
B493910407A5F5D9F5A72759AC53E3E2E46F1F8128CB75B2B48C5C0D4E75403E
A0D0C05D5AC203F5F797F6C7C0BEF1B1E878E6D4868659F3CEA18D8EF6E545A8
41855EC8D2C6F979EA2383DF2134CC5272170AF6D26FCC5FE661ECB24DB83814
4E570E9F05E3B391CEF307D850AD0DE05B85FF8E068ED009D8BE872C8FAF90FD
F2A9E5B023CD0BD7CE6BC1B6ADE49D85830843451E4D9840AF24CDE8F0209A8B
223CF54AC85B1CF9A686074540B19B491372A1D7E5671DEF458F274D92CD3EE4
59A8AD29D62E1D87CE9E3E0CCB742D10AC585882832B73DC801C231A919DACF4
E6A8A034B620CCC31277A6E5E6FEC10CA164F462CA224F1E3999A1F535C5A072
A96597A3701F283E94A955E73605B913CB8C37DCA2060B87FC9B7F217830BAA2
1934FC7BA5C13D6EC51D99516B2F83536D1ACEF9251F74A6C93BCBED0BF1104B
98A577AD2092B7E10E37C1085975ADCE557B26D1E17D963A92EC0485E38ECD5E
EF87C40CA59D93AD83990115736FFFEF3260D315343CF8D6BEC3B63C5E990671
973F5824F01E774460CD32835D1388D96F96A593E330B14A14DBD67299AE5B40
4BB14B116CBDC4D9E8C96A6D3CBC5868557F663F77D99DD12792355908EB3B48
233B2A792ABF67FE91B7F02F5E19ECBB1EB2244115CB01446379D99877E439A8
D93F06F948BFAA46C5AB8263CCC6111D25EC5AB37B98B3BD30E7799BB7462F96
C7E16F286DFBD49EA3DD6AF8B9D4F270068D06C5F5A7D53096E1387D4979B770
7C5817BB1A78D6FD48E13CAA1BBDBD50692F591BC6A2455CF057AB1CE5028AE1
865DC1D2F8CE8E1A164F0B20111ACCE8FB350EEE8077AB1400476C02ABAA2B2B
9C4A5520E676A6F80520D41F75F70D38107EF06F3DEA2C4CF0B5ABA7E32DDB2C
611F4E0790FF2D39AA6FE20DD9FF1E5704F89BB6C8A14CAB0BFF36D6097D82D3
22CE26ACE7909C0449255B3C4C0AA00D99A76439144A5A312DD8406FF4E2956E
998E7282B527CDA9073C8ADF6B8BAB1D32DC9BABF11EB0D5E592240233CDC50C
E4B6FD87AB3F3776E9070B70B970F7A9A43CB702A2B5F750ED1A437D5ECF7F11
8C423EB0CAA27CD9EF5337734C10742C77194366B6B2C5B20D457A0B5F48E4D8
2808ED979F7B43EEF7B7539C0A665FDAF8D355CC7F2FB4F41CBB2C057C1DE979
8AA4B887402F0A212F83CE676CD59834A853BBD928378694E7A26A712F672B98
44706337C3147E2DF9C8F408214F7A16F25B589FD64A0DB210E63BFE81948BB7
5286C7485546A06F9E176CB67A27CB789144AB4202BDE2F7AF55BDC77CED29B6
EB90F88ADCE7EFCCF7E1B82D92374792D371C56E890DF8030D720A845F034E66
B1B256EAFEA992C1F5DAE96E1A7A9CC0F6192AE53FAD5513C7EC2F1E3D391687
14F73F1DFF0C8090F1040E227FF92AB78A9363B4C61DBDFB596C77438EE47D6D
B957A146623432DA9049268A79A3F0158084379CC60CD50493099AE0D767491F
3FF1257D804AF49D3687E162FDAF89CF302028506F47E515FEF32CDCEDF61CE4
CB35C5BEF1CAAB290B4AC26FB4ACA38AD477048E1B423D00017929C7FF264DDF
D27D027C11C52BC02D500E4E99F06590F446448C1D6D614231636E68F3835173
BC1879806BAB8E9ABAFE3D01E7CDE9CD03CAA92AA7D0F66B98937A0FD72CACB2
F62B5E5B84B1608EAC140CD5E18C88E87960E77AAC80AC7158A43A765FDD8C84
59D957759117201AE8A0BBD7F4BE0F836A3C258D7E2044DE451BFD2664EE0DC0
47E842C41BC7111DAEE094D2FA38204E665B9DFBCDBD7C1C3A34709BC6F9748A
470BF9D5FD775266F6C35BDCCCED99B371ED7B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4A508CC61D06884D6246FA607802124E77FC07620C1DC238000AD
F6AD8E9D7418065549E5A7DE64405908A078F353F447D44E968A8BA903DBE04F
677479DB92989DFABDF637FF627F4756AFF80F27EA2B9ACD21AA8BE59F75A8EA
AE3BF5ED74076F822C41086CCE1E87A943549450BDB18CEA58D596BDEDB2EA43
8085FC9662B6C313B5CB54A9AD8CCE8BAD25DBCE0ABE023261A1794761FA8430
E43AA6A59BFCDD7DCFEF07F933662CDC5724D3A5C43A25929B54898BA9B58D30
C6F19B4DAE1DDF8E068A8B441C5B5E1FE556DB195D2881FC9AAF598C88CEF222
74222E0FF68051E53B460935C2DF2D8A77807B4DEEAD3FAD1E46371B4494A4EC
B43C272E0A1DC0BFDFA816FBA451DCFC20B89F7603803A12861C0FECBE1F47EF
98C35E5DA9D57564EB8DD80FC43D47B3C5D419327F7870805E30810C134DCE8F
C1F5680ECAB52B7666FE5AD07FBCE7B6C7466C36C1FE04D8866F9251B149042D
71C931DDD8234BFF1BB6BC76E651CA85C0C845ACFDC98ECFD8D07A125E562356
B7D819379BCFBCA830A71389C246F771AF97AD574BFE9944461FCD9408C88D6A
3EB9ACEEE59EFAABD76D5677B231727E89E110AB58F78A4BE43408C7C2F6D446
5B31BDEBFFA59B2A6E9438E4F5075931668B04698B3CBE8F262043BC15C05289
17E8327FB8B6B10274907C8E9A28945C70BE2EC90FDE715D61801FE189AB7A75
30A0C7C921F074C2C63001A415D6978EC80CBBE250BA0562AB6D29135BA477FC
3021B6854484A0592796449AE8F9B27B222100FBD51A9BAE076457A0A9E830C0
658485CA6304D445AA4B08E97B5BD3466C6897065446F7653446FEF499C10BBF
BDCF134E1D1EB8B314610183673444B6645B55EAD0550D79E5E4655E10AE13C4
0486C064E7C7CF994BE8DE8672207703D00D9E6A2484139549A171890B36BD31
0D1A184C084913958D22575E85F99F8590F62933B22EC8CD48D81CC019C9B4E4
1A80822687CF6CE66357C4904B79B704C799AE090C2E12AE0D9889F2FF91CEC6
6A50A934E374045BB4457FA9E5B652C7DD22CD157327FC45056132D2861F781A
F45D555B786B9B2BC563CA35E60B85E210DA5E0740AC1751DE355F94117437A3
4D3F4F85AB32857E14E646AD69AE46D8C62864A6C967A44D7900D44790C42519
C77695497AD2EBD51CB4DAEB0D9834F4CC5F8EEBE00BE39EEC30136B8BBA284A
D932B98721AAC2F00DF496288F46F21FC15112897A82021211D00A7FF64F3150
5A2E1CDB32A589690504D097B10E30E7A4A75691C0BCF4E5B8032D1946A35928
9FE2140F4B10602A684CF11275E537A592BDA358B1A86900F1B8DC287C8B2340
D731E4BB3CC6EC6BFF929EF80FDB8C24F232C6D89B7278B910483A464448C070
9C17105A411052C53817770E78F441E5F78DB3A150F0A442EC30FFFE388E6A96
B840649848D48610D183AD58CFAE137758B183F086935E739FF030719400112E
AA300CB6910A4072C474D5DEC20D551CA856823786EEBBF290D88A354644A4FF
F38C3AD2A480AE36218B4F466B8C7B131B3883E24E8852E88A012D41DB6E1D3A
D6BD20856C95470908FBFB46E47AFE234F39950BC003FDB74489C8B45BF7E1D6
38375F2F1ADC2E07E91763D2F0F99D02647FBF68C82AFBCC7E3A3DED220746FF
2B7076B8337BC6B584B5914801AAC6E8C36EDEB819C7BDC6335716A87C2F39D5
4B03E9A983BF9EFA56EF946D8509F3B7D2D2999D3F3725FACB38C6E0C24DCE9A
0D654066CEA814469DA19702F997DB1854F135C2B69D0BE6D18336AC2CE0BE1E
D7139E62E7910590CDA5DD4588FC950C9A5CACCBE39F1A5B5922B70542CA8BB9
3B63EEB09F28F3966CBC449C788B427E50CA5BDC093DC971B1AE1279F582DD25
8C11C2B23574478290F37CC2C41A88139787246D4C8C41D27CD3F086246728F8
B4B968EBCABB09B17A7E85C7BE858BB0C683D1834FCCA9AD81FA94AB9C5F340C
AA0AC6745916FA18BB8DF0F66B3C1CC771158FAC11D76E7D163A7342A6CDD3C6
662F5AEC5B3E4A69FA7BA6EDD414F99F3459476AE973647334BF7EF2A742DD53
A70656C3E06A7AFE3BCC7EA7E4B18230728FA5537156C1FD8C81C3C8C2305F34
ABF61F1A074A1266D368699A779C424B40BAD55E954F8096414D8305558B5F99
A435D7AA3AD6C77FB5598C222D29454B656262BF46A872C86B8B98E210848F52
4A1A2EC2A5CA7EE3C578535D39CC4C6BC53064CBA51F6A78837E178446A5B0C7
C57D129D64B0DC0FBF1F3A16E5BA4F90BB140462D8955A1E06DCEA921B5088B1
1C34EB94E3C489B22D1ED797CE26E2403B89B3D916D30ED29B3E7301B06BD090
6D7C8F038DBEE3A896992A1CDABBC5D2C87F9C203979697C640416D38AF8998F
EC5B0C5230E17E4CC99545E0775D89C1D1836F6DFD97FBF9633F89417C286FB9
8AB2D2D3A6081AB500436204DE3F6F1EAF14CCB7901A3C1C54A705AE432416BF
4FE23DFDA51D40DD9BF5DDD3CB175F3E1E612CD544ECC7FEEFA841B2274570DC
E510E39D6CC4DB979186221ED7E0B65E32A8EEA6EC7A69671417426CA896BAEE
9F9EC2637429CB45EB3ECFF3EC05B35F6AAE9C67CAAE00C3B09AA29BF8966E11
E954B0AEE88EEF4385445A3E60BB759D894EC7B48A9F798B971EDBEE3650FCC7
C8B259CCBA8205E8F98F00E3D4850BC4A6FCBDD7123B07424671BF00797D681D
595B89297A87323DB82F4366E7F84F745A38C7631BEB3D095F3BDEB0FC0140FE
BE91C45AAB69F13798A4767C68AFFEBD29ED4B6E2AEAD7E6A538D79D6CBC1D6E
24C17BC4090A4CBBEF3B632DD50F52C8AF74E9B3FC245E6888A546966F9D7699
00193133B2F746F8517795ED6B0BE7AA1CD29495FCB31167ED06A5A340040C1C
50BA49524C71DD1D9114BA71BBFF779A727D18EA999ED76E138D519E428C90D3
0E716D592F48C9E47DDC1DB7FAA39EB5F85C96ABC52810FF6AF70D58A4D7D99D
11D1F0FD52825A689E15BA0AC79D3F8FBC31DBEE9CAC7E77D79B27E02132A165
44169E0C4A62F45F86C78A802997AC440DC8D5A6B1DCE8C3EF1B58A487BDB1B3
F7EBB749DC4440CF1B518E22A75CF5E9CB9A4DB1F4E6B4BCDBBFC85A3A92B3FB
7C199618D3B2D90A75AF58CC4CCFE35957B23CFEC70C91E1823C03F800BC86CA
8D726260B51E71CE4F9FA406446C3F30BDB2FCE712EB0B9BEF80D5A156E3EF0E
EA375E66905D49892B70588D73129F8DD1F0FAA258942085749E505F1FAE14DE
1883D530ADE4B196DE9E61C4C8D5FBF4CF991AF88820F123F95B43BDAFC180A6
1CD2FE2A391271413D1ADD6D779B654150041DB744518A0E8A80F687AA6A1FA1
45DFF761EF8B43F852E00722DB3532CD698397EC9FEC7BA6446656F2ADFE1C2A
B7F8582F33B2E19893421464A9501F94ABE2333BAE0E4F838E1342D1C351AB40
3B42027CEA384DF3A16FD969B5FDDF273E44AA0993D5479BF1CFB2FC96B01ED7
C2970B0AEAF74A19162BCECCEC91080AA036BC6CE74FF7CD37E72356EA559BC8
93542982FFDB6CF19FEE4D250CFEF414086CC569FE694A3090465C94CFA5C784
37A7440C8AA88B32FDEA21D73F36605627934E055273B2BFECF4FE50A760887F
52E83F24A890B95FC8BAD5F27D6E47F4FB9602AD6E1158543D00A6C821C8ACE3
01EECF257B1E9BA488552799E40E102D9E5646FEA24C0940D12507B823BA1B8B
C4AF53974D04BDABCC0C2A06849F5B712394804BD4BE709221871A09D6ECAED6
F3C14FB659E8B9BBEF8720614C303738994C150C2AC9AFB1163E58651D2D017D
8BAF922FF16B61334C671073A58AEFFDE86FA40B544AB1EEA5F27B91E98C2998
6B14D002B34AD21D01E1971AD8905004C227EB2475D77D38011585E14870C3C7
0C900B579CDE7D7C306DE84AB81E99DBF54BCF28B63386D2EA922C80E9702C61
E213FC3412FA8677AD4CDBF5D5E8524B0D4C7CBBF2A3552C50A5DE02C35AC220
A89123A74E0B57509BA75FA5613021A298F90AB39C197A0593B73F71DCFCBD2B
771A97BE327B917D1B6296D9453D491902C7EEBCC1ACFA39BCD273B7CADD7262
FA3D6C4CA5F9F22A72FDA487FC97405B9ED8E24200F1F2197F2EED6974E7B8A2
12D08F73B0278617E8DA35579FE7E7B9A29DF29B896AA8798E221313618DE78D
22F02EA81597EA427FED568F0287D043B4DB3C8CC888243B9F7305A874F81669
762B92A37D94A10B417B0B65C693E3FC65EFDB1BFF7763CF1E0CB43E13F1FA2C
B3EE64202C221D79BA01F71E56482BE924C444FEF0F24767A37E04B9A16FCE62
F33F0C59263F225101EB0711F288B2C51C8D0EDED5B42822FAC82C37490A0BEF
5642999E4D1F915D1ED09BB952BA6E68FABCD60608F52EB8B45BC3807D6C1C0F
75E57F66F06D0F94BF6E71CEDF718A506DE1D8C21DA48CA43FB0DF73DE5CB762
C32A349C4174811E9E24F8D944B1C140707E2734854E28C334B1CD93BF182F0D
75285DDA2EE72CC66F826A3A6924B4842F5DF54C9BA5C41117B358E59045747E
0EFF245F7682641E7F09BFCEB2EAC030318EA189CE32C32A66ACDECB128DAF44
2A563EC06644A4F7393C18B2E5AF2CB73F1FA7A9AADAA5CF5592EC91283F9549
F09CFC040831B45FBF8A1AF6AC115B7AAD0F27E911880F27B0FAC18F712403AC
ECAA5A63C6E2043B2EEB4A5EE20A546A99CDA28557AC34E8E9E673D3370769FB
78FB528B745B5178F171A96128E332BADC599B4CC8FEF413DBA605FCE061AD79
9B805D9C534721F4C9E1A4ADDCE036953C7ABE3A5A0BEAEA2CF3515F1C1E6FB8
5A0EDCE49BD38E2858E37BEDCA8C489F9EE00BD55CB7B31CFB6CC1ACB2AFF585
739853945C803FDAF2701DE88CD2453C09987E235D60CADB0700BAAEC1603E3C
A8A10A1DD39AA233EBB7A0BE5C47E19B535F782A7D14216F5E4A4B898478E856
FDE39C8495935984DB05E83E02A80937BF33358AAB8D0D2A4AE1EA695CEEAF70
E3B20CE4DB012E9F2066466E87F3FB543D252534225A580648809B514E60D191
5C995894C52C9CB3D5BB71B130C2A35AD8AD0704657176F17CE49A3A6957A9AA
3829881A778F27C71D37BF15AC54E8C39BF35E974C74DF0455B469309503D39A
45298E3035598F2B29F7BF43A43911F3E42113D5681A04596EB54B4DCE8141FC
B5B9FAF72464FB63A5C42A63D64F3E16A92AFB64C0891B14D9920F486D3C94CF
0C7669ED9E36DD33954846D9D0ACBD50177F5BC191C9077BF8E53EDB89D6070B
27D4919792C0BC103538CD284C9CFEAA2928802611B23B64DBE6B4B81BD89C82
D81A6F3E132606A8524D88E16F3112FA0F007C128202E58A1C945F77AB141695
47EE2D0E54A8D88B3F6E33199BC15C451E1A19099A0FEFF456286F94838CA95F
EDDFFA2FFD0EDCBE4E3B5C8D8DE89E242F9B6312BB5FCA67D1E215EA5CDF7FAF
F4A03B3ADC70E8E030DBAA42CF9D97FB643A70B156B885171AD9B0A46A77545E
769124737C044BBA551388D7D2F852F643A8A9C8FAF925C80301C58EB8FA125B
9C9CA9AC6190357D2163E289D996CFBEBCE833110C18F408B1242EDF8227B38B
16EE57A91EAA19E1D4CFB9A8CC25838F9CF20D5291634BB4E51E65D881D3FD23
483E066B2D0CB2862B29D8E7EDC7FBD12E00326B343F6AC581123D98A400AFC6
3A5D1833A73902E8459483FE5B31E9410E1FB3BF82618732F95D44EB4D596116
9CB33C96B970623B7971497AC7B8E493E6438512E558585171AA0BC6F39CF6B7
252091ED8FCE1AB47EC80423384A047BF32997B6EB21FA6D5B0DCA26D977FB2E
4A9CACFC2D95E34C980B10C45E2BD3C34396A5F0D016B8C50CD21979C66ADCC5
E9B907833E2EBE20810A00D1B8BB573DD0D6DE97CEF92D3565BC93A333CC8401
E19F4BEA4482C08888524A2CB6683C0ACD71100B937B2577896DBFBDA3843891
7588CAB3E59FB22C5B875345D178AC3FF3E73470AF85D8641D23C38A11CB71AD
3E4D82072B02CE4E7EC1FF11CA66D3DDF2BF363DD28D9EE550C085F9D118D88E
3365F7AB7CFEDCEDAECAF1284990FEAFE0A407C7C2B8079B2893B6E6BB280D37
3A56C6FE7504B5105BD2AB87A277B25C461ED0A8BF9124C4CDEBC99973D55751
D97A77A9547C21918D904DF26CA16DF9BAFFA28833F988A66AF56E7FE0437508
12E7A61C73DB3C8C771345EEFB47691CFB53B9CFF553550A45CE61B6D41A48BF
26259AD47E681417AA785DC3DD1E56F0FCB89765D3815BFAB2B94C0150293D8C
7198748B17B23410137585B8EE2BE046FEF515A57D4B87248B27210AF7C057AC
FE7260C023D3EDEB25D0564B1E3D9DF10AFEE39B7BBF6ACC5DFA9253BAC1D050
3E25B51A047381BE6DA0B284B2DFBDBF591AD94CE3DD3470C495420807071BF2
192599F5C1BE52AD977F09922FF466F5918164557DBDF891C85681D27B2BAEE0
D95E11DE572E75440B4FAD19E8A74DCAEF64287F63007EC0F4D759A3EDF9240B
8C62DFD25844AAFAF1BBCE936738F594ECCE839705637FC673BA3BA078F55FC5
D5450A0991E2C870B30F3A59BD3EC4B9E19F4369AD260BABB4AC921A8CAFA412
89633B2310BD77B36A2F13743416690DCE13C7925B7D350B4BE3C67C89E96095
7F68A42ED5D472660A47EF1108B629E81060CE1C5A1957145FE0859E0180BA5A
9BE430C8A0092D2A03D2F13314F3F7DD106ADC465DE7F7BC48263F67A0318D29
E4C9C282B4E68AD79E9C2ECBC0FC0244F18755A380C9A8B4D43A811831F4C174
300B2E3D7CA6E81448619B7C455CB9F3E2251287641B14B2B30AA714BE18BEB5
F3AE215776E1E3126F73F52DEE7038F11BE5EF1B949EF8476E989C1664FAD161
59B8839CAA60AEABE248A8EADA2A5E64763454563A528E1E678031845DC8EA7B
32DCEB16073E5209113BA2D44E5B66CA5D86F0C590D7FB9E51E09C85C5BCDE30
D15CD9A8403E0B42C39D2AE574676AA0592F3F052E71E8E353D744D33D7D6E50
620550430364C88A1DF224DD3EE5110EE40D66EB10A2A8A57A14B7F2D4815E07
33979B9FE7F133EFEA3D477C0433ADAD9AA04C4B6A9E56344507DFC06833D3C6
4B8D2004835FCCA4CE0FD94834479279EE15544D225E21361ECCC811521394C4
8F2DDEE0685B9209A41A96447D4D91887974D0BF0E6B0C5982FD14643D0DBFAF
C39D69295DCB4A603FEF35F2FF4534D849537AC77531C6505C9CA163BF736BCD
119B02A9E2117BCEDEC1EA22CC0D85C23D2B9D8D0304DB9733DE1AD3C802BAF0
32951F69E71558B50DEA43ECEFA53F6F3A64674253522B9A16001173128ED3E3
0007B5E14D50F10655AF129EA1A66E8788A5C054CFBF4886DEAB590B2E6A4EF1
135B2B81A10BCA2788C5EA4AC70A9393E8932041916F649AF3A3099ADCED70B7
671DD1472E5BDC0060280A666488893E1C5D440C1B8B9A80CD836D426124AD68
878E304CC8C811E19BED9148C403C5FD2801A2BA39759FE36B2D8C7ABDB823C4
619F741B8AF1DBF8A86D3EAECC61CEA16994E1BE4897EE51F53D2A54740A49AC
F46389502CBE35A3EFC37F69F27E22B678FDE877BADE791C49E1D35DA515336C
228E866879125C159F7265F927EC8A0FBEE6924E09F3610F32DCD147782194D0
FA7B8DF269D6662C1D183F91D837DAC9C5C6099D60CEC4FBE8F752E76CEE3C5B
8B6C85C1F2A2591F52AE787815CBF0CCD692FA9C577660F42DD489A83EE493A4
76511A807F725F6028A95C12238244825B02D37D37B1C1BD85DFEBCD88DC0519
B97882E8F13AB526D5DB34340CBBE92862923F31CC6A125C8089E9A1B6684650
8EC480AD837EEEC094D235E0AD62CAB0A75F1B5C17EEE5706D2AA32633511391
230E238FBEDA18E91FD90423F8FAE7BD2B63A62F447AD614AC5FABBA8F5F157A
749B49D3A5B45A118D7207AF2C1422B6541B815FA7DD6E3F020F3F5667726ADE
081A08D68948E7C515BD772CF627D4050C7D65FAEF390A988A41FB6F061E4519
DA87ED14EF3E4DD81939D6625C26BBDE0A0D3A2638FE87585DBFAB6C760B1EC0
A5BB79F6CD16E795422D8A7CB174F75146E8206C04B7C52A3ACFA5FDDC4AEA16
0F30F006E1BB2E9F3E4AAA7AA9EC2A653AE476ADAE3DE5D771C66E86F97387D4
AE97D6ED2CAFB419C44D8310F79B48D59CDD5C44A672F9820A676E4F062B5BB1
0DAE3331C3E3C1B56AB328435C9964D36B5273A60B53D4B46DC4CE9B9FF1A748
0F80EC4A178E536A4F5BF785FE50E8724E521DEAFB89D35DDCA3297023DDC09D
647BE595260BB70C631E70BA8FCA40C0D865F51F103D19667B4A9FB2E0CF52DB
0AF9EA0ECEFA45FEF925E38E430E37B4681B2FFF55821DA4B42857AD100F647F
6430C149498B186503DCA07F57B5F1164FAB22A3991F622D9415114EB2F3FC4E
FB8EB31E6D5FC58CADC13DBBD4B10ADBA185A1AEFFF7E715CFB0FEE3C5642BD5
2DC03361C2AC17638689E052523D7558A09FE3BDAB68B153A44EA785E273ED52
156C072485C5377874A00CE95C213679C8C3675A673E6E6554D774D715491E24
07E9414DC01C12DF0BB686439960169627640B4ABA46A9C3A55D059913DDF7E2
AFA021A6B5978A7143AAC8415DADEA0BFC02E53E6410EB797DF9F21BAD8A730C
0E99E1D5E7EEAC2D9525529697E4233D604D9D09B49C41EB21FC0E72D82C7279
880B226D7F149DCC773BCE6905BA5E23F4F1167877A17CF76903EEF8EF14751F
3EED727719B696A46DA1814424CF91414EE19F2B8956FDC4CE39D273F3482773
6C9E61DB7F0FCC062D4E32B9D21CB37C9942D7BA353D8D65BD2A5BBB35011042
16E2A6E091148CF5C1FA27BA60A00E35DA75FA891762FA2C82E39C46F0D9DE2A
36056CDD560673EF6B6FF9035131BC1282B989F287F68CC0757914AB3ED796B8
189A3FF35CAA5D785B1EAACC916B33F88EBEA6F5C4A242AEF70B1058A0472CE2
059E67D62BDD2BBADA07885E7324DB6DAD348E1D304FF541FB75D4404BAE05C1
76B4BE142373096DAF59F983C31F9FFF97BDF4EA9DED9CA2889A35B766C955DF
76EBE8AE53D3AFDDE321908733587D019670B8A9E94DF30D8DD4A5FC1CFE2A42
938F302007B4E860E846EDE30DF24004AABF2D76583F1323353A07E9E994F0C6
1620CD713F1B90D288F99BBEB10CF406830A4B952EFB4B53D9F92F7E8DA212FF
AFFD8887617EEC892EDE39F8997E10C5AFE841BFC0BDDFA751F1CF3095F81401
83D2F22BC66F4AD96B6EC4D5A8ECAC6BEAB27A8B304080486D588CA01072B89B
C94533AC7745C3EABE054B8DA4FE3A591B487C80965BF13D6D0CF9FDE9B19C35
7566979CB3E94C5F95054EB0CABC0BE32B7AD77F1645EFCF7BA5E07C667227EF
142D0083B1F4BE1E4D77D17EAA35BD7D935662BDA8F91AE680D55F798A198ED3
BC4DC80743245D8FC987E4E34420D1FDC40E1236DD54F46B2B586F3954C9F11E
51D35F5BCD6E7EE7B561E4660D766CDA985D23DC5BB65A5A55376D6099BF4D3D
42A2CEBE84710BB883C596814431D5070A5FDCB5E0C620403EC17A8C23E2782B
807F7A1530CF4064BABC72EC3F98137B631BD95015249A51794EB636821884B3
BE9833EAF353E37F1AFDDD8F78A0052E3856A67B03EDD9ACC6F3CB3D3EADD687
7A8A828777577A95453D2F151439B2CE1C5D8B76218DE43DA4233141FDF6D210
3C19A69E25FA0A54BB32CF12236D75DEB4F37DFBBEB2FDDD7573612A2552443B
0E331A7485D861C275CB5F90993D09AD32DA8820230088A7B0EBECCCE1066F95
F2D6F2B66328ADDDAC19D917C5CAE473811AC93A40AE0781B5191DBBDC866A82
13DF0C02A16345B9ECEBD0CBCAB942740E0B45D5A7A15ACF29C1165DF2291D78
4B9E5833C2D5487DDBDC27DC5A9E813C1EC8BBE0F17939AF596ECB8AAFEF4125
E8416562C7BC68E934DDC29B78A182909671965AC82BB4A6E379949EA4AD5E77
22F0CD703234EFE86F1A59AE1A146F48B68F56CDC0174644F59C3D4F0A816C6B
3D14D7BBFE212B7D4F90BBD456C2CB0EC1AF23E1A99D6AF071EAE14EC23649FE
2FB80D1508389ED805FED84F20967DC9AF962310FB82673E41E3C778B096FE04
962213DC5D5A09294046922018F68B7587FEFCFA78B20A2957C293BE32645175
F8B81949DD60DF8DE971F9C2FC0854287BDB81019D658FAD8E11B4F5227DD691
7C3191D828DE06F2DEC97CF3644FE4DC211ADE6CE586109CD2B80483762D85FE
33029854298518783B92C3F88F6F555C123E44113CD486D302BC98DAFEE0744E
08F74DC71B56B74D876A48D5D3179BB9B2866825DBF0E61093F3FBD296A576EC
3B622DA3DEAA4351CE82A92938B399848B8F0A694CA5139AA6D4E7C9DDE93A3B
BD0D3DEC9CAB1588E1268772307DC168E01E794F1D706A7D8FD300019AA34603
55CAA25060BA156183BEFF1BAE5F65768C9CB901EFE59DF68CD921766A4CB154
A0A26334B97295BFA4099D149EE93FBCC6272AF549BFBB3FDA7B47189AFD58B3
DB618F788D9A77FD6B341C726DEC278EA0678603F85C0F3013AEB1B2AADDB233
7DBAC5FC5C0D480E34D300EE501DD6EEC702869029C91DE87E31B0BFC3B3D1CC
D423718AA4B651BD5F6705C642F9287F2792B92AC2D161A2A639212F05BA1545
842353ACF8BEC40EDC0ABB95E0C51F51A337208E6529481257F780995E54A49C
89018D16CD8C632D443824A6D20C49FD3B170C19D0071038D687CE7EB3AE7129
A83B447CA6256F6CCB535F2059807600725C1165AA2E8816F68ADF50888616A9
09586D331B280FE611727BAA3D80963467013F5933527218ADA0EBEDEBE0C498
9DDEA26D935AC30F210B5316ACF09C0ED35D867577ABAF1E6CF58F4100ABC8F5
2BDB32AF26A84CD1E1DD28B62440412E3624EA807110CA1E0C4F2554BD6F1FCC
D09233B69C67FA7866FA7606C5484FB0E9D7DD7F08A42A1F80F02D5575FC16DB
361CBF3853BD74D191F5AE4D3239E15460EB209E5D38A3B68D54A527AEFF1F1F
A4FF43934D8506595A003B4DACBF1AFF3DCE565CBB43DE8DD9B7AE45CBC741F1
C153F22C13C33B9017E1B30F211382DC43190063D502AEF1F6F6E61DFA8F5612
FB600B92EEEC2C61C6BDF6D90C0F94A352A7D9012441DC0008736A49D1FAA437
C975A0484F719293D0B0EE584284AA62D0E7947FDD10DA327D906B1CD31BD06F
93A3D46616B346DBAEA4AC8E7240371AB13955C663F83FEE211B0015740BB5AB
04E86E138C07EF3F70EB87B5720FCA9BC6B619851FB73D48E75A2E278E1F9442
0ADAF8C7C6455C53BED48576F5C637ACB69A0943E95DB48C06492D5BD9C8E098
7D726FF4F03A036D15B1DCA39DD9BCB9B60CAFA71D1B49872719E9F96395CA8A
9254A4508A3A766511B9359CF8C9A07D736B527060D42BB03EED7CD21975C981
5824BFF39434E3F758775D6254D4D942318E8B3B4D3AC01981432C904833AA89
509B5CB2FEC71C37CA3E7472AA4FF4D8A13E6758C150ADBDEF5C3DC4794A77FD
9EEDD89118AA1030BEC11F5AE27C1A1F5C67114F5D9C9BD5223FB38FC80DBF3A
F07E5C613186B38968B20F475C9BE979786BBA6AC4B35FEAD22394C03A72D4AA
C6C42C085EC91CE392669ED5538BD0836F18ED8E9B67EF6AF8F14E9793DA4587
B0A29AA69722058275E4C819DAFEBB68CB68C53EE79E4D91AEDB312FAD20AD2C
B076ED908314B0457C276CD87DDE8B20AD944EDD0D6D2A88FD24540AD71A0D03
01ECCC03F7483407DC1F349DF58579FC5CECFC25DB3365C80D56013FEFD88907
F910B6C23F1C7ACA391D68B83C8916407B49AD163318C003B94098C7D7DACC03
A68E6784BF5AD5B0D3FD945AF965D387215D81681019B61A3855EF8A1A60CB76
E614951F1ADFAE20D4F35A80153FF17AB67ED528F05A24748E5A410E67DD40EA
6737AAA25C57D1438B2514B849A659795621F923F31DD2348770450A582B9A27
0987BAE8955181DF32D4180C41990C4DAF586EE6158E231A371B2A470A2A8CF0
DEFF3D5DE2224BC43BCF9F7A08E3C30AE76637C38FF7AAB1B84B93ACB7DFDCE5
34024363A984A15973AC13D319801C1CADCF7E712A8D72D5E111C7A6B2046A89
887F2C1CC0B3FF9FD5E04750A494F89BA31C484EBB508F45A2D57387FB9F7B22
5DEF89BFE7329F57B1D75EA06DAFB592F0E67DB3457A2E3D641BF811C9A37188
33B10826AA7F8D15F5274E1A8D2BE19030FAB95A6EB61D1E6FE01500B6A7D9EE
9219B3F08FFE6BFA869D2A17E0FBBA62B1E0F4751D285B1C72012A350B2836D3
387DF395A842A5D0885C2795A874CFDBABD9988BC0CF49C826C9305D23C3D8AA
2E55402F38644715E5B30F5F2BECBCFBD3B0D562E2C978D5FA4D8535999CF501
F1D1F75ADBAF40A37A8AC2AC7557DD5D28C0BC13FB31B0EF2B5845ECCF16BB5E
61951DAFF2A3E9E9B46B9A5B29A2F79BD937C3640AED9EBA6545141F2F0EA62B
26486720E08A9EBD674FA7565616FB440C1472F6404B1AA6036B61A39E773437
A52D3E6AC7342E9437DFFA82DD8184AEFE360FFACDBF6CE902839526EC9F3DCB
A8C97CE4F0E992D2E4D4701E69467B713FA9CACEA73328031DBB20AA1137BDE2
09236E3ADA84BA37E8A709836D75CA7F8ADA56C0AE6A8EE314D1348D8C871D2B
D81C1D2B7AF04F3BFA83935734EF95BB8AED95AC89F1C6AD85AC53E08D9FC1A8
63599B4C4ED1C888A56AA2948D5223CC2260E58A7296F774E1A30B1E99309ABD
C421B1B680E8945BDC3032D4DCE669DAB92802C091E7F9E2FF10B75ABA1EB5C9
01DEF3628A698E6697206D9529C103D9BA8301AA84DBCACA54135A6D18B23392
23DC051A5FBD0EFBD9D115AD7196A8754D1DB94E7FCD8B04FC9C00669C5C2081
2A6861ACEC6415F6B569DDCFD2D6234B1F06268F792E4AF9BD4C96CC69C99D16
2304E0E7189D073A0DA307139B16B47E41E8CC73F9C1D24D4054BCDC86DB3246
D04F84F20DC6DA95BD530B5677165BC17FCC8DF804CAFE9FEC11131A26742DF8
4CEFCE36F78B83AA0E769A37028FB28E9576A15D9149E5FEC09E29C81570DE0C
5BF3EE1DDF074A6A6FA42F3010AA67B157727194144093EA55A351B0FA1B914D
3AED6D1A5539503FEA2BB099C38DD4B2E9218138AC700746D91B58B6C52D06C1
3B0C06BB897FA3D784C2AA4BC19E9CCB734401966F2C85C03F3CA20BD5CECDC0
52C7C4ABDD460098F25444B9E1328C0F9D7D0E965967F74BCF68AB8B65F2F7B6
8E2D33BEFA1713901433E7E8AAD7847514AA88406189D9596F5E1D2698D91E0B
C92F4F1173BDF569C3A2AB23C82289511BD372FC8E3E3AE03AC7F4EB982C5777
BC74F01863C748AEA3BA189D55CBE70161E6001D875718B3737397CB5C0A2DBD
EA1DD7A748783C37A19BA8C01B77068AC186C94D697257443BFCB2407ADBDBD3
7F6850A218C8A83646B877AF11D7524B64E620CD953D5133D14A27807296A5BA
D0ADE46CA44350A8DE03CEEF0D9E89E6668DE9B717B60E86360C2704070DF32C
02097F1D09FC3085B4B34629B26CFE7D7C35FAB28E46387CF7A61AE13A859263
25E9B34F9A0E85F379C5336C34F5500EBFF44AA6ACC8D4E83D196FA95349A116
E5F56C9C466F8D3A6DE027A7DDAA8F9FD8934FC522DFB3689B2EF581DD9A9364
43736B0553C9659F238CD10D735118F3F0B4F1558DC9AADA800AA3533AEF6A3C
64B0C27CB6D975077B37CF09ECC9D892842C7EC50271156B4E7C01BBD70995DF
003B7444340D36E748AE0594653E8B6F634F0F5F3965AF7B0105C1EFDD781284
6B9DA0C07F947D7524D37DC63A400CCDF4C603ACC0D73ACF38F23DF776F5F310
6A9747916C0D4B16F1B2BD3485EB7A78582F3AF85D4C67B824F78FC322FB4BD5
0A45F152ED7751CA42570F44CF36C4CF767C60BB5111FC30FDC6532FC9D1634E
65BE2229C8B0D4A9DF09B169EBD13CEECA630389A4F601F283C486349294310A
7A22A46895D181C3204CFEAA65CF84F9B04D08E9FE86F548EB57029298C245C2
EEC22526E9836B6A6A941F5B05D0804050333FE0E2BA6D0B19A00935BF3260D4
27BED849F4BE5163FF58EC63B86A7C0E94573BD0D7E9226C94AB755C8D61E703
D3CC8F78F28077A044B406B1D337F875D641AFAC7B0940BAE5FED544EB434DCF
661731EA4BCBDF0B1043E0295298AC3142FCA79A44DA1E5759EAF3FDFD168450
C733209DE03F50D4579FC64C6DD9575C6992ED6AD8D0B70D2836DFE33E7F8A5B
49122E8FB0D17159B13C71A7CFF6F63E1B427EA8EC19E936D310AF8455122F4C
6B61307071FBEB6E8DA8C30FBBF37C15D614F15EA385809B8BB8DCC51ABAF46E
97CE3973875938BE310D0033D4C73CD6C95A76CD17A5E90DD695F62C5C29BB00
6DF06A0987AE903B8BE25A71753F4344F50361F289B380E41E6A986CF2AB652C
FEBE91F8EA9914BB1EB4AD55DF687B4C7F124920F46186D31C82EE552380B3C6
5806969DDE440BC68EE43F280DFA2D892518C12DD5F849263DA8B6B2C38E4741
212395125EFF629919D054345DF144731D5273B48C6A20DFA90CB94ADD8BA2F8
2A8A628A2D5A785B7554B512463A86B162B88BB05D8EAAB80862A0C837438394
4D752397E6D2ECFC8016E7FF57E1FACEFEFBA6FEC3BC41FC6D5C16E9607AA6B3
3BB464250738174FDC062FF0D8BC8EB06A51A0118A1831DD5133A500E6CC4CB3
520D83FB75013FF9B1AC3D1E725038AAC6952E404382969C1F8AF0431F373DF8
E15A3ADBB719F7ABDD6DD0EC0A19ED7DD9065D26EFEA3434E4445D02399614BD
5085D49ECD04E7629D278C6B3E1F4F2A0509AA0C3FF6EFBEE7284D2240489DAE
E69D70D010C7853849A19CF41BF0C5989BA03AE8622767EF68DA87C535EBB201
D3A1EAA543CB6F6F386097A664A4C4B324637E0B07D717AE899B9AF5487BFFAE
1B462F114A6B3D97B45063C71E27774626C658AFC3CB646C1B9E0113A1C011E7
5A334EC9B82BF3AD9108D02FB3EAFA308D0E21E28BDFCF668469746AC7D02CBF
F67018A565B9C91621E6E029FD6EB2CD5D81F6CFD7980DF59C01C28306E3FF9D
FA2B7D6B8E4FBBA6D118C3535E219961B448E90A20E615054441DEAF6F952151
BBF89F14D3B913E320F97773B990A21385AC08FE6459E60B30C220A2D813CFDA
90208A19212E5C66E0C05F0F70729EA2BC4F954EA4C764B7BBD30344E6B4C7F8
3E277C1D3A55E06213C9491954D12896675F63C8D992F8179D0328E4C7DB807B
BCF5A8675D1D19CE476848430A7A8711CA7C5AA25DDD9C4E054551378F52F29C
BCDB7B7AA7E9E00B01FAD7705D8DB3CF5CA1F6362B6608B9042C27D7B74DB62A
CD93D36EA3FA3EFE2FC361E1EA45B1764B56EEDC00CFB10B402903C018596918
CBA39D1A7ADA531D2525FD0B0E5186F6949AF0B51E9845ACF1E34A748B1654AD
20D7CFB9559F0F35A50E5323A575E10783F71C58545EA232B6F71DF0F293BB74
55CB374C41CC99773C49E0F8EE1DA6B4E6F21298B6A6D22A71F09C05530346CD
9F59A3E70196ED37E6BE3262D1AFBA8238A1C01B54BDACAD222C0120DB71D79A
7BB66BFE8F5AF116AE331BD6A50B93FB080643433A0D2F5AEDBBAEA7CA92E176
CBA0CDC05E45D59FF354E4F8EF78E7E551F5BB664FB2DB3B3C57F7748ECBE844
CF256D98ED4C5C0A26B11AD20EC5C59BE29E0BCA4C249FEC886F131B9AEA5690
28BDA0271C331247360B7F2CEE58AD9CEF1B325F61211B8765EBCD0BD1C62E95
F659D68F0D69B85BA188CB439638835AFBCFD91900B19867E85B3CC3AE38C42A
97AF0F4EA84D0117290BCC7C63376175ECA2FC62EADAB247D9870C6834B8CFC8
A8488B4BEAEBBA5C743CA53E8BB15D5F52A799C9520C13DFDA4E1D95A677CAFD
A9B349EFC739A295D808662B7F771B08E89597394FC627C1D3DFDBE12AF914DB
E32DD3C1292D965AA7AEE47502E92FC0A143739F20CA3AF2491CCFE7D42ADC53
F67BB3284FF217989AFE00F0148664D6B446A8E4F9B88C747FE8D2F3F1A6E1CE
59D2E0E0A1A24075AA9F2EB2A871F588D3199850780932C8A88AB1CAC0C3F2BF
7937F8E5596DD0AF9234CDB5E5E32533B70D1E617E255A4A7A43966ED27AE6F5
E59B697DB8D31700E79B700FA46F18E7DA657103C62FA0F11AEB90ABD3FB4FE6
BABCC957CFD01E477C359EC3E9AACB6E1659234A264036C6017B46AF959F7DA5
9D8EB366AA299FC67178BBC57EB673F38730E2C28B22B20E7D89DCEE471A182A
205D85B6DB655F64D923D922EE1DB81A77C19C9BDB4426F2E6E52F6410BD76E4
4519207EA4E5A38F66095C6055901762B9003DFE4ABFADE849DA85124D117F5F
31A8CD622F9B0C79E463D9CF3CF0D579495D9026EB3CD6C95A76CD17A5EE70EF
9E148A17EF4A4CD214B1A36633C43B00FEC4329DBE0F0740A078BD25BB532D23
58F6287A8C9946FD16E6E094F80DDDF02BE48DA7205B82800EC4FDBDD9B91806
2795FB68DA7825E2156387ED859C1019B73F0AF8050A24CAEBDF821DD1B07F79
3F60880138493C309B2164090EDBE1609C01EAB79AB13882D4E5F0E178ACDD97
0A9251B9E47B2878AEE2575D9D4E6880ED477B66827501BDF83BBB6B7085F338
CDCB41DEEBA510779DE56FAF0E6EF0213F4ADE5220C30C7BE781FCF3664E20BE
A88A0069523D11A14DE29AADF0AC9FC86F0FF30A8125FD7FCF5A955FF628B790
1829DD8725674C2C57A5C7FA6D03D9CBD77CA6C08078943808A01A5CB067C8AB
F29CE883931149CEBD1D00227208A672EFF90937C6FB7A0CA7B4DBDAD06B6633
8DA1F231B209DF37C1B1EF54E133B6DDEF5458D50AF8E103F301AD9F7B43A65E
91CF9FADCB08D306F621E63BE5FB9882B3A661F4D48AFD5104DFB62AB5EC47DD
E14A6669C268E8C75BD614F5A00042D923073A425D7A2BD984384F15811CF233
8686071FF45FF4893FE37ED5F0915241A84D108613D2199B6DEDB31C9A0A271B
585DF5B91160A2DCB8E295F3FF96DFF5E73F7F79B140D71ED833225030415F67
8E261DD2E5776CFE8AF461E94E78760F8A25C6090209896F5F5D416AD25B78FF
6B1FC00BAC7124FFF367226E73CA9D61A03BCEA44432BFB817DA2C190337DD8A
3E5C005FAA7C24DD9420E8BAD88B5059BFBB42A9CE60F9383E83B3EBB1F1EC7A
557F863A63FC5097860C20B071DE5C207FC70D37065620112A1D822D61C461E2
6D2EF722FEEB679E9626CC4100D0EA61A5970DB31BDF8447E405044C29ECBE11
0683B069FDE3FC592267ED27C40868632768C2988B90A524C2ADCC35E0BD79F4
A14FD527BB18AF1118CE04D23884C37DC664D045E949E25F10F274E341D3A325
2162B0A68F3601EA3D73539FE1F8A2832C7646073DB2FDE62754AEB1E15C54AE
E24BA5A0E9958490F023FBC922135CD2EE10814CC2C491D56EBB6D506361A069
166517C74B64EA8B89AC8F81B2CE6316335707709A91A70B7401ED336615E9F7
7B8FC218459BB90886A9D3F3B3D28B3D3272BEB5EB9167E6B1C772C2F70F13DD
A614AC122D353AB33D8949B97B1BB79CEB246290D5D5ECE01A27F46AC60F23D6
8795E84F608159EB1F91BF9908E7115E5ED381D39E07E0422F9773CE2B1CB4FE
A12D19A76772C6F496EF2D2E5A6DE68ACB5C8D35CAE3F78F40E9A45653BBAF2A
5DCA560DB5BF9B4161F00F9E298B3BB482BBA0365633ED40BE32D14ADCE9506B
23D781375EB5AA3EEA89CEA29065AA87E8B8E1188DACFF31C8191A2A9F42EE8C
9E9A2200C8EE611BBEA59CA02B5877B53747D33126D4E427FD7ABAFE5A7604D4
474EA252AF193E5E9B30FD11F04D70E268F1D4B5CE7BC267E0D478FDAADC38FD
E58C8251C5D0FAF6B63B8B53881B07218CA48BC688FB299CEB1030A8A9959F32
43FE60111309AE34EF4E7CF2791EB18B2018AF0C38D42605B220A5C653EB9FDB
5037855B26AC8EF73111212085DBB43B86BCC1E60871444C9E66ACFFC80F6E60
6BE94165BF7F298384BA18AE28CD05A3ED434571467EAB2B0A6D257FD0773D2F
9AF088DF32159090AAD527250704D212B6E7A84CC714A94EAA2F657708166931
557F3B224F53877991059EA433DAAF4B5DE4760C57EAD7CB3795AE68D6EBF8E7
04D7CEAB49A9B91DD4C64DA15F0FE86D24CEE9C2FAE75852C3BC7CBDBBDEA753
70FBFDF7ECC28CD910C217EA56B73B3A204F2B372C62ED1D3675B796C5E3B294
8C366DCDABF715F2D35552A733034070935EC99B65CF7623A69F6972F2E3A7CF
3CD6108DBE4E99D09D98155A2899FAA6F2C9712CC936A799AC4004D2AB894E7D
CCF894F3A55278A2DAFCB8C9CC2168962A0CDC7A6C18D0F130B5D68CCD643589
E2F3A40A8B9AE0511D70A2FC838B3DBC6B492E07E4DB88EC03A7608CE77EF1E8
43C3B7E151F3194F830D02D1662EB023ECFD1BFF24001929DEE3B0F5F4C8CF85
87EDB0874A4551E00462CF53D08212FE101E81544F49D54A45AE6D370441DE97
11BA3E39071FDFB4B9C21F993732744FF16A5F490A795B841D4A07E3D4D8750E
BA27F6AFE6B8BD4E949DEAF2226B63E883BC3A9AFB83A41C44EA0446E5472B04
957F823E2817AF641653B6DE1EB0B9C9CF0FB289486F6C7E238E85C083E82857
789B62A14E649593FF1B17014CB812FC307E7A820AC17B70295A288ED25CA2B8
A0F318B7B059F33C893720B7CFB9F66AC03E26CAB4684ED6699948171F0480E9
DFA13A544874A790B2409EC77C07393E27B50B5D7720262A6BD8C8C86C7B8486
5FB4E1ADFCBD642AFA511694DD2977FEB64C55E39792CFF6D0AF0FEED119AF2A
B84A8CA09D323DAF9CC951A3385396C9DE65065DAF7E84C102825CB3EF2A7ED2
A8C9464CFC597894BD722B47C406A576495BD2D55C260AD2192A4089E9936241
784D731EFCE3D2FEDDD0AAAB1EA8B6BEE119A5C8AA0E39384AE80615460EF5A3
7BE767994941E9A5D7D97653ECEBF14971A6F73C71DC1C0D12DA8B868D10F129
3E86EE719C9BD7CCDE8EB203479E5E121D3938295AD916DA3E2FB8D772619E61
E77B5A7C08F3776B20C5EC2C718B5E261AE08DE820DB93BF856A165F30BFA407
CD38659B20C34FAEC848311AE816C942189559BC9AC2E7663BDA09C0387A7B27
1073A84EACC717CC3CC79FB207A50B37ECFDF336CE8D2DC1A7741C9021DFA3C4
3FF46B75CD4FE997F040F14543F2A12ACCAA6366E6F24AF184C4D68C290733C7
D4BD45B69ABFB0F65F3EB44072ADFC91C9E5782C12D255CA6772A0B60B52B1D6
5DE3FF74DBEB4BBBA94A1F29439106FFC17FDDCA6DDA8BE48C145705A8612F6F
46B165AED2AC0A5B150234F4C75F135F39ED7C6CBC5C98473431491CA6035636
79CC9736C3C1FC1C25E689CEB08A1E29E0366262FA97E639825AD2E46B24BA34
9B294E6E27156F2A095D472797D92C41D7FD11A93E0699E311A01CCA52B310AF
BCEFC1A2D593380E7244C0178FCA00F6B00FA179D3169C6B04B58DBBC749D9C4
0A38273A580B4B3292CB4AAF25E56830841BB48695C61769C7D019A1C8B7B0CD
8C61B9D7E880E7E764BF8106C4F6813F1BE1A39AB25B6141B88C26278D5D3600
EDF003A36922F0FAE18185E3FDF818821A97A0F984F440B9BBA4A4C3F6F61355
A952CC7CD84040F24591CC4484F336B7A36FEBD489C04EEA2C2D0E8914F7799B
F3BBDDAC1255540FD433FCC01FCDD51BD674A52BCBC8B90A1D313385A9420545
46F3023ED62288318C26B70C9DA49836AB4F3DBE93240F88F639D81714C6341A
A1B2A9AE0916204A7431C47A7A89119BD5F45F4664C7ACF79297BADF519F4784
5E93C568F2D7E0854A32BDC96B3AB031BDF92A15FE7B8CD07BB5C56A6F5C46FB
90B7DCF1C2C3DC5E2C31B34D3C5EACFAB430885BCBF5771600E17A27573A23D2
D6B91CB078EDB10C61338135F36DAF05F44988BFD626196464AAA3E78485D6AB
231339E1B6630F93531F46A115AB015BDF58A7FCDA9C4A83E60A4DF7EEF1D103
B6B9C46D0C8ECC5E012EC01457F183842D3E256914987FEDC7407BFC26580543
7C63690F159347CBEE7AA7FE8200AB8A72978437C876A59F5BE5E43D9E9731AA
7A7772AE65169D16DF899278E71E723436B427B75A66EDE618456BE93B823568
4B0C85048EEBA786478E46D727E6CEFB4D4F188C161D489478041EFAB0C2E520
4B03CF65BE3A5B811AC09A65CF8267A4260217725E63F31CA112194988E357A0
D2519042B22B611AA8CC4D6A8BCB95B83D5FB06A148DDBDABF2B2FFBFE2A07D1
EF5415DFE7D396B1915E6FB0D558B7A44A10740660E0CA0DC7B45CC4CF59086B
5F484909A6E398A0344194FA1663D9CF128389F92CF839485D31F9F6C6D82AE8
A27F44200F4F13C3D1E1F1C9EC5B164FBDFCD76DC482338F18F30D3412385C11
7B201ECEA764836DF6AC23773BA0A1195325A8EB1B3D61A92060EAB717B4A201
2F32B3CB9C0D8DDAB6F5AD4024CF4B1D96219EC889B9015599E2B89A7FAE4C1F
EF4EF54BEA11EB7CB14F2D5163CADE45AA0476F125E1DCEECCEABA628E319BC3
3F113CD303B4730906E3344AB0A708FC9CDA852A13DC4D4F400A05130B279184
52C8ACE3C3B59F2A58BC3801DA17F946D6FFDEC0BCE3621E12D6DB6BC63C89B6
38A01C413E114BCFC3E8B62718B0B707E69C3B83517D8CE547FAAEB74925B8BD
D023CCEF37B3B64C45C37BF7FEF74BC6536972039C62DAABB87ED4EA7D333739
87DF19D29CB8EF9197A09B94C901404B8F219E03F0DC0CA1ACF7804672EC5E73
AE06CE6378D29EAB4EA97E8A4BBCE192ECA5B9457F0197C7B5D8196B44060C1D
4CB37236B07DF393CFCC708B4A83754982CCA3B538E04700C38801B5C7781B62
FBC8A85608B191E7A9414C6D7F7AC51290C28AFC5A7AC122B528BB2AACB3DA21
587103B0C840C4CE007A7C5F0996759A547902921035225F5999916FDD56D67D
6B28F2A9223B6888691E9EE0D7F1AC599A9CBFB46AAC85E98AF3E8E6176BF357
8F264641634169EF83348EDBBDCDA3F5EBF36894C9E014B6B99F3C7768318C73
DC011E2EC2CF3FD9B712318FF5A1143D5097203C6CDED8851E7226DA6C89341A
5D7EFFE9C0C7C01CE01F745DCF057F8A286C50EA3D1FC531C48F5F1407798681
36F99571FEA497E304DCD917BE0F8DB603A7D0B87E5C3BA96F0B2A42BCE68025
B9437892D99644B225C0FEF581C8771DE64AB729D4E8E0099D5CC48DA94EE4A5
00C7DBF813A96D33DD2C7655584934FAFFADFF40F89AC4FB016E234CE4A76704
6476ADED15087D0262C3C9708C3174E835E63D75849B904AA3913FA04ED37C9C
402F706712FF915C0D00CC23208292819C7DA759874A898F0817DB0EA73421C9
416A074CD51D0A2D5A26D9442740A8E3020506E1F61E208D2D492CCEBC5E9C6D
59847202ADA7053B809315B4C0385D218D104F55FBF8917AFA370FD6F4AD677E
1279BB1D14D5019149B4AAFC95E4DFE455008A043C1101B67FB72986C06E061B
DB598ED56F66547FC8B2E56757A3ACFB83E1BDF203E3583F591AD7A4B83A1655
BE2A16804A4997AD54C74D31A084101F19CDC750EB2620409385A82AAFC44A44
353BB8A67B26AC5086261039BEBEF741D76E996AF5C69CC897587D3FAE601661
7A498981EDF689F832FFB1FA980E431D2E10777E046022DC0DCFA6D69678DF65
70821628A11D6C11C040BEE751FB415A19DCD46BCA554C5C0F91A37C221C1339
3BCE57D65F17ED51DF0652EB8F4DD4CCAD098A05489F0FB1CFC742A6B4B84AD4
EF0C24D619A4FEB6D91B7D45AF07A5C4F1A52149800BA3534CAD4F7AE2355023
A014B8705931E663DFC25FA65184641F6BD7AD957DEA370A01CBD0E628D140C8
3AE1F19685F6AA164BA1372DBC215C6D7002135CABCC2714EF28A7075C86CD6A
8D4C4C2851C16C76BE395CE492820E4EFCC20510E8999A63372DDBEE44AA952C
380605EC189AC88B18B73B0F05B2A34CECBBB049CF26E7C276E3A5117350E8EF
8D84272084E857C8F8626BE2C1D3F6695A8E70BBA3777A6AE5A2DD6D2D7920D0
F9E3FD3922C24E00D6E49E8A06356B729306FE16AB90CD534009CCB2D9BD9464
2D7E11BF28767950C6BCBB446A1BDEB7BFB1BD99C4D5E66E27DF666BD9453C3A
8A9643AFD8493E8032B07A976F2413E55F4C52381FF83D8384DDA69C4990C863
2E0B79CEACDF798C3CE308081F2585FD83EE34904A3EE36D570B6FEB1F9C2ED7
60715FA7699CE765CF35146C18599752F931375AD9A9D83F3E4AA0124F0426E1
D67BD9D88B0F33F6BAC8BD31D9E2282729E66F2363B70EA5AE8A9192E41B926B
62022FF39C065B659FDFAB290C628050E44286FD6BD4ACF4FB74FD5477288933
B9AF76F8B1311834C01ADE8F38289B93D9E543D3321BB1F1F97D8218170818A1
AD46733F975FE2D77F6936D8DE1C9EC565C0C7D107B9595B5C096ECA6C2C0A11
E4C05D20733048B82599B892DC240AD0F9F3FC803C0124F9AA0775B307FB3832
CCE09D587617E8611A0DAEFF98B8A2F81D9A9D3BAAEEF29FA4E35F1DD122E1A7
83E09FB56C8279977786DC394D0A70836644B1C01599E939DC69CFF8D30FCF37
B764F2E65BDE2B7E3FCCBDA11C598DE6935F03D26A22638ECAC1FA89AC862304
0DA7DB5DEC9F97EC1B58013125B46EEBBE333010711F97E0DB33B38CC80261EA
4B811B44C70B0048F046804AE6862429BCFE1210941F6AAA4ECC87F92CD6C09C
85F56AFBC06BF599DCF766BF074D26C85B7200074EEC8B9E5D03CEC66E79A06A
D31051162DB9AB9E298B9370C40E5563D99273DD655E0754BD7DC8F99809B5E6
ED444AD2D193F89225DD0094D6559DF99B3BF768A2B768606F748902D6CE37E2
F63D1B34FBB06955369A376B52D6AE6BA9BF9A82E4C659138A1F77655D3EBAA3
6E82660BA71BA47B0D0385430616017C1D2FA5671C047F7374D9797620158167
C6BA509BED9A3E4F9911DFD643BBB125EBAB315EE70B972E51E6F1833DACD035
E1B67288210041E9C0C51CB4ADA3976F129A4A73A94E970FB3F9D173F11F4323
AB2CB072F287457F46D49FE026100AB707321C85432ACC08CB72B26ABEA8F846
596BD0CED6D4EFB10417ABB72EE32CB8B083872D8194E042076A4A7C372B18E4
050532B80B2C61B2D692FF73620F3BEB84D231778377FC4193465B8BC5649D5A
034A37C5A6A12D51B851D121CE79444464647A4147E02B577D42682B07EF7CCE
2D711A218FC3352F6B1F14BA60A4DC35B99BA2624A24E38C85A896F488C6D57C
AF0A6745E2671B2F89F64072DE097DFA936A2B53530C68A5435FAB9812585BB9
A38A85BB25BFC5DD27E8D7EBEC635BEC1DA814FE570AFD3496AE21B91BE583BB
0953E9161A04ED2E02BDE5933CFD899E45E6F1CD61595D8732F7B292F4FB9709
BB8F4876D1D7BBAD40F8211F3266608958DE216EEC6B63661874BFE1A000262D
597F56F63D39C85E6A81334DE166720DEA5396907508BF9333B8AB6A26CF548F
C46F2599368614A912E75E19AD2E78756D69C6BBD02EBC3F93313230F8671501
78A29D3542C8532923E20943826227CE318F31A5339DA7FBB195D3911102608D
C59303179CA8FFF4DD6D87DF81212FBFF17E12938B50DA137D4C862EBFD1C641
F96F13621F34DF238ED7671DFC492C75A6EB932BC8356B3A63E7648EE22CD320
43EDCBAB73A1BBAEA28F64DF1CEFC047EEC041697DB9279379CF1202B6B2F117
E5FE84BCF688660CB05DB609FDAE077874D3E757095AD5AC585E1E1C5F4D2C46
9D879AC6905CD16874AE9CDE04F90010907396ED516FA83E88A665DB24728BCE
E6537991AEB58C15494E3D9263708661B16EA93A3C06399DA30C9B5FB0BFBAA1
E07A24B1C08C94F4B497F765A6E1CEEE8204259B52D276E6D69D9A9829F0ED28
B5FDD0F4642305CA0F9D756CD4F5AF3824BB2D76B9481BAB9675F5F3941EB262
09753D3032C031B298E84E0D3104EF378387E19512E8728C2D9D1B9BAE58A75C
089466F81A02BDF349FA1A0D2437209FDD587F31C182E54B5A9BA8C66C6FE728
24A08C1AB81741FA70BC9EF48568ACF0FE385DC27A4B7A1380672ED7BD599A72
BAEC9265D50A0CD94BCB22F73E3B86A6229C98B517F67946F94642132563E958
2FBBEC20D9F68A53658C936BA300AC809C3202E85F3AB48EB854A7A512D8FCC7
F6CFD0A1983EC6FE45B8BD27749A3D4986A0868FBE5BD7CCA66EE7BC1237970B
A456E3F993308808958A90349ED128CE836833FC62DB7B3B9615FD206ACFD1B9
305A7AC95F087068147AE9107A40A79019D546AF30F1B6425144E82A9CEE07F4
3CAA9F4480CA77ADA4BAF47B0FD55B36E217214869E08C443449AAFF7ED3C6EA
B996FA847F6E825953094B7A2CD22CB5CB182DEC92EFC9C06749C9DFB3110BC3
A95546D616D8A6CB893A390B0FE7F6DC632DE8AF4AC2D56D1E9C7D1D9DC1DB8F
9FD6F7CD5B88B35407FBDD9646E016FC9EF8389245C396BF7DAA5E5C4BCB2353
2AC444994AE9F45791C0B02D24231EEE9190ADB13B43D99AF26822B0F1650135
BB683472F1B02FCE214DF8C38971D5C66678EE029978425A3C1F29231EAEB61A
62EAA15D2C4F1B99B16E550FAB5318E59068F21E713FBEE3B0511B93F838BEF0
99378C78D794CB3BBEDA992F7AC619E5250079C9CBAEC3332B0B7B147AFC5E7A
F7EDCDB5A5D9DF7A47BB1C905878F3B8931DF432E4E3EE026000C71BE98AEF8B
582283E805A4B6AD71E016C7C5BBE518D74BADFCF52EC50BB7C6D0528DFC6935
1D99481DF6461297E93C8E100BC9A5D4DAC60AB0073E3128AD2A01A87E2ADDC6
0749B36818FF7E33113F21F76AA6537980A073749503B66D13B95453779D34A4
8BA2CA49BE9F4A6312340AB669A39665BE24BE2FC04F9F55FC547C45AE8D4483
D122D4C9EC4C211DF215FB077F7FD1378F59EE699E5F0DCAC30261EB13335CA7
E9C6F35412C426555777AFBE3A2046C0184A7B168BC4554C315FD202FCEA4359
7DB3767E7E638DF05D8CAFAF2EE6F8D2A7FD13B5D0364CC73B8434369DCBE286
91FC47BAAC9EC6C331BFE7EFA8557FEB59914B5FB47B135C1D47FC5B81F2F7A1
BAF0712CFC373ABC2301C2B38FD93020F1D9DFE025E833348E10C60D073D43D0
30BF1007027A3ED425A255FAA7F49BF4A7DC240F7608255AD2517E86C31123E1
87467536941672F5D7278419D094714060E61B3E0CF62597E25CEA4FC8E3FEE7
7E99F01602BCDA11FC4491EAEFEB2236A643DDE0EC9A4C0CBBA6C84659803AE8
8ADA9264C9EFC15D5D7BA5444E23E5F7F4510674BA3866721E53A8ADF60CA9FD
85F00EE186D59B48E94D5ADBC6226F292D6983F98E3332EB6D0354C0867A0FB3
CA1D62D8AD96F3B8365BEF7D026CE048C7C934549DF4DB2B75AE982E53E043BD
A86B2DC732249644627BE9FEC3E7DEE38A5854E79D639FB245310DADD7FEC9A4
04CF17E569E1DAD6C0E69407F320D0794B70B3BBBEAE6DAF77EEF4E97FE16875
6EA80DD87770F5D6DE5B320353FFECAB2CC8CBA53C39FA7F88239A4FFC329CE3
9F05ED19CECC8469714B3E38FAEDCC02626E20345D6D60D96C0BEBBE5F281256
B37C3CEFFF940B8B33E188B9DEF7FEFED9A5771EBE41F54016B20E19D8E516C3
94E218C789C859886EF61DDC039FD1F8EA54F8B6FEFC564963FEC63454913F23
2DD3B18594011D708CC821779A4F72B412F32DF2038E9F8E8296FBDE6AF16240
CD803FC193B19AD197325B64CC993F69D2C8A279300E61BB2B3A7D180F22E7D3
312AA1D1B456EAC3781B1E69F1C7B59ACCF7A76DA1ADF692B8DAFA506A041A32
56C8FBCBE84AD50231A30E49247BFA2CEDB774DED07F10FA467ED5ADCCF3DEC7
C489A6B69EA9D44E55B4E4970427FD9A08A81063D662226FF18A153A771E2192
DDCBE3DF78B4E718BFE69F4137BDB57465CE99DADA48DAD7A4275F7FA0A71478
CA63360173AC478D5E2035F8544E310C3E719570CDB9798FB9C59ED2608529E8
811F0A724F66B67277280BF7BE50B1C078F80B437FAEA9FB92547BF8AC6DE95E
23B050D70263ADA54B90A0E1A9BEB998F62707A2952D37EBD0A28B922CFCBB1C
72208835176F3154E8E914B740F31DA6AE010990BD1E9EC8570C8AD44702C501
5A7372EB87999E942BE599410F587D8263549E0B109405EEC37B216996212C3D
0ACF2090624BB22393DD103E0338B89DE77A27355F7FE8319A5650CA69870A71
37E08E9D5C25566A07491C3AF5E2A7E014F32BCB61DCD2FED0DB4CDEDFD89B87
6A70C4BBB60BF48D5F968CAE678F186D44BC5C5802362DB8CF38CA54EFBC513D
EEE0100A93395628943F85D0F967B2D9AC22E5D949842CA008546391F9878E3A
202F5F9EC39D9C2A203CF8C7C5D72F264EE75E52502A615BE53202A53E429060
1820279569B268086FF214AA8878A53C6E91562DBECDD1F90D387313AACE8264
167C8380286802D9826BA87F3C350DD54A019E6B0AA96B11B9AC8BD3AA4987B4
7B62BE44327950C80CBD7588E2327C39B277BE2AF795C7C930C76AA89299741A
EEC20D9101DB902D10D43F2A355B2A5C020408C76F253BA5D17FDA736A21C2A3
C14544F068343D976904B43965C2E583B9742BB8F999932BD798C7BA92477BA0
11211E6C6E10EE4CCBDB571796A1BEC6A9D3BA4F947B4BA57FA22F2EE2C75394
62A97B6B0A9ED503752FFB0CB0F4BA64E88828A1C409891D51497F4C7EC22CB7
5537606C35D0B0A5FC6E0C640341C62847B08FBFECD54F3EC5FDC623AD17F604
4D10E877F053872DBD240A42F572A859A9CD35F6F9DCE7AA6F82B47A0838351D
71FBA1E9AA760377A97B8C8A6EBD8A164B664A4C55E939EDE7FD124DFD577418
53330983D9CB077389916D73004D6D3684253AC9C917DB7DBF90718CF641835E
02A9A381590B0654C6C7050C2A3820466D15B5F40820B61558EEA4903055D533
13DBD1126E1D7C131995D034070FA31B16447D6636F7FFAE99E74D024DA1E8F2
3B20716504D31370B6CB88EC282FA6B8E39DA8AC6A9F3671E24D353D65AD53CA
C5CDB5EDEB066C8837C264AC73F3EB21E8991D77E44D4ED1CF9AF6C43954BDE2
0B9E21B2A59B94DE68D206FF0B0DBC4F7F8B9A7407EE1AA3C582874187F1F01D
2D897D83ABBA76105B6FF0B4D8CD093DCEB541788440254565FD3E8AC8FD635F
A3AB5EA94DBDF68E69FCCA2F8007C4AC0DC05BE65AE1C0E48D6D20794632B721
3C0B4194313BEA0C06C4B785733A3A13705DA79485438C289F2DC1894AAC9060
311A3E6C4ED7B7D3BE84A6551A86C57173820E91F67CC454C9C339560B276FAB
31D5F43F2954040BAEFBF23D9A4A921428590B8E4AF8B04D96CD000671173E48
45B9A02AE514AD71F2152B7019788CF13424F0F5E977FD1103554E7F1D5ED52D
C64DFE4FE9AA12C2CF7FCB460909E2468723B530C9A6C824FD4518D71963B923
ED36D8BD4D24C5DA5C3AAF0F5CDD06529B29036D7992835E59949FEE000EC618
DAF30D01E89E80604BF05174E5D6CC4ADB617FE02591367E115958E4A96A69F4
FC2C260616809EDB5CE4C16E38601E4A404BE812B4BC89527FC696A5F3D485A0
05F8C4A8AC1143ADD019084C7957E5C0EDDE4DD729DE74235957E373EE5E4895
83C42E9475D80F9879F8BB04DB7127887F4C987B264B0B1A67DD3223D1EC0F71
6971B0F525E9FD3101BFA3D3AC7F51C5F0C8156D027310BFB4EF38BC8873A937
267D8072EEE39735DCCC32EE413E62102BF661633EB408B37D046A970B831457
4BEB698455115E8AAACCD45F80C7FCFD38862172C8E7AD5FDDEAA21D11F613EE
E99A512149B36FC370865D3EB36398DA4C847782527F0FF17E595A3EE4E3D9BC
48CC05727B71580039F093900DB52F889AB4830F7B876FC6D781C7E33AA5EE2C
3B869E7CBEFE871E19BFD9A26237F5478DB97CAB0AEAC21EEDB3D20FE48E12BB
AEEFF1B8E9D85EFF0DC488C0E1576F15703A9A5B450B7E409A6B481EF3EF9FD8
E62719D50ADBD5A18ED180189AEEE241E476568911A4596E4F5EFA905E77CEAC
DA5FF3C0DD9DB4F65FB0E00C55E06F2FBBAF245A39CCCCE8B5F4BC10A315F878
92AEFA9A52568C70DD9C453942394DD1B645AD3BB645B0D7F97A6B009B46DAD6
5E9A1775B5ADDEAAF22F0D15720AEC76D83F099E90BC8AF4A3F4B822EC5B3FD9
CC82E7C45858E71C375E61E2781A3C50518070BFF3860C4C8B9972D1BD4C5489
326853C875E0DBBC2E9768FE067CB16062041B81F4B4C4C1A821BEC6CE7A61F1
ECFED135EB4FD6B2CA41798F991C34F4B230DFD22467A96EA32CA966D96D31FA
4ACFD40D27CBC054513822A5869391677D1A4263D77DD4CB845CEA9A2612C2A5
F91B495C03FEF2ED461C769A72C8A82338F40B847DCBB2D985BF204F7861780E
6AA28329A8B8ED780ACB712579977439780028C58D5585EAF26DC2F35149DA35
A8AE455554857F44F4312440735041B7FB66D5E1A4EF6EA373D2D4BD2654FE8B
F13B7D713194BA98A75EA4D7C19A3AF278D86334C0ECC06D0CEC4B0B7B9FEAE7
1A067031B14C54FDC8374B5898B4A5E996803F0487A93731B3771C193567AFB8
1AC2B26ED5AC0479B7A646480DEA01B01C93E48E223ED57D357D505C9EC5D6B3
EE4B103B969E6BEF157D21E096FF9355AE9896AB58F94CBF6803E59E0FB282A7
BCBA06090A75934400DE6E71A14CC454CA4CA5088D7055974C1860F78022124F
A2E8D83137A9BD6050A804D5C77842E7771A3E4B7DE253B86F29B81504802658
D1F4C5D29370D5EBF8F5349190C44D45677096CCFFD9F50AC5BE779830DB149B
F9D7DC66FB06DA0FC1824E1708264E88DD07F601622204D7110BA1D09ACCABFD
A0DCD17596237F9A15C0C3CCB7ACDBFD419B5169ECAB3CE22D79636BAF262AA1
813F121E091EEF70C961ABA37BF83A0935FB27243E182AEC1855D094FDA031C1
52CD710E72FE0333D74693A1201D0ED465FF58DAE28CE73002958BF53AB40E03
103A5ABA470F09B8D870A48BA4D527CE2053FD4823E7D812B88FC0D5DA85BC42
3747A1926A8B6E79B31667B1FA1C649A48BAC6287BF01566B8CD46CFABD4B970
7B4F64B24C8CE1AD88491155D1272C6B6C3A0175E124F50A4C37F7E47FA99EFE
C81EBEB12157764AF80A8B9FBE7654F08D93E0EC015DBAAA21AD18543A58662A
B8324507DE61BD6AFC55C982673A4C32BBE725F02DA725A07D0559006899F3F1
0133BE0EAFEFFC4C42C68176F6FDA820A66E1719BE83CC05B216B4FC5DBE3C62
07B87FF823BCFE2CAB833D27D0A79A3383B0B1745139CFDEBD5C85AF6E9A72D0
B597A3D8EAEF67272745D6814E125492C6AC31ADBE66A53BE748C47747FC5BB7
3C7C23701BF06A96293DF8A0BB1108C95157CC1E8A7A4BF9E213EF6215832EE8
7FBB42E03265EAAC87DCB079C80A8727CFEFB6270BE052F65898C5828E43CA63
F9C788DF6D0440DB4BE79E4EB124FDF0E2FE73C6AFA74A458ECB3D6E09FD2C7A
F25B6CD810B6A3F8EBCA986775AAEEC16084E4F82943C9A44F6B99BA85CB13AF
51FA18405BFD5460C533E1AE8FEC84B76D3154BC8BADC6F64C9C29A5D7B275AC
4BBC9805E70ECD65BC8DEF982783124C34D62127D588AECC81F2666400D609A8
D1173A1901689A477AC006687A33B006B9689669D4A320FC5A68464F49F01608
976FA88D5AA693B64A59549275D0F61488AD7409BB517C3AE8DF6DF223770EAA
ADAF4AB4FF1B5686EF4C26B03D69EB65C6C00EE0A4924880AEED7191D65A52C8
EAFDC42A13102709CFEE43C4B706B06F028887C7EE101F4DA7F422FD8ECD6A7E
215B9B477AB6D74F078912E0E805B70BA56CBBC8F89410D3FA6D1A6DD615531D
FF8030AC4D7F779401B9BC42F0C6469A8F030DCF1B534D23CC62E7354BA5B3ED
3405B2268D4093E6DD22818DF6E6ECC1455C5872A15BBDA8DF08405D23B6F473
EE26E0459DDFF0463B1C322D98C978EBB601142248276B7E4F8997AD02F554BF
D19333D288747C016CC3882E07849F315590205F720885154FC1BF34C230A35E
46C1AE09BCFAFB9ADDD9C6EAC45E4BCDBED2FE4DC35FA945B1F5BAC2B7A32D02
B1D35A34ADB9DFD0B199F493D3A0B2A9055CF3C5DB897A2FAADC8285B0A804EF
7DF470E1E37653F68C544272F6D6A14F80CB7407571557F72023832879B8C751
617CFAAC9EE85DA75E3B92106650A5503E7C5B7755AF5D2BA70BE867A878CAC7
3526F3AF0C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FF828A198888
B3136207F7F134740B09523F07BEF10B0BB14CC88CB35ABEFD912C54665810D3
1D881F6C47B6C47CFA943FF9A9F5E8D5F1C3E6CCFA5CBC51647CFF73C6FC0E2C
E64D636D0BDEF920C959F6A3028CA0FD447F07888D4C46C3BB844048F778053A
784CB8008AB9106E7F5458F9CEAFE7D68C9C6C43C93305F6895A72FA44213D14
B429E35E23D2AA1E138960E3220ACFAE7A6AEF112861D3A98BB8B75FEF5314A8
1C8FC0B12B655E97CF2478E685CA897AC54A3E32DACDCB0EFE22E31292430372
9C888A5ACBE4C407C3E6617AD30C7B3ADCAB60ADF54F6F08BEAF7724A458E8BC
79D7EF275D5943644B530E8E75554898BA9A050C97C9E10C95FF3F881D22D031
C9D535E80D590681B742D6024FDD5721171627FE03F80E19E4C61C5DB983DD48
5D9682F41FCC2ED823B7EC6FD4209B0C7C8543B3DDE7C7ED58256A859CA0FF55
EA6121485624145A0F1522CBD6413E4DB42DA843C298951D784019448B7517AD
C78225270DCD69EE88E82D1FF2F3E43D56EE5C013A2A36526BB777D9DB49102E
CC8472A298DF113A904FA131F9E1A324869FB50D3BE50BA29E09D76E5F8B2C7A
23D870B61A74F96D180BBEE0FD6150E4A8F797156D0735CAD73632F8EE970DC0
EBA43D2C700A1D5DF8A6E40432CB09DCCF5C286D5EB04E5A7D952E716E855FB5
9561573AA857702B2A8F48F563EDA3F739266C7C4308FB3C14CB6C3C656047FE
57B63F1F98B53F6B0EA7D9EA5958819F5CE03BEF6B59B669723240EF44DFC0FA
AD37018CCA129A4897876302C02AD89118AF5484BFACDF4042ADED538BD62F0E
56B631C8383C06ADCBADBC2933C1D0DAC1035A5A6B41BE612088E21C9949FA81
B89CA8C81756274E6697F71D328B75C8AD8808B0AE054CD40FF05C077FBDA7E4
1941A3FCB3BA2DA3ACE7B900150A7374920D6F63770EEE3797CB112A46C5045A
537C3675044E5D07B6220F4A84B8681EC2AE04CD5590CD3E0042091DA9CC585A
F0DB96830882E052640C1895F123958673D79A11B86171989E04A0855DC98E4C
886E696E6B1C423F65E6034F7ABA38E2DF855EE6C1D1F312CD898D4352B6359C
4F4067A92B8F61895B7CB1149DC00C8E84A356D705D285B98AE3F5909EF62FF7
3C2B3598B270484553459D56150003B76459185313CADEB3270A4737928F35F9
77D1635AEB7BDF9102F3F4567586DBAC95BA2524460F725E819C2EDB831D9BF0
69EDC96F3B8F7F3522F275F35018D71033BC87D22616750CF10C2510688D9DCA
5C19DACFC81E5E9F5BE82BF6E81719ACDE43012A2A2AA699C0779D7C087E07CB
54012E4947877EB1F3A6A7BEBA49DA9E1BD3A55C4D5938058EC691D4D4FE8138
50CA1A40FB308E0E5BF06D0F86AD72B48D8B376EC4A4BE51FD2D462A0DF9DA52
5FC2DC85CD0D7943220CABC397CE703AAA6CC20C5E5E795D0697204AE4DCF7A6
1BBB621E124286F4DC96C63D6487ACE56E533D99D222F957C5692644D3A6C41C
860B70833B92B46D94BEAEFACCD0DF05A950ABFADE5209207BDE15B54B36EFEB
87E32D52902FDEFCAC8BFD5AC3CC082C816272554917ECC3E62E727FB085BEBC
91EFAF500B75CA4DA865F046165007FA70E3C10C497EA53B295F7B338D41724F
64744353675857003F735EBD3910BEDCD4DAE0E2FDF6ECC45599A6401CBBCB31
1C630ECFF30929783A8622D6E61AD3B2CF766F4223E6FB53A8987AFE28F9068D
8FF519B816011D37C05594B18B7D052CCE3760454546BE3C34AC97C66C21F43C
D46F7C817C97C3EEB006C9498D723A6E69528F648124D666B3BBFC544B282AD1
3138FED33A3F1D7696FB9DBBA8CDF19F3397BCDECF2FB4A626EA3E54EB971819
2544EA50FB6005AC0A20E4A363875617100B556812C6BB0A6A7B4DC56FDFCF12
C5924DBD3DE66FD51471DE5EDFC7AC37A6D9E49FCA6AD643401B8B6F16BD92F5
15B928B2F78DB6B126C5ECE88C23A7EBCAF9809786DFDAA106C27824C697E244
8EFE913D34782D631A586EC6083FBF2A7064FAB1606D657B325ADA1C7E75F7EF
CF4EF8DE7295D5DEA2062FF0B9D19C6E4FC5B02ACADE86B6DB6118E5C01ECFB9
83FF55153291EB997251F29B957DD3DB1B4F4C06D795BBD61130733FA150B08F
7166C248DCBC472F79EB00691E4D04B5307432BC7457275E792874A7E38FE534
3245A723CEA00D1CB5017CBAC4C497A7207C774C92051C5E1EF71427EDEB1AD5
DD1F10DF94952BA80998775597EBFE4CADF7324B61E20C1906525A3F6F36BCFD
149748E5BE052CD08CF593FC628841ED5FA0757CD573BBEC777A4693E254921B
8B0512D220EB71B17AB6126C06A3713F75408E29138F801257891A08FAD24873
CC2C75DA3473DAB283233019C1B72D6702AE620AF391022A8ECABC9E50D69CC0
1007F28C5A80F4BD3C2C515EB5BE01853F7F1EA8A2D49DFCA7BFCB7F37873249
128C214C434123A76CCB5AAA285041E3A478F0933EB1583B6506BF5863E4F60A
326888558B850E16A0B97AC70BB33E255EEB5EF5DECD1AE4FDF62A5C7ACBF618
5F6318B332EA3520403AA98BA4EA2E481293D3C957AE9675C68A8DB98FBF5859
74B1AFE2D64F5838E0AB07CE9E6A1B088DADB116F4D9BDE1924A09A97968E422
B84F17BC78EE267DF37A8714441B2EB5A58581A1FB78E289A2AB744637DCE1F6
A296BECB3EAF8911184CBA434A286487CA8E5808C82D843B7FF65E4573587799
5245861BA6C73F8BD7A245A6DD826398954FBD5E7ABCC77B6D4825CF63C13B40
CE21656E37A0FCB6836AAAC07BC22E48F1A1A43105912A559D78274189318C95
575D6BEE0FD1FDA7B8516FF32957E752751CF78593058C7CADE13B971E94EE6C
5871D0738A6CBCB72BCA6D80E9B867C4F9D4FFC10D8CD12FC9F4D36F563E940F
27D87219ABB9D6458C50616F349614683FC167C320C62543E261FF775AFBB89D
079C9C14C6B8045816A37C222783886272109913B4B439AB49A3652111354BEC
8FAB38F6A5E848BEB16B0A20A9030CE1BA507B33D9B2D4E6063EFCFD94780397
29C79C7FDA0414D17368854A2CFB00AD9CCB1215417B5FF99DD68C8002CCA80C
A74144C6AB56EDE39ABACCBBC4FF366CBFCD5814AE5A9459D1C5B8CDC769D992
269E6EC4631B1B75F00E178A07F4A84C5DD989C47288DEB2DE91E7A5A4CD2607
5D443D2EAC2F9B94FA22BC33427707558615C93CAEBA77DF9D43D1BB90418014
795ED6E004CA0EE326B98001D0376C37F9A7DB71AA4324F87F4D2A069ED7B62B
8429F77FB1EAB3EC45215E1F6A406B165E5DA6866E0E32CE28060094DC211CB2
CB942EFCE2C115468648954495EA3D40E2633D4AE0012158C407F125EE256A15
D259595BCB05AE0F0C08428B4EDBBE28FC063F2E4B47E76CE5308D0963F54E7E
21833216787D1B5DBE99BE2CD0363D1E847123437495795FCCD65813DCF4059C
85A0A8202DD152AACB802CE922E82C248805E950D7AC5A37576EBFE015F19E8B
BA1AF83F7F1AB1F2A26A5CE8A14602D9F82A8311550597C8F5F21CD36C0D0C19
808EBDF7B90241CFD1F6FE9D642464F431CD4C5AA463BA71CE104B52587657A7
F96392D67FC82ADA13FC4493F50CF3D97EC8E01ABCE60CF74B2719B7DD018C1D
E8481E92F2B695675718CBF53947218614BE7415679A18F279C9CD013DF9AA0C
EF47793D137AEA8AB258A64B13F665EECE2BA7DA0A92D04C678008FAB0329BDB
6A7349D7AD73D2B738BF19435E55A29B593E6763B8B1EE3893874D67FB56FED2
B54E9FE0258EC47BFC2B278F5BE6B807C1A3FBC4EB6399D4D6EE17EA0DF2A546
BE6DD1D5B235CBDD6002ED624B4BDAECC757481D46945D3C5781BFDF3B8DAE3D
10080B9B310235364245621C81FFDD65AFE4E9525FD74B824A13B61EC042887C
4EBECF2D47B1D586A414DB58BB10888BD5EEA151DF43286B663F95497D1F48AA
59E222B6184E856067DACDB15E2AF357CF3FD46AB5160DC142E84F0208697561
A918A9A3CA63227B3AD37015701BE0BF9C7F755A2F534D769383DF6398E300A8
75D7C11BB6C6377E9A991181A24A201A150213ABBC6188FD56A8B525D25B086A
6B2AA181D561CB8D6FF97C38B953DE71F0BAF5A0D9989BEDC9427AAA81C3B0B0
735977DEC90261E9EF3B9C227E6D095443766143915495FAB8815DD461A8EB41
863B10218E3B12E7FF9556F6A504E21AD066B9262D09A50386805FDE1DB457AD
752F117FDC8399FC430DA9424F7C5E2CE1F6A1F82145FA8848F5AD3249D3256F
78F9AC352CB79629CB55B4EDCAA936824217A1FA558FEFF0485CAF90627DC9C5
939E4BB44F2EB8D997A70193F4D838085FC42AA948A6E81F758E6B59B6697232
40E9AB4E8F6577A0DEC633BC4444EB62EAB2FDD36DBD9C99F4579536AEFDC6F6
3E849C48835E160438D90FF2A0805C9B140D8C6B827B9D910D76CE55F9252BD5
A5169CC1883221A221432D10CF6CAC749486C2EB1B8718608F09CE25DD1E48A7
CB899CE5E08942057588B3DBC8089886F6DEF28B5FC78F9B26615497DEEA0BBF
9E15F98A41AE26DB319B1509B69CA4482FE4CE0BE12F318FF2A7B6498314590C
DA72B85C89671F5E4AABF120ED282018A8180F9DA64C7EDC850C1A6D245BADDE
297EC7FDA734F4C47589FFF8D393E2D012F10F5E7E7ACC425AF0D9DB2AEC1F7F
0ECCFF639833A9D8A55402F92F8D115BB6C15A555117727F7581EB7906EB347A
80AD0DAFED5804DE8856793F8E4A834260D16271280CB5732EC96F7848416F0B
EBF355EEAC8E62FA0C16BF2B630293E4498289E94677815D1493522BC9B8A46B
7D367F85D1A172C35EEB7F1B0247F8744649D91736FABED1525A497B4F426D91
0A1B338BF1349BD75CA807D3C924B1E70D7E876A1DCFE011F4B72DDD03BED9A3
6C08DA3B7FC069D3DB87512FE5641F3F463F43DF90CAC084ED4FC9C70B5F2CAE
6B138099C73ACA7B5E0259133B4FC7AAF1D1CD45E138CA96F3877C4DA7ABC5B1
901C3BFF3CA70921B1488BDED3ACC3FC13A848CEABA524E3036A898E89947B1A
593D372BA68D5D1EC9296871B59D44F690B2B37C0EB13BE50E29DA7F5FD9835C
9FD08D82BFF52CE435985ABB57524EE75D568A9D1988BC924E330CEC3E982CBC
DBEB020ED2874AFA04E1DDC9E9FAA8454EEB264E639C9C73C8777CD3B07F91ED
ACD6F223954F3346134EEE0E714A6DF2C527283E78673D471A36906003D98F0F
6A1C6E9B3967AA9A4DCAB48D86E980962317FFB26A32A12DC22A2A2D37579F89
732F71826EA78B6983F49A74CF39D366B66FE896B70242AD7D07C2EF596108E5
71192B6C76B7C6A2B1F850FE72D6BF07305A68171B8342E7A7A92A72132FF96C
F6CDACA6EF9D26B52963F9D1368DE6F8964BEC017B0625906F544C8DA82E85E5
C9B54FAF173EA731A7A106041CB0762832F5F81FE601F61CEFA9B939BCE998EB
EADBC5A554F0C5DAB7DF921181CC22AA456792089EBC541854D83720D5F3521F
2C126B7C12D918F1C92103F42A7F7605C50031799FD9C1D86BA3C86D1FED8D03
B3E7FB2890A9EEF33FC552EBDFC8B36B510F38423923D1DABA77FF818154A035
2BBB1C11093537366AD78CB28A21AE0A9D107351DCB6CCFA4592EE66B3708D8F
2886465621F4B56752EDC409E9112B9ADD787826018677B3A50946743790BAA0
D52407615C8B6D8C508D374AD911A54E435C39FE3B7D2B35BD4EC8C2D7527F59
11939847A4DEF427B4EB1D5E3035F2D413BFDA902A893E5ECB0B4F6171FA7E0A
D7DF0DCCFBDA67FFEB28B232CB9800A890813A2FB5BFD49E58E1BF7EADCC5825
7ACA7FBA17481BD7F76FB0331C248E68920B42CF35D8EF72E33EEFFEEB30C06F
777083723CAD9D33BDA032351389FA502740C81BFA00396B04E27EC0C6E0FB68
F94CE6E2BB94551A2344AFB0255A91FF515773A17453013DB0FA857FF32C9845
B104C1ADF897C2B0A4490EC8A6B9D6B2E34BB38BEB620E329B4F03B45F6DF109
A3AFFAE931F154A8A6305B21D4F62082225F6E694B8C40A92F16ED3A8E6DFF77
99D5C17D057E5C6025B699BD33EA983B4D94F42E6BC914AE9EDA42CE7227356B
FA9976AD944BB557C31F5A487DDEB103FF247068EF9B9B43A951DC93BDAEF848
BA9144CBC59F5951625C55D35947AD320756156AC7D88F252A4A13C1842F8BEB
5A2416107B1E59084B501EABFF0F9B898CA7BFEC38C79E156E5951847483DD47
BBE693904A72A20A1F7C70C68627A5356470BDE500FA594EF999C3FEA4296699
60EEE33E1150A0FF498C3838D7F8D11482A0DFA99F57C171FBC479980377A742
E85E9BA72134CCC83B6EF77480164AFC424534E2FE3163D21EE42DA19A0B1C9E
A92525A7658E1489A7D1DF64C6AE6FBCFBD9E9879DE2E51C85B3597B7521931E
76266B15CC8303BE2A0AD1AA715ED5ACCF13A503B06555E1C70E553FE1CDDE25
04CC795C1B0CB2DF658449D8203A174028CBB2A2717C97FF0F700841CB1B6CFC
C7340740A748F4FC18BC16B98845BBE333A7D198D3F53246F1869A9A97398E0C
2076251DAD64B6EAD93CF182131FC4FDB124B11B614602D206900245FA069B8B
198272C0BDA3C3F2E7C061AB13943E2688FE0695B109B4BA4339968E9597EE42
948291FF60434F108F5DE57048EE078D9DE43547BFDCBAAA5E39F23E50416163
FEF8CFDF78B49D88365E7B787EDFEE5FB764964479A2AA2792A69CCB54CA7904
1E40E3403E6A94A779EE401A821BD382F22D740489CAC908D6F1E2BB2BA1BC26
19DD32D5D432A61B05F522D26C2A3B6265A3066788C4E46B1FD6FA7048EE81BC
B22705D3B1D632DF3B2B00A76441DC6AEDBF287325462495FEBC28BF79B76063
33A30D6BCBFC18CDF7C386168F453F8685E00E6E42BB3F7C591F4F13284F548A
79DB068B563C0DFFB3014A6B29CA751DF024BF5CD7DA7090CE635F3DA37B7866
7F6FC1616E4ABF612298FDD2EDDE88D19EBF0611A0C23DCA2568A265A8D13A42
09FEE55AC477191F9F0E9AD3A1D1AE042D89E0788AC94A47C6FDFA8824E26C94
14BDFFADE529075D2338DFCE29D90ED9F3568B0894D45653A3B1316FFB164DE2
504229B8679E82D99B75CF24FC4E5AFB8375EED73BDD88B3F477531712CDFECB
E3819935930AAA74A477AF622BB06F4066C9F81998CE7DB42C23283890E01BC0
2447678BD62E22E2A155F9249D8F9C1E242AB7DE7C4F979181791E72D3DE54B8
47B6EE1479E3BE181140EEC0CC7A3DAAA2650A8EA21639BFEB02A6FD785BA361
19CA93390FCB59BB4B4E5525F8D5C01936F03C32E26E1AC2C81D8D0AC1262896
6F5B38F6FDC73241964C55FBB1E192C2ECE86F61A255030CFE585923B245F261
F113426F229FB000E6F480A0FC48EAD43E79C047F98B72F84F77C58424256F12
9744F3EFC75AD668CD4137CE13B232FDB628E2598BCF6759F5151869A44B34EF
83DBC9A2ECF7BF9F97502FE2CB330C6F860B7D71701A6B958E236624F74A8FCC
DB025EC35348548973EB5C4EE159279604B2D7D503910A0A5AC9534CB8DD64FC
7D2004520E40365C81A257387C3E66C138ED90ECD7446B93CCF9A39CFD45FC77
202100ADAE07838F53B0B7C64331A13816323CE989E50E8B5EEAD8E0241A38E9
93C5466FA10496515D1B2F8E6FC8DA7E7CD7DAC270263550BA374D54D4BC31F7
47E9B0F7EAC2D6E2FAF9287268BF1C0FB911F7C94178964C00181C883DF60990
A47DA285D767E651964E43988C8795A70CB2D1CD302697BA95530F5D100DF711
84DFFDC460F93C62461F32B8A683D919B5E13A2C0F34A122D798B71595B16AF9
E044066353662414DBD469C92C458CDD5BB42F92904B4D0DA750DFF2A83A30B0
3BC1DB36EF6AA3D1C549F85657DABE84D440FF54F0E10321CFA3B4579685730A
4930EF1E3E733292C806C80C8865645C62D433081EA4EEEFC3CD2FE26BE20AF7
1444421AD1DEDB878F804C28E32FB3BFF145BDDA844AFE41C6709E48728B0F06
82758EB76975A74A0F767536B5662C61BF17C1AB17B2ED5B28AD0CF0A7C36886
429F9D70DA0C55A9A6899C6577E0795042A5DC3DBA4B99B1158F4693FBC31641
79F99C34FA15687F78572C5BEBFDDD80971DE392088909F1BD856DAEF710C921
B4896D04E61B913B6C4176F481666F2A639E1FD66B020C2CBC5CF51F32E0F85C
FF6578A7F06A3C36A4C792D168DC61B0E00C91D6056457B6C8FA9D2555119A0F
C4A9CD66AD66B7C6EEEC9EEF4325D61EE0B245E0FF41E5A19757F77FCADE8149
571F9ED67BE5CFF552F11E3B64759442636D325E79F5C002EE00372CA74B5DAF
A70C3801E30C61A2C1CA69817EF9BC7BD34F2D345F6D3DCA6218807BF65EDB39
75749F44117BC7D47D2ADBA36BBBD6978AC66E845430864D8E009DAA4544E089
8CF14D8C83B9AA7BBB9491CB551AE6327250DC02460C23F90576140B79CCFA75
261430AD895A175590E8E974FED756E5E18974AF90AF0FFE0D3B0B72D0934148
984247FFAABFA9652CE7AF178B421B0DC4AC696D6707C1EB30A98240A5DBBAD1
FABB461A009DF7C2666BE4F2469CB813D1453D986E24853C42E8D001B7C8D31B
892697D8D446335287E949B2DA6157D6B70A0B36C90E7A0E5087B47ED277424C
B6262DD31EE14548C3536D1423F7846C190439A0CD836E7C5F3CC36979F69F9A
E5F465C1442BDC46D862F6CD680094319BFFEE5B7FB9F34A31B82AA55B731BCC
AFF66089BEFA65E89BE08571244D1838704DC0BD7D5FC13534168D58ADAEBFCD
D6F8DF0A16C6F4DB6193FA77BF6B4ED5C6F44BB33DEF6CA005C53AFD0EB2F82A
3D075FF9FA62F206611A2DB2CB91D2454756638C8C2726A604C27B4EBDE47EFE
C71E49737E6A09FB52E59F339E9111E971224D33948AF048684B88A63CA11935
1D19F5C70D2C761F86E4E06C2068D2E28368B9238B0FA826CF08ED90684577AF
C574601EB17104061D9A518701CD5CCF5B239F2BFF099012D066693DA67A256B
26F0094456E91A21EC6CBE55901EE18D0EED3645E38BADA5D4AC0FAC57F2EC2C
C13BBE659D078497289A93E11431D55EFB87B077BF7A47CEED7C7B88578347D1
FF1808D5122EFFD4962D76A159225E6F1A09BF67403D4659B5098A689AEAB97F
48C550124E441959AE4CE851ABB49F9BED16F50AB915926D0CF93660BDBB489F
C4645B95419DDCCED8AB0923AB4A3446BE332D4AE17219C0271E8DA7AFFA4283
9CC7C975FD2286249975E7A3A3E2AB958228F3DE011FB70FD0A4F1DE6C52CA7F
6C9B81EC8624AC5D4BCE992AB6CA12692F957571E724DD86628D29194DD2A54C
ADB2595DD8894BA6170E8849EF68E49100618F0A2C8F2DBB8CBBB3FED1A2F2F6
950B78EF262C6CED1C435165F4A2D5D8A1DA540D88F7FA1495B2061F5F4BE3B7
C96614710AE128438AFFB7A487B1A243A4D5DF1451CB00F78763F5AD185C710B
483B58B40BEE83A5A8A29138C6BCDFD9A438C1097BE6A4CA90F107A7F4743E37
FFAAA528E6B93F00B21FCB173C66D1C89FADA01C7D68461EB95C6A3AEBE2BA17
C2A9F0284E92597DF1BB2FFFE2762B390FFB1E825A6CEEDC43E258E9DDED7519
76714D1A251F4BB8B66822C8E94A33FF9C980470FBB364CF9CFD0442E493E023
71E35118D8547361124C9AB7D15DC52145A67FF0DEAF4E4A4F014CE790D18EC4
A9E827E536BD4963C6943E227635A1E4680DD92E22D937C9F4BA8F3B5EF484B4
0C2D0451363AB1844531DBE7C0413419E8CCBCFF281C8625B524EBC09B9E0FC6
49184D181040BCCC9A24F77F5C73E2E06C13A8B4E01C9E97B5077419A1157A50
CD00E93E99DDBBCBB6D037C3C4756E0D74DF24865B202AA3CB8FF4C878D23DC2
F5D0CEB8F26E4C41AD1CF4FE2831A4E42D488667EED507912C4DBA3D1AE3B023
FF851C9EA62A2B971F0BAD04D1C8A53E8FC2453A1F31B02BFFB5AA7B6F2761EE
CB722B0EB3FD4DDAD7F29491CC8C636B96942BAEF0772EA714564BD281D13D1C
193DB1EDC5382BD75C183D4730D5D0227F23904838D73410740A6F22569A9BD9
42A13C1FF22C22F84C48B07CFE79B73D777A9AFAE6A7CD65C78EF74B4C57434F
CEEB0DE0F8F43667B79E809F5F38468C15B44107090BF348A7F4C3D40F4EC92A
953711D45BEC2325036298B86A6ED7F8ACDBB9D5FE2EC20FF1E248FD433945AF
BF576377A480119AADA73ABA4E9A1B764F1E4876CCA4A065129D61C121E40B1B
1577D2D04227D1E762DB5CF6C613BC539BC5A0F440324E09434248C857437893
5C22A34E46D430B201304263EFF2F253E58641B09A54F4F4B2D472C7CA609BA0
BF219414627E3B7D0150C374D88734FBD23146A104DAFB3EEC5C9422588DF747
D5AAC7148B2FD3B421368A90123A8B67E6AE0830E4DECEEDEB227FFEC63AFAB6
475A2FCA0607D78F3876A67BBCBE445A479F5290390C732F74FF4C4CB2120E86
5CED746D2530AD38AD6B4D50DEEFAB15BAFAF87F32DEAB29245E75FF4C9972A9
79C1A84009407BE46D357229759B402412D995FEE7581289628D473DCBFDA857
3A5D28599D9FA4B722775DB1D43E260FEBA087F0BC0831BCA3F3CDABFCE86CC6
CAE184B2D2E70158ECF781A3C0B28B692C972868359A60EC828BAFDA2C40A978
82078A3C401623A0C9ED7B749D188267B632CDD9EA1B2153E80088C95B71407B
310262EBD0F0DF62F878625A6ADE4680D3EDB7A40485694CF678A666D3DA4DE8
CC22E139E76624316DD080BD014D207DEAA07233A39A02CA591A5DA73B686EE0
D677A38419E99CE70C53FF5BF9BA09EBFE910668A8E74D6F6B401B52D542B627
7FCC74C8ACD2619845E803E55D96FD1FF3196CC16B0A2D6FA7A53D4450613B6D
D381503511D86A08E164B05F43D652F77E37143B2E58222CD255A39F07923569
ABCDC28D786A3F3BBBF3D26BE7AD8EA61742485150E5541F96F98EB26A319E0A
4F0D1D6F292651076E01AB69BCC36631AA1801CA1E24C9B44387077CDABA41FB
04E5D9F43718A4F191602145A17C256F25A92C259BAD13166D338F02FDC92932
5BA654485E27FC13792BF8598783704E8026D233EEEE9F21517C777FE5B14C75
337CF1EE64CA7541750A53F58BE3772C387C6E48EFC3641A9EA4E4037F84F1DE
0AA9C38983764DCB2FB9DB6751F7C31B556B86C9BB04A75CA357C34155D9568A
0D373A17CC91E222C4F42EBED74361105C9CB7EDA8F37E8656892648517A528F
FC26C01D0037806551994CAF7A5A1030A2CF18087F7E2BDC982DD826C8BC96DD
FA3FC356E1EDC4E350D892CF2438980984F09417CD79F24CDE6E624A3B344442
22B769467BDA33BC394D4128EBBFD04496F4625AF4AE7C6D88F04A33A71876A3
1E584BDE23728255E05A1510D656BFDC209098477C23752552975CEC93700375
0C28B494EF9341B750985841F779CA060F1C362C098E76E62A5EC2809F5DDCA2
B2F7B334E90E1996E45A9D7EEE6FA171CB4D977545CFBF52467DF57E45146998
D9DC3783178C8DB4B0EBB8539B3F2F829CACB406663299FA0939FCF8195CDA01
3A4DD3313EAFD642D3F04F8D04430505BF1A7ED86B919F17B7B0F4B847475013
C494774F14512E440439DC691206067CC556F584599D046AE536DB6087C93FAA
703EEC7A2E1E0CC035BE26A14FBBFD554AC3CC8BC7B4C3737F301A360A636F69
0EA1B058E4BC1F616F6F0160D7F0CA0FD9A4D39EC820E03E963CBF3947E46116
2E7920BDCB016AD94C9041136B913596E3584DA7C611872F3D68F8E83396B741
C0B4D32347777272AF14F9B36D381915F765288872B0DA6971F9323AEBA7B7DD
D821A5C19DF9D9F3C6F69BD096ED658A3DB3BA36704C3D384379D341C4ECC58D
A0A768D92DC1CED875BD3C1E18BEC7A471839FDC6EC6BFE510F180C63CD0B986
8A1A52A24B79137BE3834B7DDA1BF0CD988B6444810E6A6A58AE7C2F43D98587
C94EED53BD6BA6D971C8AC3444EC643F41AB7603DAE87447EAF45A2D42644002
85F6B81AB5B39419480EFD264A86092F084A7CC28485886C4DD4FB301593AB5C
B3C2BF2D19E7DDE7FA9C666E023CA72EC219094012079EDE29E1A5BBC6602E4A
C9E442635E5B7F4E370E95A20D8BCD937FC531C2ACBF8055145A69121EBE68E4
4E7F7F5DED045845B20D854D03F8C72B7B5B5A220FCFE678622E5D51F10F317B
B6D25589224AC951E30E54FB545E0505456C2791936AAACC5B67A22A71A1760A
43136A5DCA16B785953157D230ED01C8CDECA49BA908AFF750697C0940760038
A43040D5C004393FD9502066E255AF31114B31C4AC1D8133976243C9B988979F
9839B61951C20243D05D4AC5C28C310F15AEA54DD1DDEAC00BC5F1703A6ECFC5
1859B3FC75BDB098EA05FA1A1CEBE9B8214992F7A6E6177E799855334DAC3760
EA1B589B5562F3D48650DCB8D65EC207CF1423844608CF1F77EF9C7800176848
359EFD03FF109B6B54A2EB3A3D18E08CC1F7D36D1F00FE8AD1C7CDA6787DCD04
12235D838FC71F9E3CBB1C29477A8098BE634FD17B2A2F4306AC9C0E2C687D1D
9ACE60BEC23EF0719F7941EC91235F1CD4E648077F91D9F219CD8EFD728854E3
A8AB8445DC7B15A2D6F483740A08BE14B7747A8C2F09E28ACBE73C7AC6783217
47C9DA9D6CE8A1418E1D934552D895A6E527D5B909A1DA8B5268744275BFF30E
8A181891B7CAFE834F842FF053946A84029A49BFDC1AA0C266D7C18780538E7B
4B7B54A03F22B2E5AF85C62208B9B5428A23127D752DA417FFE97211A83F8394
5B533AC7CC8423374E97A5E626EAC5A92702762DA8B11D1A2E7FCDE92BF2FEE9
E418AE44482B8D7D314BBF92D3F1CABDC48E9156123182A8C9355D5C9429D7F6
B88EA20514F3453A08F1898F30FB9588358461CDF3022F452D00E6C3F4861082
89E9F1B5E29E5FE0DF993BAC7CE1DA3C50B340864B2AE897B4599F155D61E234
3EA4EAB4D57D768391594AFF7153A7B5D44489DA1F3996AEC4092C1B220F5449
89112CBD3BC340616FA0F98310685F8DEE7A7A5D209265986F92AAF11143DA2F
75607E26481C02A184638BF92CBA44AD89CFE59086EFB789CB6623C51F41FE9A
5F6D3BE27796E51BE6945D1A50ABBA2BBC2A179C3F6B63AC5CD5F878C70F34DA
8EA9C52E9F577338854F4606AD998AFD5A64D6903C9D4584FE31C9C164F9E822
038005C606342ADB568D58986C17F681936A71A434BF2FB7EDAFBAA48EE80A24
737DB83C59061728EFB3E131FF48A71DDD16AEE817088F863F93D3217380A86C
6976BFA4056CF63C59BD9AD6405D76B03E578ABE923B5A9264AF33F25E76CE02
70923A4B9089567A331C0C716850CA543604E9C75C0958B4093D9CE3EB8C164A
C1E2F951093A95041E90928A448D505F73A5206D1099E3DB98A20DD4995A622B
AF7E217A3FDE92D91B98DBB1EB1FD9E60EE0E39B0B29A44362A10F1795E0FB83
1A9C11ADA12F9DFC4AA553ED0681C548295340D8E699350268AB1F0E9E41C167
CE8822C65FBA89150F8DC62FF30C9D7CAA718914FA66EF6ADFB80C3B25D069B2
D7338EFD73A412537F7DB459DE235033054F82689AEB726986BDCB3EC1FB8D88
F1605CEB7402F211B455AAF7A828C534C6C98B86F86760FA5C65BF595550DCC5
F9E14B1DABCDA48C5314CD75FDEE8A6A52787EBD14BADBA2A24C6EFB164CFEEA
E10AC5CFD56E6D697A0B5F072E7235E9B1BA19B953CE9DE783BE36D2A146F3F9
7B88A0725F5C6CC30590CB02D6600DB29CC9FF08027833484674C9ED2EE44D10
C0CE6B2EEAA9BD18EA4D57D9FDA066A17F3ACB2DC5B156DC85AEA94441AF86E3
708B430846E137E6CA0B5436653A968FE24DF8D02DCA9D179FEC22D258A9F7CF
063183A0278A8DE53E7EACBEC64FFD7AF7096F8D035234C4E034396ED7711A93
C36165FB2FD643A7B82B3CD8138BEFBAAC4411B52396E36E2E95C0C01CBAA10C
0032E8E7384836BDE8A66BD66876B6D9766C2C01AD1AB2CAC12FF1A5F241232E
06911FF6B479292C3B71F85539833E865A56BDB99722B6224C27161748515E6D
DAFCA94132C4FF94DB74ED8A0CF161EDA0BF5C04B9F73DA0CC1C786660F544C3
115521AC47F0EC34765C8F998B7C5FC0CE0C53F36A6D58DFE9181891177807A1
A7EE3F82F7477A180FF3D6F876D5E3064BB81E636DD07EB59197AD64F2E723E1
4E152D46F20EB109482768DFC2198D16044BBA796678C9ED23D6194A5CE79413
B8D6DB868A2B8F010172B9CB2C76FEFC4576A763849B040BDCA311A0ACA93809
19BB7EFCF84433ECDC98211391D5C9B8E295CAFE8CB6024D40E18F1FCC7BAC5F
8730FE24D3AAE7AB25DF8A37E992D8580FF57E5ED0D362702FE6F91B1730A230
B9886D898CB6B51822E9C6092E964EE1569620CEB3F86995C281D44D9AF5AC60
1F550D8BD3DBB7A5B18F88BC747DC2510E822259DDA43D30C33DEABD4B27044B
3F72DD84699ED708C0A0CAC3E2A3DCF1CA967D93540E890C37971E766FCFF7D7
4C648A9DBDB12EB900BFD398B6F41DAA0D6861C66AA7F5E3299C87A597B5BD50
276F8595FC6E2DC97AE7BD985281BDF4F0B7DC11B859237D7F5218A3AE67A8BD
EDDBF2F325F764F299102C9C04AE30EB43430F3898F09FCAC9F334426B3814B7
364F1C5172E6D0D74FF44EAB01854639169FD55C4FCB1457887F3881C8F1E9A6
F048078B9A79E0B93DC3FD2161975310567A38E881907F483CFC9E1D0D4D02C5
0583BA113C18825686F9ED9588F06261AF3E8D1343D5482725A8BD3F121C8D28
1DBFB9C2BD9F6C9D816102A7E40B53F1E002F576583BF8FF1FEE3ED0DB577DA2
7E44C03778707B01BCBBB9B720B4DB591254AE4F45B40608B67E85B4B88F3D8C
E2F5A68FDC19A564D2F5B92469BA861C8125409C3FA734449C3B34DADF947075
BE99F218A9B7AC6ED2CEDE02799D369A01933B7A77D83569453709B0561EBACC
669C0E434C8D1FBB1EB0E9F429E9DBAFA06199EA9F11197E2F42F5363EEDA62E
42F06073046F2C7A4C93D9E506537B3F8B46F4C09958817746F7F0F4DF90471A
74615F3E5193A638DEFB454A9231F93CFF3D70DBD451AD8D3821D8208CF7F285
4D1C3C393274062478A200982DD64F5E3A07B796C5936F1E104012569516253E
26F95CCCE957E1A71BF9D6AB72669AC42B377D0867A0AA72945C9492CA5CF6F4
383F779695C9A969DE58BEC9A6FBC5BF379F8BB756EEE562106998F7FBFAF731
3B1FA589C0DD6CAF6A9C4DCE2D32C2686DDBFDB838F67B097BE600F6AEEC2E50
DC73CDE8F9B85C14FF1821B9F35B28EF86C23130DC00C99060EE05DFF3E8A2D0
6FEF8A8810791D8613ABD000197D7542BC10E7F9CF2FDDFE83B006FE1A6D13CC
DE0D15BBF6A5EB4F570CE4ABE74BF86FA717661FCA541B470C3B1834B9865142
CD41554F2E31FD6843FCD5FE1C2CA430B81F6B3FA0BD229C4D853E4EE35CBCE7
2D2BC8018BFC2B6D4481AA22D61B6CF27E0CBD62194A730F87B6DE7DF095E78A
3365B3C1540A2B6AEECE3BF9EE3B1A9713DEE9408C04A34A8FF2E80EF1190E04
2C64C04B581E41AE090FAFC229B9565E5DB354A8BAF39883AE261311CBA4D9D8
C823EE34BEAEDFE1790D4D9371E884AC73D997C484DC86A31704E817265F192A
9EC1F15CA9003CCCE92C7852A537E375DE01E3E1AB1AA8B1F9F6B7432231EE45
EEE4470A70F84918733E82B9619CD87C1C8D14291A37ADC8BDCB7A1D40574117
146FE578D397E8F6383FC4539D3C5601B67D4C5FF21A3089A2D86C79BA59301D
C8AD957193002400959A62CACF5FAA3994DAF557321157F8E4BA84BA0B0D5F21
8C3641E2E126963762CAF6A701DAC4FE7D7D7216335FB2167E415C21463C53E0
66E94A4FC37D85852DA45A6C08FA5072C3891E4D22B3955BC973F46090D631EF
06BC9B62A95FE764579DE0CC5825BE0DEC07FFC5DB8427CF5683A5EE4D7FAB4C
37B6A933F5B344148D1C44B49B3E6398E1051D1F85618EC5E90B487E324D3D06
24F94540BB17EE50DE7F287C29FD4057420614F792804C8C32AF13165D47FEF1
D6AA9194083E2A072F126379A165479BE72057F0D6D0311BF204A5F4A778F24F
684118DCA62967305CC6725518E383D2F9FC2645600785C7B52C4EEB47FA5FD6
40739E1F09D5C68FF3D89A6B610790FD82681B0435C7EA8C1A0A48D971532FBC
4F31A4AA99AC8B08E2C1B671986592AE731096DDF454203496AAD69A05A33493
49C965D9025A5318E3B5373E2FA52F65CB925BDA5C98E98C7BA5E25EE152FE79
A1DD449577EBDC00412F2189F2FF6EC30EC7E3EB3B2FC0384FCD2E9256B4C11C
354D3ADB93059FC37FDDAE13182ED43AF5EE50405693B45BC96AF80597F94E68
51106DCA12520D776DBF675838C2628B2A44F18BE53ECCDFCD8A9EC3103B3D14
CA282F5BE90F14624FECDA0084F4C01F92208CD9062180CE6DB5034F59C44EF1
6E4F69B0C95D4FB124992691C6B55ABA1EB5C901DEF361A14281A2C6A4D5984F
5B2CF2B6CF46F89985CEF36B7032601A68E9DEF97FF74420628308E2B2192AE1
0BB395C2B8D2E868DCB482B6BC9D7F8421138892F4801B79C1074E9F60E7C6C0
4DE9C1949196B0E1A8DFBD3CC4F1740FDFF96B5600B67CD39A57B6212D8B2CDE
517DDCD66E0A7FECAB76E8F772650F2F536D01E01F8249A33A6E064AC1250B4C
879999B04BF7CFC2FFE338033545AFBF576377A48059E6DECA5D00BA874DF50A
7D51AC023B354CC6B692896971F28513592B2818D27CE59F976D08BCDC3AD62B
13E1AF63B076ECB3C414A5EA9704CB5163EF7FF065FE895D0F59D9E57DC8F688
D3EFA611C482EE27E72DA39C71602F38D08ADE5813525F45E00AAAA7D87D8EAC
69E3C8B77D780EF389B8367EC1D47BD36F2734974E27D9D89CBC007B2DDF0203
FFA9E2663DFBDC0645DBF9E7223FBF4676DFF12DE72E6B992F351C44BA5EB447
D47DF39912C7815447E076302A137D76956FB4730DC1693FB50FC9A6326803CA
BE56305EF1BEE321E57FA020941AEE6DAA9042618794543282355C8ABDF75399
E05DA8CAC64684CDC0D55453E4AD7E3886C50E125D3849390BF0AAE1075FA706
818C53BFEA5D7E820D14B945B21C6F1951C2CA3E8D601A41504BB4A514998CA8
23904B973E00E13DEBE6F2AA16264959421967BC159176BB6F1E357944E4BBA3
28C4675F7E13D6E20F68B1392337292E4D9BCC3027FB5FDF1328E678D47CAA10
52EA565B24022072655ECB439ACCF6A30AAE4B0E97E8579FDA32230D5E9D07C0
308D173F66A415AE56A60C360904A44F1D9D2FF079BA6A7224324C88FB22E8ED
9989488691EF21286FD12B3A0C13F16DDFD2A6380D9BD668B82F38D2C47100AF
C39BDE2D34999D5C62A298B8BE48DBAD2AF9D65754260DF346EAD87C49F789AB
423702DC5540ECF1AF84E06E67F64B36C58C36D9C5DF395AEE052A36B63781DF
3540E7C5821B7C8E6EB17563C54AD4C89B993314870C4A8EC4E22EC758419EFF
DAF0A24922D0EAD76F22223262C4B92CCD3F8B25A9BB5BE0D498BED1E50819F9
E235D276FBF4B42CDCFA669AD037E48980F24980598937ECAAD0FE93AB4CE4D7
E2A7F1F31B6D3B841CC164CF031F943E0AB6300724433AE50684C6418DCA39CD
C80D72FE1A5DC1FF7293F6E393B023D822F80909FB8D17358628018BA4E2E9F2
059335A1CAFBC6F35338DE3595FBCF31905BD5481B546420694D1E720D01DA3F
7011B0E993C099446972402534A9E3ED1E6145FC1F369D70BBACA5E086B1D89D
209EB40D344B76C8469A21DE5C42002370A5A03A29925857E8137F87500F97CB
01253BAEABC590415A30C72EAA3DF18EB5A2B085A51176F43B58A0F46C7D1CC3
3153B29706F307F2617EC58E542918A25723862CFE75704F4447A68B94882A56
3F68C1C2F019D308594F24B8ADDF3F1A6A53B1ED45B5EAC4C86285BFAED95267
6CDC78F35DB7739E7D06857C6DBE5AA409D82949732DA9CEBCCB7E1BDCE1C774
72F949CF37F331D74A07ED68849DAF2F4E36609C3302FCA305E0699ED2008CF8
6F2D7144B83C16C1505E7216C85D916D2B46810A35AB0E41A2EC896B931F7FF2
FCDF7DB1DAC71EB7A78EE9D408E8C88B015EAFA9E31E8FD18574BCE0C7DF2717
DF10C2866300B03145F4E9283446DBDE76B48F3612BF96AB695293BC54BCD434
8AB7C5C9007B56DFE90B0043A365C83B407B1E2F17EA18D83C09E0B136D99FEC
15FB707E6C46E39BEDCD1DF172ABE46864D77CFD3599CFFDF13ACF732AB2B485
C792A3A944647CE75AC1B506A23E03061B84FEBD117E0F94EF1F5B91EDEB70C2
414A5800794AD918C3348D35CAFFA91CAD0008F1F89B7EFF71174A661491A4B0
B3962E572AEC34D37343C6235E17981F5E82B21C25636277B50F3312FFE826D8
AC0B73AD7EFA3EB5CA2FC19AFA681BE7790582719F758C89387B6A0C01F44602
B84ABFFB049A99ABA2E5DD32BF9BCE6C5ED068D0F72BF2DFDAC552EAC8753C7C
65D31EFEF6F542AD2BF5F1488ADA9E07FDAA9EF831ED0BB223167282C3F845B0
13A6A2FD03FFA1B752EB829490C1BBF3E1EE16349FCE7756D546878FD7A38A45
F8FA58609A5618209B2E1FF61D78F1335545412F101D44ACBE66CB231A8B57A3
C4AF2B1864009D8C8BC083EA34A3A1C98B475072892FDBC77B62401C82CF9150
3A8E087F786F290A1F3E454420E9B38248AF6098A15C23438662BEA9FBE522F8
90AD17F88718176F2F2360AA3A57FBA206B4E876393E957BA2252874DEAF3D99
DC0139BE365CECC67B62B56D72D3BA136D27A201DC7B0AF2E3909DE8C5040FE6
3058A008B1629EC77993FE53045CB8C5DEC2EEDDF300C954121ECA94D1953CFB
E74945FE7C169D700BB5C6DC203BC739ADF3D1D25D7530B60B18E94930149049
D0FA7E7023B15365226310D645296974F58966A5A608C16581E06C95FA3B8758
A280BD56E6EF15AB7D3917AEA1EE17EAB81C6062C6916887193DFE012C69297C
F5EBA3936E26A15C38F3F7BEE78A1B16BB39C5F2A28B07480AF0C39A12B68F8A
90B3E0A05259BEADB94028E02F87D4382A24A675DD5A8B9FF66D78D738FA3C3D
981B50136AA7EB5AA79C96358CB62C11090EB892A93FB92613967677E61F76A2
EE157CC19DD4C1B90B60CF35C8E4384212E653ADE69B38794E043D5943FE011F
0663FBF7C7CCD1A2F6125F80434F60688940EB1CDFFDB901F985C396992CD9F6
176DA861B013D4FB90FBF7DF413456FC1737B20FF4E6F78A019F1315112CB10D
D03AA3C428A0F2DC6512C5BE771B37DA6D95757F937ED06563066A7F942F3591
F6D3275E7BE9F8F8018EFB11FFC3450DFB3F7622EBB42625D2233078137C896F
92ED3356AC31AB6FA4397FCEE63C240DC263211841D239CA80FC5036770AE4F8
07A99AE2981CA6CB1EB0D97C60D8B1EEDD0C867A743F4F869C69CCC06BDBB449
BB40C660DE3DBBB7D7698BEC4DAD4A609C8977E8FD0F2A2F6F79D57A09B1BDEA
8B3440768B842E6ED56452464A8B54A17258B1400A84C5A74A45E865535C0CA5
F85FB26E4806F0CA720E7754CB570716DEFE4F1C97F932586ECF4D40FE529536
E38FE47DDA14B95F8B9D11B0B1449FC6203922F0175C847D4E293FCDEE0F2214
EA251AE5CA58B376764770196F8592F8BE22B1B49765A741884447AAD43A9C47
201A8F9D035BDF6541F9DF02D5C76C1D42F5EB3F90EAEF6F4C91DD4EC989FEEA
6829DE7B6C2D39C74D66D872D6907AC6B21F53474690F282D2F9C69451C33C9E
AB7F0EA150E1EC8FCFBC5F80C59340C71574C8BB65B35171D35D0A092BB89D28
C4DC21C84AE06F34BBB2BA0B6E94D5094E3C1119E597820E6D7BCED615C21181
00B74E6CF2613C7EEBDDDD4D2E2ED4FCC72531AB617DBCEC9BE8C9C04FEB476D
657B441CA0504A9F037C84715008B83350D8E16F3B0D519E0C946A76324CA4E0
4226B960CC024FE697AACD7C9A8D2E7B25C8491954620432B266A48D82BA159D
2E6F3DB322080E12DC70B09C463F324C0A8B1C38F9CB115C895AF3A2364DFB33
5F39B9F75E1E6D27C13E766056ACA8F14DFCE8B19D94592577A0F2119969FF13
68FBC8ACED504CE71B6F0ACDA6AC8D5D87C8B455847E19B4B42DEEC7BEE4F5BA
E69079BF157A30982E0917BBF608794D94AD815E64F9052FC37D491005BA42F5
91DB52438B650B39AE83C9A98EE93CF1E869EBBEB9C0E351E7D733C2421FF278
E79D1D60A9C167CFAB56609A6CC81E1203A617CC4FEFF1060EDCA4DBF3529E3E
F5058F0BFB0A162DAFE55AD781C2643707478B6F5855E960438C221FBE57F608
52AFB2BC7B41ABCB2AE2039CE1F047E6577C3CE015A840639354107521FFE139
BEF064FB370773837E8CEDA6682307626CA0AEB6E84A2BB381A3A07DCC8A57E4
B1176AC20FE1BD412664565FB890239F1D9A6F3B44511E0771A114B63A461C99
1F6AE327220BEBCED4A20C975A3263ACAEE0E6536A5E18B8E068ABD038D5192D
AA204FDA60C952882D003B76099F98E15927CC1F25ECD45E872D4B49270AED78
97626138E1830C8E046E3C742EBDC2BD227600BA27EF388CB8D7B0331B135AF7
43795AD21E0A16BC974D8F08DC7B16641C15AA46728374A95B646C6113FBA180
EE7B5CAA0249835F399A5539684F0FB82F1B289089718459A84EC6618C032468
0819343A734C6F09BC60B67FAC51D09859DEBB2DB15599EB9807F5EB64616731
0BD41C3D778AADBEB1FD0E5F2E65498D8131C73911629FDE58B6155351FD65B4
580FAA861B6BAFB7DF0A15715151A6EB37DD5207742AE684AD8E546E0ADAB78C
764BAF560E22848201EB53FEDD474BAE0A87865063DDF8AB9EAE49A7B87B15E7
7C82C518E0295A0BA86AF1A757EB8EB83505A330C98762E2C3934B36776180BC
6FA4A8B5F7964B1064E1D7019345A5800CDAFC09A8189280ACE74CD3A7FABF45
5A91E8872C0948B2086FBACC8317A1A4FE4D987C32B9686067BD0B2B720FC514
2AF5CEAA7B94B88A8DB28C6FB030C5C14B85D20A491217304F83DABB66A788D2
098D501925A25C56A0F2D9AF8ABD655BDB2123EE5579200366A07878218E0B7C
A284D2D531C1BA7AF954937C642A636CD897F7E9090B289A55F625E5A4948EFC
E689DE5EF1C0F305FBECAE736AC312DE6165E7E7A8D454C8B1E02B6EFA6909C2
820C9556F4D5EE91FE1A7718F3501F50A6E66618B4149B9DCA783EFE5618E4B4
255D905A2A79CEF4E55AE4653397F6C8F19A96FF00275C2413E294B951AB08CE
AE563B976DC6640847E523290E4F2CE2B16C6209D3FE067267BE5D8BA3A310E1
2087B23AED08B461F088BB8D91B2EE581BCDB0F0036F162CC313E9F4C316E155
1F5358D952588F4A2DB455738DE8A6F672092DC1CBE8ED64417C43097B8E1605
DF97F39FA083B16CE368226982F4888940CDF9311C7A781DD18CE533C2F07979
6450FDE2122F56426B35279C1CAB2A29703B44CB429CFB3EBB54BDBF75316C4B
B2BD93667F182BB60A30FADF1B874DB97AD53D7F9E7A8FA997C16C2988EF7EB9
3686F1C2B4957C957262919AAFC7DC3F3794B9B93CE7A90F7D7F201AD2A48693
DD49CA3BA7CA6FAAB8FA3D4349D0B5102599358B2DE09C4E2629553BAEDAB32D
3F393AB3C160F6AB7AF9E85E44F6FC06DF9CD7791EDA5328CF8DB06FB18EEFA4
2A6F7FBEDF1FC7AA58CCD97EC5F7F9A111BACC856616BC44CAD33975077434A8
AA8121C718B032FB5A04FC9CE2C44B8C6AC1106782153B5661047E80A481343F
00912BA40AC9534106A2D178BBFE301FFA2BF08106520DDDE98071FE6BFD6EA2
A836202D2B1C6EFD43AE48F10E5745B4C729107971F9C537B5D65D7C38EB22F8
8CB224EB30169548EC0B8610901321BAFE2B1B683E3F4814FB9E0C7E8738689D
CCABFCC08878AAE12263C106D8B00CB9BFF097B25ABBA0E273FAC3E62B163355
32DC23F17BD6C80D72A4DB48E98EFFE3DC2C71271180D4928CECCB992A1D9ED4
F5D31B94DE6218956AD0930D059FB52A319C090A62CBC75172F2A46B2073A364
7CC88872810BDEB1CF5805B678740B839A5FC86663E498726199984CACE7E1F1
C4E652CFD9BBD87674B9A3426D3B4D2D60BAD93A2E414FC4413EE0877D5FA60F
DC3039EF77336BDCDF42C3848A2C74287C092B45D93302650CC76D3F41F8ACEE
0667DAA2762B0AAFD92E7AEDD5DDFE9456DCDEE6F046C925950F2ADA1CEA5CA1
466D5C08FB6F0A6E2BA2AEB519FD5EDE7F0441EB7A91FCB5D3B3B8DC377CA2B7
6D0141574DB0AAA58EB64918E9FF1780A6617F48BAB0F10699A1D9EDED3133EA
90671165414D7BCAD6BC0A67C3E818289D0881CCA37C72DBDD5B7FDBBEE7D97A
B8712AEE80C059537CDBCAF86F1B26399166D2295D5D52FECA281F5C8222F770
3336583499022B39E47F526C03AD6AD50F79F49216FEEB9D83C0D7807ADB13D5
008AD245EDAC72F945DA7432B7C4A6DF1AB805765E53F1AD62C94E5E9150BA5E
300663BFF1B1600C9AC4C1AABAB22BD56C25412A9CA304F7AD706EAAE7DCDF5C
9A81F7AA80FC46C6E2CCCABB2EE3AEA4C3EA872AFB36A29485C66BDFCC7C6A88
91F5030705B12381E62CAF888409C4D67031A37A087101B03205F47E6CF7AE69
F7454860FFA1775BADC6D85456BEC54A7029547723038C401498435AC7A14775
0EE6A81F660E29D63F9B43F694BEF8A5178B8CC6CAF073A4E47232042C352A25
D85D17FE4852EC0D60507D08522A5BE313B640E595C064260A77597EA27E2E7D
5BCC51D75D3ABABFE95F8BA3663DE2128D9A11ECC0543B27AC4BD84ADB27E55E
5BB1C8811D3A0D6C578F2B291E96F258FD07919A9F31F7AC697177F1D92A91F6
17A672AAC837F93CD7431C22C23073837B3D362C7728A9EEC6DE1723D6C8596A
634F05D0A21BFEEF455FAF8D772A8A64D56F9D6F5593FFAAD532F4DBA4F7214D
BD463FF5D0B23F2C5902965C74A83D4486F3C6FB3400B34FD2AEFAD58749F23F
3C09ED045A93F01DAD406FB38A0E6A10D44E9AE673C052D960282DA80317F19F
07E8DADF2FD7499D05ED271390649714B231A83BCE97066FC51AD8DCA5469888
9B7D941C14940EBBD9FF90EFAC89AA7EF460F08B0DC585F4FE6101D55C688809
7436DA0A8365632AFBD2780E3A78CC0F31E4C24B275DC6B89ED3C222F4E279DD
AF674946259BFE17E1C5995744FE8483381EAB255737F49E1F795C9DCF71E3D1
A76AE54A3E45AB3CC4E779FFC3ECB92E17562F4116D97A79B0B456DD0B87A37D
F91DBE275B16326FC32B58165F343D68FFD46A7BDE9AA935C7219BEE0D9293C6
91C2518101CD764A092C9547E190F54A15B13075F5C4095C2D2D1EC354219A60
6ADBFCE4BE1EC56CD7B141CEE750BF8E2B09E95B96EEEAB3205A9B3C64D58EFC
EFEC413E2706F9D1F09CA5BD3179739866AEAA39801D26CE9AC612E21F3FACCE
193BC2F8512FAEC749C55588B1A392E9577B7D9E09C82D980DC15719CCAC8107
ACFCBA9F26B23EC76B375DC68474120D38EB287FF322E26FAF5747441E9789B4
E27B31100D9225D108E3121F0B194C2648E6A162849D7059348BF253345ABF42
1E3AFD3E0B401F83B142DF739EEDCA6F80E6E4D69A91B8C037D4F25BD0B9BCCD
1E7389B45F2DAF518A97A30A95021048E986DA354EF392BE4206AA3AA8CA02E2
249CEB16967E61BF119629092589C2CE0356FFE373D7B37781DBE8F07B13F959
E08474B6ED02157512BCA784A1F774D8F0CA02137E1B7D2CCFA48E3E223CD757
23A25F19AF708FC73C4EAA49F1DB3334E4200C650794DE3853CDDCEF44A11C8D
6195173305E2D36EDF759F79A82CD3DECC587AD93BE46EEDF7A4ECE345043133
D237337641BA37219279583D9F6B89968B1A85EECB808541C5FBDAD264EE83FF
B2A7ECCCB8FCFEE5674A4130D1C258F7856D2E8408A41BDF114A0DF75AE3541B
025FA8143D883F6DC28C42C52616C414D014B8E3C9CF6C2BD3424F6C266F8FEB
970B0C8DD9A43A264B586C92BD4737CCAC82D2EE3690A80858FE63172C70D6D6
A4704B951BB02B75FD2C7D040D2BBEE97425770136CB74595324AAC9DA919DDB
8EC27A8330123C22DE08303B47AC0CE62B86BB30E9CDD920B0F7E2C334FD1FE8
8BD230026FD82F7FA9A0A814934ABEFC2BF02AC0916C9094007C60A0553D09E2
9C4FC0AA2D61879E3F24DCD15B3949A0A626D5594F44E202A497B57A2B034A49
94B10351070F6AE7A9CCC609390517962E1AE4F96DE7CB14FEF7F7E87902A845
3F61F6A6F293CD1388796CD12779B278FA394D40F6F52AA0BC5A69CD4FBDCEF3
E210CAA2A0BE575D8DE1064D3D38BCFDB8E2A7919C51D583530B25E89B352D4E
7EDB47F682514E921D0670D22468326F7EC0F7D1C05E94D75C19B795FCCFE750
8761AD844474804CAC7E3345FB1BE2F5FDA203527950EF4D27B8E182D61728AF
21F105B2596B1899B6F8C60A58F859CC9B04D206EFFED8112A27D9A2E65CEF64
600939831607CA2BEA31F189393A7A2EE4C4709BE7D135E20EDE28008A407387
2608176B8146E1082146631EACDD2756D9A8C4F4A0C451B7DF57ABD92CC76AB3
D3C9E190ADCFF7CBFBCBA171C72982EA5B165F2CD2DB2B6884EE4521B8EEA0E0
1DE1DF27E11C147F85A86D01818D49B920CB66073F19236F7EB6B7158AF1977E
B588E8FA01BDC9813C73411AB8458BE391CD5F5FC4379F308F83B0C93B33737E
F557A3146B42DDBD58E8B25AB7ACFFE53151087D47B106D85F842F19DB983DB4
06722D414A69239582D63A48D1F84EA6ADFEB07421F52D23EB75971371412DC7
A8D7F2F8FDABA917C37E79B6D697D9F36878BC6F48EE25B5145D7FBB3BB1A346
F35BBC2248EDDB651805C72B28674EDE424D25D02D0E5FC12D665D5815D7B87C
62004283FBB1F0FFD0916C76E3BC9449230D71D11198A9DA458894A7A622542D
EF4D325676C3DA44F2E1C260395E4E3216412CA717156D061B2FCE50085F926E
2654B5C617435DFAD173245723CDD0F3BA531940F27F7581B88E01A06D0E0318
DC761043EB837C589B4C5EFAA3B34BA565E0E2E895ECB9E564EB5772E36352C6
0DC09BB17BCFA1539C05176D3042502CC6D8A75BC33791B5E0D9C9C3FCE976DA
B4F69548ECB11E580618705FD5351BD970EEAB84A69DD8A7479D926E7CF5A8B6
5A35D930ABE941EAB4BD6A603E86CAD6B81781D956F943DDAFBB02E4DD34DDE6
AC3BF5D3C6633F0867B4ED40B35FA329503215E2709617977915B671D342FB45
5118699DC55B0ACE823CA9947BE326F847566729064B650CA75D55EF3663AF3D
1C400AC2525008859358B3840873961DC3F606847B9D30D0DD1268FECEDF3986
BAABF3F73160E2D0A6A2BB6AAE32F2DD7C6AC34AA68C499E36FAD25C725932DF
7415AAA8C879443075699423B6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB391F7C7
C03F47494A607BAF90BBFE31BE2A5E1FBDB07D5BCEE30EC3FE52FF996A595DB1
2AECFA9F05D26DCBE562B2A1AA7A2EB7727816C25E40F84CD33FAD87D505169A
B09895FB0309DD764439C39934618F046342D75079CA0CA06845F1360E4B169D
A93627B7C042CCC9CC6B085F23312C6D95E4C0C857CCF47F94EC543F43BBA04F
0F7F00F2F9D4AD0E3F3F3A4408EED34039982ED5E5664949215B7B7C699903F9
3ABB681EA8787E7960CFCAF502B7A3066310BE7A115CD32D37F467D24F997A7F
202DD710FB2A129D83D21B29F541766A2AF0CB68D8AB01854639169FD55FDFCB
F7235799769E58B3B6C439210288E13DCA58DFC7FA974B374935E5EEE74DE8F7
C00C0F17D72D35A438A2D077282499EE66592346B0E57ED96115F3B46F7D2984
97B4C1F3ECAB2136F48FCC5A3994E838F181B638C5B15E4AE178C88A4B073683
4E2CC7412135C831B985AFD9737B41DBCCE9E48F09AAE3901292A32E43FA9526
7203BDEB5907C4D1C26D490BF2AC6296D5821F1DFC9DCE3363A253B6B4772B7F
6CAA4533E910ED6920B4D48D8C64FACB2DF3175DD677EA42C6B65FEF53145E41
94B901527264C2A0ED16428CE78D40244A7331983971698F9D8B968FCFE4254E
0A93851A0A7FA810BB42A1F8A6979B8B960E0B9493032B9E3AE82247B356BF53
B36F3086EC749D6A55D7C137BF68AAAE44653382CD0BB796748D55716068049B
9253D5B9611B1AE84831F8AF16025E26E02857985256531D7C069DBF00FBD037
7DE2E9FF04DF8E9E6460CC3DB84FAF35CD894817FC0D8C8479E1ADA7C4C2C6A4
EA1D6448DD30342B119BA81183E79631499FB05BB37008CA217994F9022886D7
CEF5D0E2C09677CE5D9DE33BC79189D8161C295DE9C0DE569497BAE19CE90E5A
AEEAE5373842B78C6FA6DC80584DDA15CFAE943AB110CA5039CB440C6BBBBA50
55916E5EC2B1B3EA0878EFFF30B8ED423EAE5B76C097A1F8BBCA4D58A59899E7
71DC0D2A73720893EA85320CDBFD3C8593257B54B29A254F74BAF08E8361D974
FEF1C1C69664036AAE2384C822701FB034E879F0A74458F6D154095F1D7E11E0
08D8249FEAAB72F6E1CDDF1CB125D82411EE87BBAB865B52AC83E25C53B48542
0B991DAE67DDCD3EEBDD4388B42151D462DBFBD3D5E4CF3BB7AFDA2370E9B0AA
F1077044882E5781898C855166151CC9C9C08E1D59889297131CF505C6C0D0EE
354782EE523924FC28ADA3A7F86E4950A80C715CBAC435126E94CAA2A325060F
21E1BA0A1F90836B84D0DA633E15A6C5DBC1508C6779ABB9E6A4E56BE7AF9965
3E32B16F98DCD34D4FAECEEA29B7E31BE3EEF67E6C296433169F1F8706F71D03
33D655E972C8100F93CB1981DAFE1E7B2B4E1998076321C39A84D737EA96E1E1
7440E8B34CE92636DFBCD7C97CC6B4BD91B9AD0D60672A720756B183D1BD7DE2
385DC5538531510DD103FB77BC044873D366B986F00C505465C39E2A50A0BC12
E317E41E9D66510A49F2686A8AECBBD52352DC566BDC128F106CAEE9744E6988
1BB682EE29AB1C3BD04D63B4C914B317E6F7E4F6363A6A18431CD733349CD8E4
67A9E65A91F3ABAF0A61EE4E7F009B8DCF048A2BCBD77519F1E842F49EEF1A8C
4BD696933DEA51F72E1A1D3DC256D7090F6D5A5E6A777DF25D620D60BC4093C8
AFFC04D220979FB0A42B562618DA8EE6DD3BA8BA773CAAF390FC2F98B3DD7D80
AF5FA1FECBAAB4CBDF7A011D40905C36B1175B1BA3D0880725CD45B3AA5F4A82
F89F5E6AC44A1D1D117873F16706617EC0E29C32BB935211F342C50BB37F78E2
53ABE5631A9CA2070A91486B0A795AA373B8A3D0C39CC48A5F46C39B8DCCF0E9
B00FAA5BB2F7A53F012044A1CB665252C0780891E9F80394D789072A869E2758
7A771699E2A2C2721BD6FD8BEF153757F2EF71B583E858F51D7B7B7D2458D326
51A50CD3A2E9E9760AF25EC067B4C4C7F3C7AEEBA0C57A3C0BD7405F3E3EA7AC
944FA81EC8DF726B8CD6459D660DBA877D10B6407F069D9213C54A3A92E1FAD4
216143F5BB5E099FB20A321CA872E188E08438D4226C06E15849B7B05BE26537
241A6636CE15D2F2B5518A1AF33C842EA2C05395DE771726AF5331E0F5825ED8
B578E13A2D7B4AA93AB17B41C069AF99E4C111EA8641E415DF5E9D12320443F5
0C9412C39785E7FEFDACC08C1A9801ADC0FB287B00C8E4694DF07A4DE0DCB2E5
E7FB5CA68C3306B82DCCFB60C0B08BA94DAC97A00A06AEE7A6245314939CAD97
E9B0B62937D900F8F1DC793B27AC39FF819067BE733AE47AC0335C08265E02CB
8BCCD7E952EF7E900DC93AFDFA07FE3AA1BFCBD185CEEEDB56C2FB783DDCDC45
B7D92766964B7456D04F89A965A4B25896520B8B165DCAAAAEFD1532F1360C25
02D4D04A4C1D94495C96DF86ECAE5514D299D01C5CDF7CCCE96F5081D1F7BC04
F5769208EBF1A89199C56946E8D2C68588DAA061A0815034C29A70AACAEEFEFE
B7248753D9DFC31843EAC1381B8B41D8C503EA83EA4320FBA56B99D595985778
FD4A5BE0A8769B7B57ED367DC4F9B5309A9B35DD69C8000958D29C5363EAC98F
E2F10710881D83BD8E799A51DBB685B08B122F4279C4E5EDC76BB4FF2CE02FA5
672B32FAF840BC88E8A056A88C05BC7BED07D5DBB7EDF007703E65093B4BE271
A28FB4310EF50BCB3BE701007B6C9D2E5A1DD4505E6C2F39F416A71373BE416F
EAC57A5D15C7A2902B70F7026503F5B73CB61B6BC6487F50D41000F5A4AFE0CB
0611A6A7C4BD03545556660C1A98102A160185F9B32E97E93FA8A64AE83A9895
463A5E2A9F1A8CAFA4C73AC5325F63E3D5B142C859C30DE7BBF0F1999BCF6918
4EDCBF18AC61BF0080E6EE00AEBD5B8D8A6E3C9626267B25B52EA9A215360AF5
C5DBE1C63974CDC7BBBAE87DE2E2B1AD26C7853211E88A4FAEFC98F859C23EFF
6244D8E366CFBC6386EC6B148911ABDFD1E6C0CE26009D6090D774A5E61F61E0
D391F8C118522749BF62129DDB4B570B375B710EE1C228B3DB497C5427E1D3D9
68740DB0170DC7173CAD7D54DE200EBCEAFEB9A7E6C385DD92CE1175A59CAA4C
EA340862E0FDD71AAD3003EBFEE3FC1D4877ED5EA6A94C4F669006B25B121DE8
B233ED516FFAE8FBA15CF96FEA0CE6797608821E90C432359054BA6756CF69F1
6CD7090AE08F21E3379F9FA27861705A6C75723A9BBD8F9892139DCF47A5EEA4
77DE8C8044A34903921CB835216EB29495A1343F11B7E5A37C739A689006C339
158DBAC6C6548BF8A9DB74291AE8B644AE07874F7C9B1F21680AC2E331969F38
1E994756A99825C9307B35A2AD501F039992469C01A20E979EDB6476D742F34F
4F10FB9CB01EBC463AF02494F9FE2A43791ACC54AA256676A72C978A89B71BA1
E8F702142F64A849FCE703934548C7CE19CEDB91291E578D0045C8121FFC421F
3C93C0EAB0A9EC47E214868961548DD7A5049B4B90113322C0165A6DE1719DB7
65362B29BEBC379DA82E913393E523FE77D112AA33245E1FBAD8351DDA94DF8D
508CB3DFB63CB9B3D796757C5D6092C036BD517BF3C9CF52604EDDEF3721694C
49B7356973A6CA76BE8966E29A50359D5A27C50153014E973B917A4A0A34459E
A1EDE7EB871DBBD13BCB8198C5C75B500D235C0F9E7637561E5A8F69FD7A8D39
56A34015C415E83AC4E19C9AB2DE25AC855F81B513DE0B49331A7819885C99AA
21EA1331657B80D2B66E408C61F07CE0BAFC651133B57482F0D5DE4ADD5A564D
C1115B9419D58FA859298C2F203DCDA9C79B9EE887646C5E12717F7B8B548760
7E071B93C32C74E2E6A6F1F4F59A3C8D3971F15FA6E5184859BCB1F01735F897
0C86EA75EAE7E49B6A96E37AB08CDCBAD68610128D700F621327AF1E96E6B020
754A67D7CE08B0E51E404017F95CE62A1E3EA0283C578DB9B51036DB03823BD3
7E912EDA8FBDD8332BDFDADD11500FACBE29740DF458614C32AE49A6FAA38A5D
BFF5BDFD931049B0B135C1A7F08C25892B3280AF97493B262B60A47FA5624E30
529BCB1FD354BDA1424D20F7809E5F7377BE9E5C5E64FF955A2838903F5682CB
F877C3C3B021835B019462FEBAE26FE9F169BAAA0BFFA780EA0E97AAD4611F0A
F325E7B455F3C44477F349ADEEEB0E84FC4CF1E63E8F1A032C40101F253A3459
0B3876011BD61B949B12CEEBF3FAFB3BF390CD7A6CFE858570A241EC0C6D3B24
2E6562ED3F8C0567AAD40204BC928FDF64E1BC52D7650E63D1FFE559FC3BA214
6FA153B815BFFF35695997F3EA6A20FF7D2EE82A667AC78A481860C05F3D68F3
3E92834E64482D5D06D0FFB76971AA8C071C995534DDA62BB3880F66B170DB7A
AF848167670364B44F7E535AE7E0F1E75D12C8F67D44F426A1912EB37D37B5AD
6E9BE2DD3EA2C8DF98DA8D093931AEDEF59ABB51520E1E74159B129BE1CD6CB0
3932236ADE2C89F30ADF25C1405B0FA20CDB3C44906AA0499F3A84F40A742168
ED03DE2CAABAEBD5584CE5BF559CC02AA05D612011095DA8E4ED5540EBCC03EB
BBE859633FF522426ED45404F0EB0B6D4E2AC2599739C330E33AA3A377630A79
EF3AF5817F9C3F96B3ED050735C356A357672B4E10AC294F997139C3F87B3725
6DA2700075587BF0B8221007A05F0A40C0C78B33AE26F8C8CA72F20D8A3A0A19
22CE7358658A8EC0427BCC21D1682CF444FDC79D5CA280B01040F64281562F22
6DD4637BA6CDE2FF8CDFDE260924B68B2A5CE7E4AFA31F2E22141186026BC4CC
2D36C18716CFDA3CB3EB803FCDBCC23AAB12C945CE52430894D1F42B2F01EE0B
0584941C96B83EB6AB05BD266D9D38E7837F11A7644D1A3093E40F0DB4D6367D
88D542C05207755AC051123B4B2169E688B3B8C667438FEAF3009118EDC8F1E3
86BCDB42F395070292C6DF0A6E39064A1A0807EEBD75D912F29CD74D2E016B5F
FB35AB68D275352579AA90FD7C1D5FD9C88A0D33A0CE0ACD92F391E21DA29745
861992CB134CB625F8C935564CCC4C4490F92946EE016932F53AFF4468BDC508
735D6CCA867A882FA3EE30B2DA869985C35E2A33A19B2A925C05721D1458AA36
76C3A6A09E7AC0283A9C9E2FA33B7B700F165CB9271B8B16C011668F78BAC98B
BB43A6B7DB4A8A7021D4DC3DF45097680583F4E44F40C4790CFCB6CFF64D8EDF
DB04D66680CD8DB0BEA5819E375362DED804ECC72148188E7F5B4632EA676D4E
46254267A8D9B1442291369DF9DAA0A7082A676AC737B635AE769F2771521D0D
76401BFB13789C87AF5A45BD0B993D7179D63AB2D65FD90BF1C14D26020355B5
342EF3B6D05E1FE498C171CE1F070554D8CE8C7479B50EC71917CDFD75F1EE4F
31FA5502F69D94C3961B5FDB47E438516E51C09878AEFCBAFB7132F0B5EFD7CE
DF2A3CCBB8242CA8BE2FCE7B5694F99C3DAD4CBFB0F73CA477D9B377F592103E
7BDBA0B4117B99C0C5FA5E99A22E813B36C63304C69768D5EC1B6DEB90F2A1B7
B7677C588BD3CFA01A7A389E3C52C5757081581FD12B912CF466ED1171F6F9C4
85F63FC41F71A07BF2E153A3BA54B5A08B624487A6A0FD1F14F2E7B695B8E0F9
4E86E461F96BD3AAC8A38918FAB9FCA9128106A0128C57BD2F1F11F4A9ED2F43
5F6FDECBB997DF8D01DE1E1535667BABD1CAA800BA0C7D09E146CDA869E2F39D
C946D84E73DA39BF16B428465DAB301D2AE3288E8EDEF96AD4AC8860F1D7F723
EFB47B18D23712B1153584BA29DEC09522D32029E5D67F62A75A69244523A745
AE0918CC1FC4EA77000DBF3D952C2FCAEB6E1AF5B0F750289F4CB308077501E4
3E2BFD2B3FB2CF263E273573EE8CE1E40225018CCC7F74CBB4B576CCAC39E573
99D3B4150682E98880B6CEACBDF625100722631DC5E2419DC0321A8AB74F6687
9364447E8A1FF7846584C492C8545446579057919C4FD47370E3510767AFCB6E
779386CEBB8D9F8CA4FC6AC7AB3618150FDEF1EC797BD25DCBE7882D7FD00F6D
D7387B8A826F2414B8277EECAB771449E974E7439C3BE6326A2CB9708E6E0002
BF4C9506FCA2C69712FBE584BAF84A97C2C91BDD18029AC9AAF7BA8867FED9EA
7F315FCA57627473F3F01DB83A472AE47F04B7903EBAC10936875999E7767D76
951346FCB1A2378C9FFADBCD51B6C1AA9041A11007976469BA68BAC97A780BAE
8D836227F06C0A7A3AFB5E8B499A54B9101DDADFEB4999A636FB468FDBE4E3B6
66DA059FB16915CD8DEBD45FC3ED4648BFAF7B09C697D54469E66B00BA6FA4D4
BC8051E6646746272FAE74B8ED6AEE171E096613BFDA4079D9B3860D9FB43D54
05C754AD5671988CD5E2B1D965D8AC5D5546D335C98B9A7905E9DF5C00DA3BB1
FC1D0269F756586A523470BE8E1A9CED0F7B2154C15D0F8E1B9189E06F79DEC3
BBD6B964F35E6CD75B9106C29587E098E941A14857C2CD9E8F7BE57EA0C996C7
DA4039A14C75ABE312EEDC088439116E1DE908C2996E609C1DE1634A24974005
4E99BDA7FEF810DFFDF308630AC63612ED5A8DCA517C670E7301EEAC613FCB99
AEF17760AD8DA7CEA95CCB289AFDACF6FC4E495791CE11C7B1B084A953275E0F
62F0746AD76F61016D5B7C67389C09E3621934C6038EE4EB6100A4872C032830
12517DDFF48894BA97CF8005FBC33BA4E7FCAFCDE14570AC0D8462449AE56636
9C96C78DB4AE61DC2DFA13FFD9EC0C943BEDC7D3F12C7FEEBDABF694E399AE1E
60879E087E15492D9C12300750A1C174AD0A23CF634426A2AD30FA5C40AAA479
6A298C1BAA7803AC8F1AB3B20039843D82B436EC15AEE54699BFAD74AB2A7C9B
3166871D9A8B1C5DDD4D8A5CDD518290B0B4A294DB6B88C9738CEFCF9673B64F
1F8B8F27600DC908E74AF8CEAB79B0A195312342B6B881A42216E37417F1514F
524F6EF1D933210377640783A51651E97115C9313D3189DB1BC2014387B064B1
F331E68066E297EA9EA8C2423E3E4DCF6D426E18DBE792C05CC0882462F00A66
AFE34886533A0EEBDA35F6F3D587A9651168301976E2B34F96B0B4D548434B33
AF5A31CCE763D276CB968D65DEAF5939501ACE03F6B4CAAB9F741249F4F38A77
99527C4904AA52BEECAD917D6E27A7F13ECFAF7D9775FC9789CEEC861AA3D29E
5B0660B313A515B201C1646DF0A042353774BF5486C25F0CEB6B7AB287DE1767
4391202BE9C5971389E95E38424E3295435A170E39AAB3E247706B007F425605
50C4AA093AB92D9A193897C4A80511E101A850E41BD2B9383AB43B9A117A5B41
D831283B0B089C8BAE3A087C9B36CC1DE07456C93C5FB64427AFF2CC1D0C5113
E35FA387C7FE324FE03CC3343DC8C28099849C9B9E9EE6610F24CBDF65B81257
49E1035E0D68EF4F7AD5D3175C2C52C61B54984AE4BE3BF4430A815A9877BCB3
54F2BE10365EA3D3F493ED31E45733D4C32A81C1BEB6290ED82FCC436A97C9DC
ED473EDF24B623B03EBEEA4E5BEEF5DC49003366195630C34C8485AD35E9EB12
75F28F430B643B41F1C51F55E6E555054A3181BBC2ECB2AA416E37964FF7424B
25449FF228AEF4A1F8EEDA5FD80DE2087464920DE3BDE3D419A931129C2865D0
6B4A5B2AD91C4F42E2C8402610083B82FAAEC0B1E7559D32A31A372852B88F9B
0BB39B8D003BC82760B72B67CD0102A08A894FDFF49FA036FA542F00719503D1
BD2681997B2EE20E612181A162006095AB0F59CC8881
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (capstone.dvi)
@start /Fa 139[22 1[26 2[44 44 2[40 5[44 44 40 1[44 26[48
3[53 12[44 44 44 44 44 2[22 46[{ TeXBase1Encoding ReEncodeFont }17
79.1666 /NimbusSanL-ReguItal rf /Fb 137[40 44 26 31 31
37 40 35 44 62 22 2[22 2[22 31 1[32 1[35 13[44 53 2[62
10[62 65[42 2[{ TeXBase1Encoding ReEncodeFont }21 79.1666
/URWPalladioL-Ital rf /Fc 240[34 15[{}1 58.1154 /CMSY7
rf /Fd 134[44 1[62 44 48 26 44 31 48 48 48 48 70 22 2[22
48 48 26 44 48 44 1[44 11[57 1[53 57 1[53 62 5[22 1[62
48 1[57 57 1[57 10[44 44 44 44 44 44 2[22 46[{
 TeXBase1Encoding ReEncodeFont }39 79.1666 /NimbusSanL-Bold
rf /Fe 133[40 44 41 66 45 48 26 34 31 44 48 43 46 70
23 44 19 23 46 44 26 38 48 35 44 40 9[79 57 62 49 42
53 62 48 62 66 75 48 57 26 27 66 60 44 48 61 56 48 62
5[20 20 40 40 40 40 40 40 40 40 40 40 48 20 26 20 2[26
26 22 35[48 48 2[{ TeXBase1Encoding ReEncodeFont }70
79.1666 /URWPalladioL-Roma rf /Ff 137[44 48 26 35 31
48 48 44 48 70 26 48 1[26 1[44 1[40 48 35 48 40 10[62
1[53 48 57 66 1[66 66 1[48 62 1[31 66 1[44 1[66 1[53
62 6[20 40 40 40 40 40 40 40 40 40 3[26 42[48 2[{
 TeXBase1Encoding ReEncodeFont }46 79.1666 /URWPalladioL-Bold
rf /Fg 172[61 66 2[71 5[25 4[66 66 15[51 51 51 49[{
 TeXBase1Encoding ReEncodeFont }9 91.6666 /NimbusSanL-Bold
rf /Fh 169[49 53 45 49 53 57 49 57 53 61 45 2[20 2[45
49 53 53 1[53 65[{ TeXBase1Encoding ReEncodeFont }17
73.3333 /NimbusSanL-Bold rf /Fi 200[32 32 32 32 32 32
32 49[{ TeXBase1Encoding ReEncodeFont }7 58.3333 /NimbusSanL-Regu
rf /Fj 133[33 33 1[48 33 37 19 33 22 37 37 37 37 56 15
2[15 37 37 19 37 37 33 37 37 12[41 44 48 9[48 4[48 44
44 7[37 37 5[37 37 37 1[19 22 19 44[{ TeXBase1Encoding ReEncodeFont }38
66.6667 /NimbusSanL-Regu rf /Fk 139[22 37 26 14[37 41
37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fl 138[23 14 1[16 3[23 4[12 1[21
1[16 3[18 13[23 14[32 68[{ TeXBase1Encoding ReEncodeFont }10
41.6666 /URWPalladioL-Ital rf /Fm 172[61 78 3[97 110
6[65 1[90 21[29 46[{ TeXBase1Encoding ReEncodeFont }7
116.667 /URWPalladioL-Roma rf /Fn 165[62 62 1[93 1[73
57 49 62 73 1[73 78 1[57 68 1[31 78 2[57 72 66 1[73 65[{
 TeXBase1Encoding ReEncodeFont }18 93.3332 /URWPalladioL-Roma
rf /Fo 170[156 123 105 134 2[157 5[67 166 153 3[142 1[156
15[100 7[67 67 40[{ TeXBase1Encoding ReEncodeFont }13
200 /URWPalladioL-Roma rf /Fp 170[124 98 84 107 1[97
126 133 151 3[54 2[89 98 124 113 1[124 65[{
 TeXBase1Encoding ReEncodeFont }14 160 /URWPalladioL-Roma
rf /Fq 173[144 1[122 7[167 6[156 65[{ TeXBase1Encoding ReEncodeFont }4
200 /URWPalladioL-Bold rf /Fr 166[107 3[124 107 1[116
2[133 2[98 124 62 62 133 133 1[98 133 116 67[{
 TeXBase1Encoding ReEncodeFont }14 160 /URWPalladioL-Bold
rf /Fs 175[60 79 21[50 50 5[50 50 50 3[25 44[{
 TeXBase1Encoding ReEncodeFont }8 100 /URWPalladioL-Roma
rf /Ft 166[53 4[49 1[53 1[48 63 8[44 49 62 57 49 62 65[{
 TeXBase1Encoding ReEncodeFont }11 79.9999 /URWPalladioL-Roma
rf /Fu 172[87 111 13[129 118 67[{ TeXBase1Encoding ReEncodeFont }4
166.667 /URWPalladioL-Roma rf /Fv 170[104 82 70 89 105
81 105 111 126 3[45 3[81 1[95 1[104 65[{ TeXBase1Encoding ReEncodeFont }
13 133.333 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -31 705 a @beginspecial 0 @llx
0 @lly 345 @urx 435 @ury 1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 310 1025 a Fu(C)8 b(S)51 b(C)8 b Fv(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Fu(R)8 b Fv(E)g(Q)g(U)g(I)g(R)g(E)g(M)g(E)g(N)g(T)g(S)54
b Fu(D)8 b Fv(O)g(C)g(U)g(M)g(E)g(N)g(T)1531 1225 y Fs(O)t
Ft(C)t(T)s(O)t(B)t(E)t(R)35 b Fs(2)t(9)t(,)d(2)t(0)t(1)t(8)243
1725 y Fq(H)10 b Fr(I)g(G)g(H)60 b Fq(A)10 b Fr(L)n(T)g(I)g(T)g(U)g(D)g
(E)59 b Fq(R)10 b Fr(O)g(C)g(K)g(E)g(T)g(R)q(Y)59 b Fq(P)10
b Fr(R)g(O)g(J)g(E)g(C)g(T)1617 2959 y Fs(P)t Ft(R)t(E)t(P)m(A)t(R)5
b(E)g(D)36 b(F)t(O)t(R)-129 3192 y Fo(O)10 b(S)g(U)60
b(A)10 b Fp(M)g(E)g(R)g(I)g(C)g(A)g(N)59 b Fo(I)10 b
Fp(N)g(S)g(T)g(I)g(T)g(U)g(T)g(E)60 b(O)10 b(F)60 b Fo(A)10
b Fp(E)g(R)g(O)g(N)g(A)g(U)g(T)g(I)g(C)g(S)625 3426 y(A)g(N)g(D)60
b Fo(A)10 b Fp(S)g(T)g(R)g(O)g(N)g(A)g(U)g(T)g(I)g(C)g(S)60
b Fo(\()10 b(A)g(I)g(A)g(A)g(\))584 3609 y Fm(D)c Fn(R)g
Fm(.)35 b(N)6 b Fn(A)g(N)g(C)g(Y)34 b Fm(S)6 b Fn(Q)g(U)g(I)g(R)g(E)g
(S)p 1910 3609 1350 4 v 3410 3609 450 4 v 3088 3651 a
Fl(Signatur)o(e)520 b(Date)1649 3884 y Fs(P)t Ft(R)t(E)t(P)m(A)t(R)5
b(E)g(D)35 b(B)t(Y)1492 4118 y Fo(G)10 b Fp(R)g(O)g(U)g(P)59
b Fo(1)10 b(1)977 4351 y(H)g(A)g(R)s(T)59 b(C)10 b(S)60
b(C)10 b Fp(A)g(P)g(S)g(T)d(O)j(N)g(E)942 4534 y Fm(R)c
Fn(I)g(C)g(K)34 b Fm(M)6 b Fn(E)g(N)g(Z)g(E)g(L)p 1910
4534 1350 4 v 3410 4534 450 4 v 3088 4576 a Fl(Signatur)o(e)520
b(Date)530 4718 y Fm(M)6 b Fn(A)o(T)g(T)g(H)g(E)g(W)34
b Fm(F)6 b Fn(O)g(R)g(S)g(L)g(A)g(N)g(D)p 1910 4718 1350
4 v 3410 4718 450 4 v 3088 4760 a Fl(Signatur)o(e)520
b(Date)1815 4994 y Fk(Abstract)127 5123 y Fj(ABSTRA)n(CT)19
b(This)e(document)g(outlines)g(the)g(customer)g(requirements)g(f)n(or)g
(the)g(2018-2019)h(HAR)n(T)g(Computer)f(Science)h(capstone)g(team.)e
(The)8 5209 y(o)o(v)n(er)o(all)25 b(system)f(as)g(descr)q(ibed)h(will)e
(consist)h(of)f(a)h(frontend,)f(responsib)o(le)h(f)n(or)g(the)f
(collection)g(and)h(processing)h(of)f(r)o(a)o(w)g(telemetr)r(y)f(data,)
f(as)j(w)o(ell)8 5296 y(as)g(a)g(frontend,)e(which)i(is)g(in)f(tur)r(n)
g(responsib)o(le)i(f)n(or)e(the)g(visualization)h(of)f(telemetr)r(y)f
(and)i(stage)g(location.)e(Both)i(of)f(these)h(components)f(will)h(be)8
5382 y(implemented)17 b(on)i(a)g(hardw)o(are)g(g)o(roundstation.)p
eop end
%%Page: 1 2
TeXDict begin 1 1 bop 4018 -296 a Fi(1)-148 -144 y Fg(C)t
Fh(O)t(N)t(T)t(E)t(N)t(T)t(S)-150 80 y Ff(1)178 b(Introduction)3487
b Fe(2)68 224 y(1.1)197 b(Purpose)74 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 368
y(1.2)197 b(Scope)35 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 512 y(1.3)197
b(Glossary)55 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)135 b(2)68 657 y(1.4)197 b(Overview)77
b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(2)-150 880 y Ff(2)178 b(Overall)24 b(Description)3220
b Fe(3)68 1024 y(2.1)197 b(Pr)o(oduct)22 b(Perspective)28
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)68
1168 y(2.2)197 b(Pr)o(oduct)22 b(Functions)j(.)42 b(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)135 b(3)365 1313 y(2.2.1)196 b(Backend)77
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)365
1457 y(2.2.2)196 b(Fr)o(ontend)55 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)135 b(3)68 1601 y(2.3)197 b(User)21 b(Characteristics)28
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)68
1745 y(2.4)197 b(Constraints)20 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(4)68 1890 y(2.5)197
b(Assumptions)19 b(and)k(Dependencies)h(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 2034 y(2.5.1)265 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)135 b(4)365 2178 y(2.5.2)265 b(.)42
b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 2322 y(2.5.3)265 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)135 b(4)365 2467 y(2.5.4)265 b(.)42
b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)68 2611 y(2.6)197 b(Apportioning)21 b(of)i(Requir)o(ements)77
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(4)-150 2834 y Ff(3)178 b(Speci\002c)25
b(Requirements)3128 b Fe(5)68 2979 y(3.1)197 b(Interfaces)23
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
135 b(5)68 3123 y(3.2)197 b(Functional)21 b(Requir)o(ements)33
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)68 3267 y(3.3)197
b(Performance)22 b(Requir)o(ements)f(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(7)p eop end
%%Page: 2 3
TeXDict begin 2 2 bop 4018 -296 a Fi(2)-148 -144 y Fg(1)96
b(I)t Fh(N)t(T)t(R)s(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)-150
26 y Fd(1.1)79 b(Purpose)-150 197 y Fe(The)32 b(purpose)g(of)h(this)f
(document)h(is)f(to)g(pr)o(ovide)h(a)f(detailed)h(description)f(of)h
(the)g(r)o(equir)o(ements)e(for)j(the)e(2018-2019)e(HAR)m(T)h(CS)-150
341 y(sub-team)20 b(softwar)o(e)h(engineering)i(pr)o(oject,)d(and)i
(will)g(serve)f(simultaneously)f(as)h(a)g(r)o(oadmap)g(for)i(pr)o
(oject)d(work)j(and)f(as)e(a)i(r)o(ubric)g(for)-150 485
y(eventual)27 b(evaluation.)f(It)h(will)h(describe)g(the)g(purpose)f
(and)h(scope)f(of)h(the)g(pr)o(oject)f(and)h(speci\002c)f(r)o(equir)o
(ements)g(of)h(the)g(completed)-150 629 y(system.)21
b(It)g(will)i(also)e(detail)h(the)g(interface)g(and)h(the)f(system's)e
(interactions)i(with)g(the)g(HAR)m(T)f(ECE)i(avionics)f(system.)-150
904 y Fd(1.2)79 b(Scope)-150 1074 y Fe(The)21 b(HAR)m(T)f(CS)g(gr)o
(oundstation)h(is)f(a)h(system)f(which)h(r)o(eceives)f(telemetry)h
(data)f(transmitted)h(wir)o(elessly)f(fr)o(om)h(two)g(r)o(emote)g
(systems)-150 1218 y(located)j(on)h(separate)e(stages)g(of)h(a)g
(2-stage)g(r)o(ocket.)g(The)g(job)f(of)i(the)g(gr)o(oundstation)e(is)h
(to)h(interpr)o(et)e(raw)i(telemetry)f(data,)f(calculate)-150
1362 y(derived)29 b(values,)d(and)i(pr)o(ovide)f(an)h(application)e
(which)j(visualizes)c(this)j(data,)f(all)g(in)h(the)g(service)g(of)g
(allowing)g(the)g(gr)o(ound)g(team)-150 1507 y(to)h(track)g(and)g(r)o
(ecover)g(the)g(r)o(ocket)g(stages)f(and)h(determine)g(whether)g(the)g
(tar)o(get)f(altitude)g(is)h(r)o(eached.)g(These)f(displays)f(will)j
(take)-150 1651 y(the)23 b(form)g(of)g(both)g(2-dimensional)g(graphs)f
(\(for)i(parameters)d(including)i(altitude,)f(vertical)g(and)h
(horizontal)g(velocity)-9 b(,)22 b(acceleration,)-150
1795 y(bar)o(ometric)g(pr)o(essur)o(e)e(and)i(thr)o(ust\))g(and)g(also)
g(a)g(3-dimensional)g(visualization)e(of)j(the)f(r)o(ocket)g(stage)f
(trajectories.)-150 2069 y Fd(1.3)79 b(Glossar)q(y)-31
2240 y Fc(\017)95 b Ff(A)-6 b(vionics)32 b Fe(The)d(guidance)i(system)e
(for)i(the)f(r)o(ocket,)g(which)h(contr)o(ols)f(engine)g(ignition)h
(and)f(parachute)g(deployment.)f(The)98 2384 y(avionics)21
b(system)g(also)h(transmits)f(telemetry)g(to)i(a)e(gr)o(oundstation.)
-31 2528 y Fc(\017)95 b Ff(Backend)24 b Fe(The)g(non-user)o(-facing)h
(components)f(of)h(the)f(ultimate)f(system;)g(r)o(esponsible)g(for)j
(the)e(collection,)h(pr)o(ocessing)e(and)98 2672 y(storage)e(of)i
(telemetry)f(data)f(in)i(r)o(eal-time.)-31 2817 y Fc(\017)95
b Ff(Frontend)26 b Fe(The)e(user)o(-facing)h(components)f(of)i(the)e
(ultimate)g(system;)f(r)o(esponsible)h(for)i(the)e(r)o(eal-time)h
(display)f(of)h(telemetry)98 2961 y(data,)c(as)g(well)i(as)e(the)h
(visualization)e(of)j(r)o(ocket)f(stage)f(locations.)-31
3105 y Fc(\017)95 b Ff(HAR)l(T)21 b Fe(High)h(Altitude)g(Rocketry)g(T)
-7 b(eam)-31 3249 y Fc(\017)95 b Ff(Karman)21 b(Line)g
Fe(An)g(altitude)f(of)h(100)e(km)i(above)f(sea)f(level;)i(commonly)g
(understood)g(as)f(the)g(boundary)h(between)f(the)g(Earth's)98
3394 y(atmospher)o(e)g(and)j(outer)f(space.)-31 3538
y Fc(\017)95 b Ff(Non-V)-9 b(olatile)35 b(Storage)c Fe(A)g(type)g(of)h
(computer)f(memory)g(capable)f(of)i(pr)o(eserving)e(data)h(without)g
(the)g(need)h(for)g(constant)98 3682 y(power)-6 b(.)22
b(Also)f(known)i(as)e(persistent)g(storage.)-31 3826
y Fc(\017)95 b Ff(Sub-T)-9 b(eam)23 b Fe(A)f(disciplinary)g(or)g
(task-level)f(subdivision)h(of)h(the)e(lar)o(ger)h(multidisciplinary)g
(HAR)m(T)f(team.)-150 4100 y Fd(1.4)79 b(Over)q(vie)o(w)-150
4271 y Fe(The)31 b(following)h(two)f(sections)f(pr)o(ovide)h(a)f
(description)i(of)f(the)g(necessary)f(system)g(functions)h(and)g(of)h
(system)d(interactions)i(with)-150 4415 y(external)22
b(libraries)f(and)i(data)e(sour)o(ces.)g(The)h(immediately)f(following)
j(section)e Fb(Overall)f(Description)g Fe(discusses)g(the)h(system)f
(in)h(br)o(oad)-150 4559 y(terms)j(and)g(details)f(a)h(number)g(of)h
(important)e(design)h(considerations.)g(The)g(\002nal)f(section)h
Fb(Speci\002c)g(Requir)o(ements)e Fe(enumerates)h(and)-150
4703 y(br)o(eaks)d(down)i(speci\002c)e(r)o(equir)o(ements)g(and)h
(expectations)f(for)i(the)f(\002nal)g(system.)p eop end
%%Page: 3 4
TeXDict begin 3 3 bop 4018 -296 a Fi(3)-148 -144 y Fg(2)96
b(O)p Fh(V)t(E)t(R)t(A)t(L)t(L)33 b Fg(D)t Fh(E)t(S)t(C)t(R)t(I)t(P)t
(T)t(I)t(O)t(N)-150 26 y Fd(2.1)79 b(Pr)n(oduct)24 b(P)n(er)o(spective)
-150 197 y Fe(This)32 b(softwar)o(e)g(will)g(consist)g(of)h(a)f(server)
h(backend)f(which)h(r)o(eceives)e(telemetry)i(data)e(br)o(oadcast)h(by)
g(avionics)g(systems)f(located)-150 341 y(on)j(both)g(stages)e(of)i(a)f
(2-stage)g(r)o(ocket)g(and)h(interpr)o(ets)f(that)g(data)g(into)h
(additional)f(derived)i(values.)d(The)h(server)g(backend)h(will)-150
485 y(communicate)26 b(with)g(a)g(fr)o(ontend)g(application)f(which)i
(pr)o(ovides)e(visualization)f(for)j(raw)g(and)f(interpr)o(eted)f(data)
h(in)g(2-dimensional)-150 629 y(graphs,)21 b(and)i(generates)e(a)h
(3-dimensional)h(model)g(for)g(the)f(location)h(and)f(trajectory)g(of)h
(both)g(stages)d(of)k(the)e(r)o(ocket)g(thr)o(oughout)g(the)-150
774 y(duration)g(of)h(the)f(\003ight.)-150 1048 y Fd(2.2)79
b(Pr)n(oduct)24 b(Functions)-150 1218 y Fe(The)j(\002nal)g(deliverable)
f(can)h(essentially)f(be)h(br)o(oken)g(down)h(into)f(two)h(main)e
(components,)h(her)o(eafter)g(r)o(eferr)o(ed)h(to)f(as)f(the)h(backend)
-150 1362 y(and)22 b(the)g(fr)o(ontend.)-150 1599 y Fa(2.2.1)79
b(Bac)n(k)n(end)-150 1762 y Fe(The)19 b(\002rst)g(component,)g(the)h
(backend,)f(will)h(be)f(r)o(esponsible)f(for)i(the)g(r)o(eceiving)f
(and)h(subsequent)e(pr)o(ocessing)g(of)i(raw)g(telemetry)-9
b(.)19 b(This)-150 1906 y(implies)28 b(two)i(primary)f(functions)g(for)
h(the)f(backend:)g(\002rst,)g(the)g(pr)o(ocessing)f(of)i(telemetry)f
(into)g(a)g(form)h(usable)e(by)h(the)h(fr)o(ontend,)-150
2051 y(and)22 b(second,)g(the)g(storing)g(of)h(telemetry)e(for)i(later)
f(r)o(evisiting.)f(The)g(ability)h(to)g(stor)o(e)f(data)h(is)f(a)h
(critical)g(consideration,)g(as)f(this)h(year)6 b('s)-150
2195 y(launch)24 b(ef)o(fort)g(is)g(only)h(a)e(step)g(towar)o(d)h(the)g
(ultimate)f(goal)h(of)h(launching)f(a)g(r)o(ocket)g(built)f(by)h(OSU)g
(students)f(to)h(above)f(the)h(Karman)-150 2339 y(Line.)c(As)e(such,)h
(all)g(information)h(gather)o(ed)f(during)g(this)g(year)6
b('s)19 b(pr)o(oject)f(should)i(be)f(pr)o(eserved)f(and)h(made)h
(available)d(to)j(subsequent)-150 2483 y(teams,)h(a)g(r)o(equir)o
(ement)h(which)h(necessitates)d(the)i(transfer)g(of)g(data)g(to)g
(non-volatile)g(storage.)-150 2721 y Fa(2.2.2)79 b(F)l(rontend)-150
2883 y Fe(The)21 b(second)g(component,)h(the)f(fr)o(ontend,)h(will)f
(in)g(turn)h(be)f(r)o(esponsible)f(for)i(displaying)e(the)h(pr)o
(ocessed)g(telemetry)g(in)g(a)g(meaningful)-150 3028
y(and)32 b(useful)f(manner)-6 b(.)31 b(This)g(portion)h(of)h(the)e(pr)o
(oduct)h(can)f(be)h(further)g(br)o(oken)g(two)g(into)g(two)f
(sub-components.)g(The)g(\002rst)h(sub-)-150 3172 y(component)24
b(shall)g(display)g(the)g(in-\003ight)h(characteristics)f(of)h(the)f
(airframe)h(including)g(altitude,)e(vertical)h(and)h(horizontal)f
(velocity)-9 b(,)-150 3316 y(acceleration,)31 b(bar)o(ometric)h(pr)o
(essur)o(e)e(and)i(thr)o(ust)f(in)h(a)g(series)f(of)i
(continuously-updated)e(2-dimensional)h(graphs)f(or)h(numerical)-150
3460 y(r)o(eadouts.)25 b(Notably)-9 b(,)26 b(this)g(sub-component)g
(with)g(featur)o(e)g(little)g(if)h(any)f(user)g(interaction.)h(The)f
(second)h(sub-component)e(then)i(will)-150 3605 y(be)e(r)o(esponsible)f
(for)j(the)e(3-dimensional)g(visualization)f(of)i(the)f(two)g(r)o
(ocket)h(stages)e(and)h(their)h(r)o(espective)e(trajectories.)g(Given)i
(that)-150 3749 y(a)32 b(3D)h(\003ight)g(path)f(can)h(pr)o(oceed)f(in)h
(any)g(number)f(of)i(lateral)e(dir)o(ections,)h(it)f(will)h(likely)g
(become)g(necessary)f(to)h(adjust)e(the)i(eye-)-150 3893
y(position)24 b(and/or)i(viewing)f(angle)f(to)h(maintain)f(the)h
(utility)f(of)i(this)e(sub-component.)h(Functionally)-9
b(,)24 b(this)h(means)f(that)g(a)g(degr)o(ee)h(of)-150
4037 y(user)o(-interaction)d(is)f(called)i(for)-6 b(.)-150
4312 y Fd(2.3)79 b(User)22 b(Characteristics)-150 4482
y Fe(The)28 b(types)f(of)h(users)f(who)i(will)f(use)f(this)h(softwar)o
(e)f(fall)h(into)g(two)h(main)e(categories.)h(The)f(\002rst)h(type)f
(of)i(user)e(includes)h(personnel)-150 4626 y(operating)g(the)g(r)o
(ocket,)h(who)g(r)o(equir)o(e)f(the)g(gr)o(oundstation)g(to)h
(accurately)f(r)o(eceive)g(telemetry)g(br)o(oadcasted)g(by)g(the)g(r)o
(ocket)h(in)g(r)o(eal)-150 4770 y(time,)21 b(and)h(pr)o(ovide)f(an)g
(accurate)g(location)g(of)h(the)g(r)o(ocket)f(once)h(landed)g(to)g
(facilitate)e(quick)i(r)o(ecovery)g(of)g(the)f(r)o(ocket.)h(The)f
(operators)-150 4915 y(will)j(also)g(need)g(post-\003ight)g(access)f
(to)h(the)g(r)o(eceived)g(telemetry)f(to)i(analyze)d(the)i(performance)
h(of)f(the)g(r)o(ocket.)g(The)g(second)g(type)f(of)-150
5059 y(user)f(includes)g(observers)f(using)h(the)g(web)g(application)e
(to)j(monitor)f(the)g(condition)h(of)g(the)f(r)o(ocket)g(during)h
(\003ight.)p eop end
%%Page: 4 5
TeXDict begin 4 4 bop 4018 -296 a Fi(4)-150 -144 y Fd(2.4)79
b(Constraints)-150 25 y Fe(The)26 b(softwar)o(e)g(must)g(r)o(eceive)g
(telemetry)g(data)g(br)o(oadcast)f(in)i(r)o(eal-time.)f(The)g(softwar)o
(e)g(must)f(stor)o(e)h(all)g(r)o(eceived)h(and)f(interpr)o(eted)-150
169 y(data)21 b(for)i(later)e(use.)g(The)g(graphical)h(user)f
(interface)h(must)f(be)g(r)o(eliable)g(and)h(dependable.)f(The)h(entir)
o(e)f(system)g(should)g(be)h(capable)e(of)-150 314 y(operating)i(on)g
(minimal)g(har)o(dwar)o(e.)-150 567 y Fd(2.5)79 b(Assumptions)25
b(and)d(Dependencies)-150 736 y Fe(For)h(this)e(system)g(to)h(operate)g
(ther)o(e)g(ar)o(e)f(several)g(key)i(assumptions)c(to)k(consider:)-150
959 y Fa(2.5.1)-150 1121 y Fe(First)g(and)f(for)o(emost)h(is)g(the)f
(ability)h(to)f(actually)g(launch)h(the)f(\002nal)h(r)o(ocket.)g(Given)
g(the)f(natur)o(e)g(of)i(r)o(ocket)e(\003ight,)h(ther)o(e)g(ar)o(e)f(a)
g(number)-150 1265 y(of)g(factors)g(beyond)g(our)g(sub-team's)e(contr)o
(ol)i(which)g(have)f(the)g(potential)g(to)h(interfer)o(e)f(with)h(a)f
(full-scale)h(launch,)f(most)g(notably)g(the)-150 1409
y(weather)-6 b(,)25 b(as)f(poor)h(weather)g(on)g(the)g(day)g(of)h
(launch)f(has)f(the)h(potential)f(to)h(scr)o(ub)g(the)g(entir)o(e)f
(mission.)h(A)f(further)i(caveat)e(to)h(this)f(is)-150
1554 y(that)d(a)f(full-scale)h(launch)g(to)h(our)f(tar)o(get)f
(altitude)h(cannot)g(be)g(conducted)h(locally)-9 b(.)22
b(This)e(r)o(estriction)h(necessitates)e(that)i(HAR)m(T)f(travels)-150
1698 y(to)i(Spaceport)e(America)h(in)h(New)f(Mexico)h(for)g
(full-scale,)g(full-altitude)f(launches,)g(a)g(necessity)g(which)h(is)f
(subject)f(to)i(budgetary)f(and)-150 1842 y(logistical)h
(considerations.)-150 2065 y Fa(2.5.2)-150 2227 y Fe(The)k(second)g
(assumption)e(is)i(that)g(an)f(air)o(-worthy)i(r)o(ocket)f(is)g
(ultimately)f(pr)o(oduced.)h(Our)g(pr)o(oject)g(is)f(part)h(of)h(a)e
(multi-disciplinary)-150 2371 y(ef)o(fort)i(and)f(we)g(ar)o(e)g(r)o
(eliant)g(upon)g(several)f(ME)h(teams)f(for)j(the)e(design)g(and)g
(constr)o(uction)h(of)g(the)f(actual)f(airframe.)h(The)g(failur)o(e)g
(to)-150 2515 y(complete)j(the)f(airframe)h(or)h(a)f(catastr)o(ophic)e
(failur)o(e)i(upon)f(launch)h(has)f(the)h(potential)f(to)i(r)o(ender)f
(telemetry)g(captur)o(e)e(impossible)-150 2659 y(and)22
b(irr)o(elevant.)-150 2882 y Fa(2.5.3)-150 3044 y Fe(The)h(thir)o(d)g
(assumption)f(is)h(that)f(the)i(HAR)m(T)e(ECE)i(sub-team's)e(avionics)h
(system)f(will)h(be)g(fully)h(operational)f(and)g(able)g(to)g(br)o
(oadcast)-150 3188 y(telemetry)j(for)i(any)e(\003ights)h(during)g
(which)g(the)g(gr)o(oundstation)f(softwar)o(e)g(is)g(used.)g(Even)h
(assuming)e(that)h(the)h(avionics)f(system)f(is)-150
3332 y(completed,)17 b(a)g(component)h(failur)o(e)f(while)h
(in-\003ight)g(or)g(high)g(levels)f(of)h(electr)o(omagnetic)f(interfer)
o(ence)h(have)f(the)g(potential)g(to)g(disr)o(upt)-150
3477 y(the)22 b(gr)o(oundstation's)g(ability)g(to)h(r)o(eliably)e(r)o
(eceive)i(telemetry)-9 b(.)22 b(Note)g(that)g(we)h(ar)o(e)f(pr)o
(oceeding)g(under)i(the)e(further)h(assumption)e(that)-150
3621 y(the)h(ECE)h(sub-team)e(will)h(be)g(installing)f(a)h(T)-7
b(elemega)21 b(chip)h(set)f(in)i(the)f(ultimate)f(r)o(ocket.)-150
3844 y Fa(2.5.4)-150 4005 y Fe(Finally)-9 b(,)26 b(we)g(ar)o(e)g
(operating)g(under)h(the)f(assumption)e(that)i(due)g(to)h(budgetary)e
(considerations)i(we)f(will)g(be)g(r)o(e-using)g(the)g(gr)o(ound-)-150
4150 y(station)21 b(har)o(dwar)o(e)h(fr)o(om)g(pr)o(evious)f(years,)g
(which)i(r)o(uns)f(a)g(Linux)g(distribution)g(on)g(a)g(Raspberry)f(Pi)h
(boar)o(d.)-150 4403 y Fd(2.6)79 b(Appor)r(tioning)25
b(of)d(Requirements)-150 4572 y Fe(Curr)o(ently)k(our)h(\002nal)f
(launch)h(is)f(scheduled)h(for)g(June)g(2019,)e(though)h(all)g(systems)
f(should)i(be)f(functionally)h(complete)f(in)h(time)f(for)-150
4716 y(a)e(potential)g(full-scale)h(test)f(launch)h(in)g(April-May)f
(2019.)f(Sub-scale)g(tests)h(beginning)h(in)g(W)l(inter)g(term)f(2019)f
(will)i(also)g(pr)o(ovide)f(an)-150 4861 y(opportunities)d(to)h
(evaluate)f(system)g(components)g(for)i(pr)o(oper)f(function)h(should)f
(they)g(be)g(r)o(eady)g(at)f(that)h(time,)f(In)h(the)g(case)g(that)f
(the)-150 5005 y(pr)o(oject)h(is)g(delayed,)h(some)f(r)o(equir)o
(ements)g(involving)h(the)f(fr)o(ontend)i(can)f(be)f(dismissed)g(or)h
(delayed.)g(Most)g(notably)-9 b(,)22 b(pr)o(ovided)h(that)-150
5149 y(telemetry)d(data)g(is)g(stor)o(ed)g(by)h(the)f(gr)o
(oundstation,)g(the)g(2-dimensional)h(visualization)d(can)i(be)h
(performed)g(by)f(thir)o(d-party)h(softwar)o(e)-150 5293
y(without)f(the)g(use)g(of)h(a)f(specialized)f(web-application.)g
(Analysis)g(of)i(captur)o(ed)e(data)h(could)h(also)f(potentially)f(be)h
(completed)h Fb(after)f Fe(the)-150 5438 y(\003ight)i(rather)g(than)g
(in)g(r)o(eal-time.)g(See)f(Gantt)h(Chart,)g(Figur)o(e)g(1.)p
eop end
%%Page: 5 6
TeXDict begin 5 5 bop 4018 -296 a Fi(5)-148 -144 y Fg(3)96
b(S)t Fh(P)t(E)t(C)t(I)t(FI)t(C)34 b Fg(R)t Fh(E)t(Q)s(U)t(I)t(R)t(E)t
(M)t(E)t(N)t(T)t(S)-150 26 y Fd(3.1)79 b(Interfaces)-150
197 y Fe(As)35 b(discussed)g(above)g(ther)o(e)h(will)g(be)f(two)h
(primary)g(means)f(of)h(user)f(interaction)h(with)g(this)f(system,)g
(each)g(having)h(a)f(varying)-150 341 y(degr)o(ee)c(of)g(actual)e
(interaction.)i(Both)g(means)e(will)i(r)o(equir)o(e)f(the)h(user)f(to)h
(connect)g(to)f(the)h(gr)o(oundstation)f(via)g(a)g(web)g(br)o(owser)h
(or)-150 485 y(similar)22 b(interface.)g(The)f(\002rst)h(point)g(of)h
(user)e(interaction)h(will)h(be)f(strictly)f(passive,)f(and)i(will)h
(involve)f(the)g(display)f(of)i(various)e(\003ight)-150
629 y(characteristics)28 b(via)g(a)g(series)g(of)h(2D)g(graphs)f(and)g
(numerical)h(r)o(eadouts.)e(The)i(second)g(will)g(involve)f(the)h(3D)f
(visualization)f(of)i(the)-150 774 y(\003ight)k(path)e(and)i(location)g
(of)g(stages,)e(and)i(will)g(of)o(fer)g(a)f(mor)o(e)h(dynamic)g(user)f
(experience)g(allowing)h(for)h(the)e(manipulation)f(of)-150
918 y(eye-position)22 b(and/or)h(viewing)f(angle.)-150
1192 y Fd(3.2)79 b(Functional)24 b(Requirements)-150
1362 y Fe(This)31 b(section)i(includes)f(the)g(r)o(equir)o(ements)f
(that)g(specify)h(the)g(fundamental)g(actions)g(of)h(the)f(softwar)o(e)
f(system.)g(Furthermor)o(e,)h(it)-150 1507 y(describes)22
b(the)g(necessary)f(outcomes)h(that)f(ar)o(e)h(expected)f(by)h(the)g
(client.)-150 1651 y Ff(ID:)i(FR1)-150 1795 y Fe(TITLE:)d(Acceleration)
h(Display)-150 1939 y(DESC:)g(The)g(softwar)o(e)f(should)i(display)e
(the)h(curr)o(ent)g(acceleration)g(of)h(the)f(r)o(ocket.)-150
2084 y(RA)-6 b(T)l(:)31 b(The)i(ability)f(to)g(display)g(the)h(curr)o
(ent)f(acceleration)h(being)f(experienced)h(by)g(the)f(r)o(ocket)h
(will)g(allow)f(the)h(gr)o(ound)g(team)f(to)-150 2228
y(monitor)i(for)h(emer)o(gent)e(conditions)h(which)g(may)f(thr)o(eaten)
g(the)g(safety)g(of)i(the)e(airframe)h(or)g(gr)o(ound)g(personnel.)f
(Additionally)-9 b(,)-150 2372 y(acceleration)22 b(information)h(will)f
(be)g(useful)f(for)i(monitoring)g(stage)e(pr)o(ogr)o(ession)g(to)i
(include)f(r)o(ecovery)g(deployment)g(success.)-150 2516
y(DEPEND:)-150 2805 y Ff(ID:)i(FR2)-150 2949 y Fe(TITLE:)d(Altitude)h
(Display)-150 3093 y(DESC:)g(The)g(softwar)o(e)f(should)i(display)e
(the)h(altitude)f(of)i(the)f(r)o(ocket.)-150 3238 y(RA)-6
b(T)l(:)21 b(Given)h(that)g(the)g(goal)g(of)g(HAR)m(T)f(is)h(to)g
(launch)g(a)g(r)o(ocket)g(to)g(a)g(minimum)g(altitude,)f(the)h(display)
f(of)i(curr)o(ent)f(and)g(peak)g(altitude)-150 3382 y(will)g(allow)g
(the)g(team)g(to)g(monitor)h(pr)o(ogr)o(ess)d(and)j(determine)f
(success)f(on)h(the)g(day)-9 b(.)-150 3526 y(DEPEND:)-150
3815 y Ff(ID:)24 b(FR3)-150 3959 y Fe(TITLE:)d(Bar)o(ometric)i(Pr)o
(essur)o(e)d(Display)-150 4103 y(DESC:)i(The)g(softwar)o(e)f(should)i
(display)e(the)h(curr)o(ent)g(bar)o(ometric)g(pr)o(essur)o(e)e
(experienced)i(by)g(the)g(r)o(ocket.)-150 4247 y(RA)-6
b(T)l(:)21 b(The)g(ability)h(to)g(display)f(the)h(curr)o(ent)g(bar)o
(ometric)g(pr)o(essur)o(e)e(being)i(experienced)g(by)g(the)g(r)o(ocket)
g(will)g(allow)g(the)g(gr)o(ound)h(team)-150 4392 y(to)f(monitor)h(for)
g(emer)o(gent)f(conditions)g(which)h(may)e(thr)o(eaten)h(the)g(safety)f
(of)i(the)f(airframe)g(or)g(gr)o(ound)h(personnel.)-150
4536 y(DEPEND:)-150 4824 y Ff(ID:)h(FR4)-150 4969 y Fe(TITLE:)d(Thr)o
(ust)h(Interpr)o(etation)-150 5113 y(DESC:)g(The)g(softwar)o(e)f
(should)i(interpr)o(et)e(the)h(acceleration)g(telemetry)g(into)g(the)g
(thr)o(ust)g(pr)o(ovided)g(by)g(the)g(r)o(ocket)g(motors.)-150
5257 y(RA)-6 b(T)l(:)21 b(Pr)o(oviding)h(the)g(thr)o(ust)g(curve)g(pr)o
(oduced)g(by)g(a)g(r)o(ocket)g(motor)h(allows)e(users)g(to)i(analyze)e
(the)h(r)o(ocket)g(motor)6 b('s)22 b(performance.)p eop
end
%%Page: 6 7
TeXDict begin 6 6 bop 4018 -296 a Fi(6)-150 -144 y Fe(DEPEND:)-150
145 y Ff(ID:)24 b(FR5)-150 289 y Fe(TITLE:)d(Thr)o(ust)h(Display)-150
433 y(DESC:)g(The)g(softwar)o(e)f(should)i(display)e(the)h(curr)o(ent)g
(thr)o(ust)g(level)g(of)g(the)g(r)o(ocket.)-150 577 y(RA)-6
b(T)l(:)31 b(The)i(ability)f(to)g(display)g(the)h(curr)o(ent)f
(acceleration)h(being)f(experienced)h(by)g(the)f(r)o(ocket)h(will)g
(allow)f(the)h(gr)o(ound)g(team)f(to)-150 722 y(monitor)i(for)h(emer)o
(gent)e(conditions)h(which)g(may)f(thr)o(eaten)g(the)g(safety)g(of)i
(the)e(airframe)h(or)g(gr)o(ound)g(personnel.)f(Additionally)-9
b(,)-150 866 y(thr)o(ust)22 b(information)h(will)f(be)g(critical)g(for)
h(monitoring)g(stage)e(pr)o(ogr)o(ession.)-150 1010 y(DEPEND:)i(FR4)
-150 1299 y Ff(ID:)h(FR6)-150 1443 y Fe(TITLE:)d(V)-9
b(elocity)23 b(Interpr)o(etation)-150 1587 y(DESC:)f(The)g(softwar)o(e)
f(should)i(interpr)o(et)e(the)h(acceleration)g(and)g(altitude)g
(telemetry)f(into)i(velocity)f(data.)-150 1731 y(RA)-6
b(T)l(:)21 b(The)i(telemetry)f(data)g(will)h(pr)o(ovide)g(only)g
(information)g(pertaining)f(to)h(the)g(r)o(ocket's)f(orientation,)h
(acceleration,)f(altitude,)g(and)-150 1876 y(GPS)h(position.)g
(Determining)g(the)g(velocity)g(of)h(the)f(r)o(ocket)h(allows)e(users)h
(to)g(corr)o(elate)g(changes)f(in)i(performance)f(with)h(the)f(passing)
-150 2020 y(of)g(speci\002c)e(velocities,)h(such)f(as)h(Mach)f(one.)
-150 2164 y(DEPEND:)-150 2453 y Ff(ID:)j(FR7)-150 2597
y Fe(TITLE:)d(V)-9 b(elocity)23 b(Display)-150 2741 y(DESC:)f(The)g
(softwar)o(e)f(should)i(display)e(the)h(curr)o(ent)g(vertical)g(and)g
(horizontal)g(acceleration)g(of)h(the)f(r)o(ocket.)-150
2885 y(RA)-6 b(T)l(:)23 b(The)i(ability)f(to)h(display)f(the)g(curr)o
(ent)h(vertical)f(and)h(horizontal)g(acceleration)f(of)h(the)g(r)o
(ocket)g(will)g(allow)f(the)h(gr)o(ound)g(team)f(to)-150
3030 y(monitor)f(for)g(emer)o(gent)e(conditions)i(which)g(may)e(thr)o
(eaten)g(the)h(safety)g(of)h(the)f(airframe)g(or)g(gr)o(ound)h
(personnel.)-150 3174 y(DEPEND:)g(FR6)-150 3462 y Ff(ID:)h(FR8)-150
3607 y Fe(TITLE:)d(Flight)i(Path)e(and)h(Location)h(Display)-150
3751 y(DESC:)f(The)g(softwar)o(e)f(should)i(display)e(the)h(\003ight)g
(path)f(and)i(curr)o(ent)f(location)g(of)h(the)f(r)o(ocket.)-150
3895 y(RA)-6 b(T)l(:)19 b(The)h(ability)f(to)i(display)e(the)h
(\003ight)g(path)g(and)g(location)g(of)h(the)f(r)o(ocket)h(will)f
(allow)g(the)g(gr)o(ound)h(team)e(to)i(monitor)f(for)i(emer)o(gent)-150
4039 y(conditions)h(which)g(may)f(thr)o(eaten)g(the)h(safety)f(of)h
(the)f(airframe)h(or)g(gr)o(ound)g(personnel.)f(Additionally)-9
b(,)23 b(stage)f(location)g(information)-150 4184 y(will)g(be)g
(critical)g(to)h(airframe)f(r)o(ecovery)g(ef)o(forts.)-150
4328 y(DEPEND:)h(FR1,)e(FR6)-150 4616 y Ff(ID:)j(FR9)-150
4761 y Fe(TITLE:)d(Data)h(Storage)-150 4905 y(DESC:)g(The)g(softwar)o
(e)f(should)i(r)o(ecor)o(d)f(all)g(pr)o(ocessed)f(data)h(onto)g
(non-volatile)h(storage.)-150 5049 y(RA)-6 b(T)l(:)26
b(As)g(this)g(year)6 b('s)26 b(ef)o(fort)i(is)f(only)g(a)g(stepping)e
(stone)i(towar)o(d)g(the)f(ultimate)g(goal)h(of)h(launching)f(a)f
(student-built)g(r)o(ocket)h(to)g(the)-150 5193 y(Karman)g(Line,)g(it)h
(is)e(critical)i(to)f(make)f(all)h(the)g(data)g(gather)o(ed)g
(available)e(to)i(futur)o(e)g(teams)f(in)h(or)o(der)h(to)f(inform)h
(their)g(subsequent)-150 5338 y(designs.)p eop end
%%Page: 7 8
TeXDict begin 7 7 bop 4018 -296 a Fi(7)-150 -144 y Fe(DEPEND:)23
b(FR4,)e(FR6)-150 275 y Fd(3.3)79 b(P)n(erf)n(ormance)23
b(Requirements)-150 445 y Fe(This)31 b(section)i(pr)o(ovides)e(a)h
(detailed)g(speci\002cation)g(of)g(user)g(interaction)g(with)h(the)f
(softwar)o(e)f(and)i(performance)f(metrics)g(for)h(the)-150
589 y(softwar)o(e.)-150 733 y Ff(ID:)24 b(QR1)-150 878
y Fe(TITLE:)d(T)-7 b(elemetry)22 b(Reception)-150 1022
y(DESC:)g(The)g(softwar)o(e)f(should)i(r)o(eceive)e(telemetry)h(in)g(r)
o(eal-time.)-150 1166 y(RA)-6 b(T)l(:)28 b(The)h(avionics)f(systems)g
(will)h(be)g(br)o(oadcasting)g(telemetry)g(in)g(r)o(eal-time.)f(If)i
(the)f(gr)o(oundstation)f(softwar)o(e)h(is)g(not)g(r)o(eceiving)-150
1310 y(data)22 b(at)f(the)h(same)f(rate,)h(packets)f(of)h(telemetry)g
(data)g(will)g(be)g(lost.)-150 1455 y(DEPEND:)-150 1743
y Ff(ID:)i(QR2)-150 1887 y Fe(TITLE:)d(Real-time)h(V)l(isualization)
-150 2032 y(DESC:)i(The)f(visualization)e(application)h(should)i
(update)e(with)i(telemetry)f(data)g(in)h(r)o(eal-time,)e(as)h(it)g(is)g
(r)o(eceived)h(by)f(the)g(gr)o(oundsta-)-150 2176 y(tion.)-150
2320 y(RA)-6 b(T)l(:)32 b(Monitoring)i(the)g(r)o(ocket's)f(status)e
(while)j(it)g(is)f(in)g(\003ight)h(but)f(not)h(visually)e(tracked)i(is)
f(important)g(in)g(determining)h(if)g(the)-150 2464 y(parachutes)20
b(have)i(deployed,)g(as)g(a)f(failur)o(e)h(at)g(this)f(stage)g(poses)g
(a)h(signi\002cant)g(safety)f(hazar)o(d)g(to)h(personnel)g(on)h(the)f
(gr)o(ound.)-150 2609 y(DEPEND:)h(QR1)-150 2897 y Ff(ID:)h(QR3)-150
3041 y Fe(TITLE:)d(Interactive)h(V)l(isualization)-150
3186 y(DESC:)33 b(The)g(3-dimensional)g(trajectory)g(and)g(location)h
(visualization)d(should)i(be)g(interactive)g(to)g(allow)g(the)g(user)g
(to)g(adjust)f(the)-150 3330 y(eye-position)22 b(and/or)h(viewing)f
(angle.)-150 3474 y(RA)-6 b(T)l(:)29 b(Given)h(that)g(a)f(3D)i
(\003ight)f(path)f(can)h(pr)o(oceed)g(in)h(any)f(number)g(of)g(lateral)
g(dir)o(ections,)g(it)g(will)g(likely)h(become)f(necessary)f(to)-150
3618 y(adjust)21 b(the)h(eye-position)g(and/or)g(viewing)g(angle)g(to)g
(pr)o(event)f(display)h(occlusion)g(and)g(aid)g(in)h(meaningful)f
(location)g(association.)-150 3763 y(DEPEND:)-150 4051
y Ff(ID:)i(QR4)-150 4195 y Fe(TITLE:)d(Data)h(Accessibility)-150
4340 y(DESC:)f(Data)g(should)g(be)g(stor)o(ed)g(in)g(a)g(manner)f
(which)i(is)f(accessible)f(to)h(other)g(users)f(via)h(standar)o(d)f
(text)h(editor)h(applications,)d(and)i(in)-150 4484 y(a)h(form)h(which)
f(is)g(conducive)h(to)f(meaningful)g(pr)o(ocessing)f(via)g(means)h
(such)f(as)h(scripts.)-150 4628 y(RA)-6 b(T)l(:)26 b(As)g(this)g(year)6
b('s)26 b(ef)o(fort)i(is)f(only)g(a)g(stepping)e(stone)i(towar)o(d)g
(the)f(ultimate)g(goal)h(of)h(launching)f(a)f(student-built)g(r)o
(ocket)h(to)g(the)-150 4772 y(Karman)g(Line,)g(it)h(is)e(critical)i(to)
f(make)f(all)h(the)g(data)g(gather)o(ed)g(available)e(to)i(futur)o(e)g
(teams)f(in)h(or)o(der)h(to)f(inform)h(their)g(subsequent)-150
4917 y(designs.)-150 5061 y(DEPEND:)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
